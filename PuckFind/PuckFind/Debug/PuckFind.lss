
PuckFind.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  000014c2  00001556  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014c2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007f  0080011a  0080011a  00001570  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001570  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000015a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  000015e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002afd  00000000  00000000  000017d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000013e6  00000000  00000000  000042cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001a9c  00000000  00000000  000056b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005c4  00000000  00000000  00007150  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000bfb  00000000  00000000  00007714  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000232e  00000000  00000000  0000830f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f0  00000000  00000000  0000a63d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 07 01 	jmp	0x20e	; 0x20e <__ctors_end>
       4:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
       8:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
       c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      10:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      14:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      18:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      1c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      20:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      24:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      28:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__vector_10>
      2c:	0c 94 a3 02 	jmp	0x546	; 0x546 <__vector_11>
      30:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      34:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      38:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      3c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      40:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      44:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      48:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      4c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      50:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      54:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      58:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      5c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      60:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      64:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      68:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      6c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      70:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      74:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      78:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      7c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      80:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      84:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      88:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      8c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      90:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      94:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      98:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      9c:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      a0:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      a4:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>
      a8:	0c 94 24 01 	jmp	0x248	; 0x248 <__bad_interrupt>

000000ac <__trampolines_end>:
      ac:	46 72       	andi	r20, 0x26	; 38
      ae:	6f 6e       	ori	r22, 0xEF	; 239
      b0:	74 00       	.word	0x0074	; ????

000000b2 <__c.2169>:
      b2:	4c 65 66 74 00                                      Left.

000000b7 <__c.2167>:
      b7:	52 69 67 68 74 00                                   Right.

000000bd <descriptor_list>:
      bd:	00 01 00 00 54 01 12 00 02 00 00 11 01 43 00 03     ....T........C..
      cd:	00 00 0d 01 04 01 03 09 04 f9 00 12 02 03 09 04     ................
      dd:	f1 00 06 03 03 09 04 e7 00 08                       ..........

000000e7 <string3>:
      e7:	08 03 34 00 31 00 30 00 00 00                       ..4.1.0...

000000f1 <string2>:
      f1:	06 03 4d 00 32 00 00 00                             ..M.2...

000000f9 <string1>:
      f9:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
     109:	65 00 00 00                                         e...

0000010d <string0>:
     10d:	04 03 09 04                                         ....

00000111 <config1_descriptor>:
     111:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
     121:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
     131:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
     141:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
     151:	40 00 00                                            @..

00000154 <device_descriptor>:
     154:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
     164:	03 01                                               ..

00000166 <endpoint_config_table>:
     166:	00 01 c1 12 01 80 36 01 81 36                       ......6..6

00000170 <__c.2242>:
     170:	20 20 20 2d 2d 2d 20 20 20 00                          ---   .

0000017a <__c.2240>:
     17a:	46 37 3a 20 00                                      F7: .

0000017f <__c.2238>:
     17f:	20 20 20 2d 2d 2d 20 20 20 00                          ---   .

00000189 <__c.2236>:
     189:	46 36 3a 20 00                                      F6: .

0000018e <__c.2234>:
     18e:	20 20 20 2d 2d 2d 20 20 20 00                          ---   .

00000198 <__c.2232>:
     198:	46 35 3a 20 00                                      F5: .

0000019d <__c.2230>:
     19d:	20 20 20 2d 2d 2d 20 20 20 00                          ---   .

000001a7 <__c.2228>:
     1a7:	46 34 3a 20 00                                      F4: .

000001ac <__c.2226>:
     1ac:	20 20 20 2d 2d 2d 20 20 20 00                          ---   .

000001b6 <__c.2224>:
     1b6:	46 31 3a 20 00                                      F1: .

000001bb <__c.2222>:
     1bb:	20 20 20 2d 2d 2d 20 20 20 00                          ---   .

000001c5 <__c.2220>:
     1c5:	46 30 3a 20 00                                      F0: .

000001ca <__c.2218>:
     1ca:	20 20 20 2d 2d 2d 20 20 20 00                          ---   .

000001d4 <__c.2216>:
     1d4:	44 37 3a 20 00                                      D7: .

000001d9 <__c.2214>:
     1d9:	20 20 20 2d 2d 2d 20 20 20 00                          ---   .

000001e3 <__c.2212>:
     1e3:	44 36 3a 20 00                                      D6: .

000001e8 <__c.2210>:
     1e8:	20 20 20 2d 2d 2d 20 20 20 00                          ---   .

000001f2 <__c.2208>:
     1f2:	44 34 3a 20 00                                      D4: .

000001f7 <__c.2206>:
     1f7:	20 20 20 2d 2d 2d 20 20 20 00                          ---   .

00000201 <__c.2190>:
     201:	42 61 63 6b 2f 54 6f 6f 20 4c 6f 77 00              Back/Too Low.

0000020e <__ctors_end>:
     20e:	11 24       	eor	r1, r1
     210:	1f be       	out	0x3f, r1	; 63
     212:	cf ef       	ldi	r28, 0xFF	; 255
     214:	da e0       	ldi	r29, 0x0A	; 10
     216:	de bf       	out	0x3e, r29	; 62
     218:	cd bf       	out	0x3d, r28	; 61

0000021a <__do_copy_data>:
     21a:	11 e0       	ldi	r17, 0x01	; 1
     21c:	a0 e0       	ldi	r26, 0x00	; 0
     21e:	b1 e0       	ldi	r27, 0x01	; 1
     220:	e2 ec       	ldi	r30, 0xC2	; 194
     222:	f4 e1       	ldi	r31, 0x14	; 20
     224:	02 c0       	rjmp	.+4      	; 0x22a <__do_copy_data+0x10>
     226:	05 90       	lpm	r0, Z+
     228:	0d 92       	st	X+, r0
     22a:	aa 31       	cpi	r26, 0x1A	; 26
     22c:	b1 07       	cpc	r27, r17
     22e:	d9 f7       	brne	.-10     	; 0x226 <__do_copy_data+0xc>

00000230 <__do_clear_bss>:
     230:	21 e0       	ldi	r18, 0x01	; 1
     232:	aa e1       	ldi	r26, 0x1A	; 26
     234:	b1 e0       	ldi	r27, 0x01	; 1
     236:	01 c0       	rjmp	.+2      	; 0x23a <.do_clear_bss_start>

00000238 <.do_clear_bss_loop>:
     238:	1d 92       	st	X+, r1

0000023a <.do_clear_bss_start>:
     23a:	a9 39       	cpi	r26, 0x99	; 153
     23c:	b2 07       	cpc	r27, r18
     23e:	e1 f7       	brne	.-8      	; 0x238 <.do_clear_bss_loop>
     240:	0e 94 26 01 	call	0x24c	; 0x24c <main>
     244:	0c 94 5f 0a 	jmp	0x14be	; 0x14be <_exit>

00000248 <__bad_interrupt>:
     248:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000024c <main>:
 * Team DAYS (13)
 */ 

 #include "robockey.h"

int main(void){
     24c:	cf 93       	push	r28
     24e:	df 93       	push	r29
     250:	cd b7       	in	r28, 0x3d	; 61
     252:	de b7       	in	r29, 0x3e	; 62
     254:	62 97       	sbiw	r28, 0x12	; 18
     256:	0f b6       	in	r0, 0x3f	; 63
     258:	f8 94       	cli
     25a:	de bf       	out	0x3e, r29	; 62
     25c:	0f be       	out	0x3f, r0	; 63
     25e:	cd bf       	out	0x3d, r28	; 61
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     260:	2f eb       	ldi	r18, 0xBF	; 191
     262:	87 e2       	ldi	r24, 0x27	; 39
     264:	99 e0       	ldi	r25, 0x09	; 9
     266:	21 50       	subi	r18, 0x01	; 1
     268:	80 40       	sbci	r24, 0x00	; 0
     26a:	90 40       	sbci	r25, 0x00	; 0
     26c:	e1 f7       	brne	.-8      	; 0x266 <main+0x1a>
     26e:	00 c0       	rjmp	.+0      	; 0x270 <main+0x24>
     270:	00 00       	nop
	m_wait(3000);
	// System prescaler
	m_clockdivide(3);
     272:	e1 e6       	ldi	r30, 0x61	; 97
     274:	f0 e0       	ldi	r31, 0x00	; 0
     276:	80 e8       	ldi	r24, 0x80	; 128
     278:	80 83       	st	Z, r24
     27a:	83 e0       	ldi	r24, 0x03	; 3
     27c:	80 83       	st	Z, r24
	// Initialize usb
	m_usb_init();
     27e:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <m_usb_init>
	// Initialize motor
	motor_init();
     282:	0e 94 8e 01 	call	0x31c	; 0x31c <motor_init>
	int pt_data[NUM_PTS];
	
	// Find puck direction and turn to face it
	int i = 0;
	while (1) {
		read_pts(pt_data); // Get ADC phototransistor pt_datas
     286:	ce 01       	movw	r24, r28
     288:	01 96       	adiw	r24, 0x01	; 1
     28a:	0e 94 16 05 	call	0xa2c	; 0xa2c <read_pts>
		// If facing puck, turn on green lights
		int direction = get_turn(pt_data);
     28e:	ce 01       	movw	r24, r28
     290:	01 96       	adiw	r24, 0x01	; 1
     292:	0e 94 68 05 	call	0xad0	; 0xad0 <get_turn>
     296:	7c 01       	movw	r14, r24
		if (++i % 40 == 0) {
     298:	01 e0       	ldi	r16, 0x01	; 1
     29a:	10 e0       	ldi	r17, 0x00	; 0
     29c:	0f 2e       	mov	r0, r31
     29e:	f8 e2       	ldi	r31, 0x28	; 40
     2a0:	cf 2e       	mov	r12, r31
     2a2:	d1 2c       	mov	r13, r1
     2a4:	f0 2d       	mov	r31, r0
			i = 0;
     2a6:	a1 2c       	mov	r10, r1
     2a8:	b1 2c       	mov	r11, r1
     2aa:	2d c0       	rjmp	.+90     	; 0x306 <main+0xba>
	int pt_data[NUM_PTS];
	
	// Find puck direction and turn to face it
	int i = 0;
	while (1) {
		read_pts(pt_data); // Get ADC phototransistor pt_datas
     2ac:	ce 01       	movw	r24, r28
     2ae:	01 96       	adiw	r24, 0x01	; 1
     2b0:	0e 94 16 05 	call	0xa2c	; 0xa2c <read_pts>
		// If facing puck, turn on green lights
		int direction = get_turn(pt_data);
     2b4:	ce 01       	movw	r24, r28
     2b6:	01 96       	adiw	r24, 0x01	; 1
     2b8:	0e 94 68 05 	call	0xad0	; 0xad0 <get_turn>
     2bc:	7c 01       	movw	r14, r24
		if (++i % 40 == 0) {
     2be:	0f 5f       	subi	r16, 0xFF	; 255
     2c0:	1f 4f       	sbci	r17, 0xFF	; 255
     2c2:	c8 01       	movw	r24, r16
     2c4:	b6 01       	movw	r22, r12
     2c6:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__divmodhi4>
     2ca:	89 2b       	or	r24, r25
     2cc:	e1 f4       	brne	.+56     	; 0x306 <main+0xba>
			i = 0;
			printADC(pt_data); // Print ADC values to usb
     2ce:	ce 01       	movw	r24, r28
     2d0:	01 96       	adiw	r24, 0x01	; 1
     2d2:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <printADC>
			if (direction < 0) {
     2d6:	ff 20       	and	r15, r15
     2d8:	2c f4       	brge	.+10     	; 0x2e4 <main+0x98>
				m_usb_tx_string("Right");
     2da:	87 eb       	ldi	r24, 0xB7	; 183
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
     2e2:	0c c0       	rjmp	.+24     	; 0x2fc <main+0xb0>
			} else if (direction > 0) {
     2e4:	1e 14       	cp	r1, r14
     2e6:	1f 04       	cpc	r1, r15
     2e8:	2c f4       	brge	.+10     	; 0x2f4 <main+0xa8>
				m_usb_tx_string("Left");
     2ea:	82 eb       	ldi	r24, 0xB2	; 178
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
     2f2:	04 c0       	rjmp	.+8      	; 0x2fc <main+0xb0>
			} else {
				m_usb_tx_string("Front");
     2f4:	8c ea       	ldi	r24, 0xAC	; 172
     2f6:	90 e0       	ldi	r25, 0x00	; 0
     2f8:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
			}
			m_usb_tx_char(13);
     2fc:	8d e0       	ldi	r24, 0x0D	; 13
     2fe:	0e 94 0a 02 	call	0x414	; 0x414 <m_usb_tx_char>
	while (1) {
		read_pts(pt_data); // Get ADC phototransistor pt_datas
		// If facing puck, turn on green lights
		int direction = get_turn(pt_data);
		if (++i % 40 == 0) {
			i = 0;
     302:	0a 2d       	mov	r16, r10
     304:	1b 2d       	mov	r17, r11
			} else {
				m_usb_tx_string("Front");
			}
			m_usb_tx_char(13);
		}
		int med_direction = median_filter_directions(direction);
     306:	c7 01       	movw	r24, r14
     308:	0e 94 78 06 	call	0xcf0	; 0xcf0 <median_filter_directions>
		if (med_direction == 0) {
     30c:	00 97       	sbiw	r24, 0x00	; 0
     30e:	19 f4       	brne	.+6      	; 0x316 <main+0xca>
			motor_stop();
     310:	0e 94 c8 01 	call	0x390	; 0x390 <motor_stop>
     314:	cb cf       	rjmp	.-106    	; 0x2ac <main+0x60>
		} else {
			turn_to_puck(med_direction); // Turn to face puck
     316:	0e 94 ca 05 	call	0xb94	; 0xb94 <turn_to_puck>
     31a:	c8 cf       	rjmp	.-112    	; 0x2ac <main+0x60>

0000031c <motor_init>:
#define PI 3.14159

// Initialize motor
void motor_init() {
	// Digital output pins
	set(DDRB, 1); // A-IN 1
     31c:	21 9a       	sbi	0x04, 1	; 4
	set(DDRB, 2); // A-IN 2
     31e:	22 9a       	sbi	0x04, 2	; 4
	set(DDRB, 3); // B-IN 1
     320:	23 9a       	sbi	0x04, 3	; 4
	set(DDRB, 7); // B-IN 2
     322:	27 9a       	sbi	0x04, 7	; 4

	set(PORTB, 1);
     324:	29 9a       	sbi	0x05, 1	; 5
	clear(PORTB, 2);
     326:	2a 98       	cbi	0x05, 2	; 5
	set(PORTB, 3);
     328:	2b 9a       	sbi	0x05, 3	; 5
	clear(PORTB, 7);
     32a:	2f 98       	cbi	0x05, 7	; 5

	// Timer 1
	// Prescale timer clock
	clear(TCCR1B, CS12);
     32c:	e1 e8       	ldi	r30, 0x81	; 129
     32e:	f0 e0       	ldi	r31, 0x00	; 0
     330:	80 81       	ld	r24, Z
     332:	8b 7f       	andi	r24, 0xFB	; 251
     334:	80 83       	st	Z, r24
	set(TCCR1B, CS11);
     336:	80 81       	ld	r24, Z
     338:	82 60       	ori	r24, 0x02	; 2
     33a:	80 83       	st	Z, r24
	clear(TCCR1B, CS10);
     33c:	80 81       	ld	r24, Z
     33e:	8e 7f       	andi	r24, 0xFE	; 254
     340:	80 83       	st	Z, r24

	// Set timer mode (UP to 0x00FF, PWM mode)
	clear(TCCR1B, WGM13);
     342:	80 81       	ld	r24, Z
     344:	8f 7e       	andi	r24, 0xEF	; 239
     346:	80 83       	st	Z, r24
	set(TCCR1B, WGM12);
     348:	80 81       	ld	r24, Z
     34a:	88 60       	ori	r24, 0x08	; 8
     34c:	80 83       	st	Z, r24
	clear(TCCR1A, WGM11);
     34e:	e0 e8       	ldi	r30, 0x80	; 128
     350:	f0 e0       	ldi	r31, 0x00	; 0
     352:	80 81       	ld	r24, Z
     354:	8d 7f       	andi	r24, 0xFD	; 253
     356:	80 83       	st	Z, r24
	set(TCCR1A, WGM10);
     358:	80 81       	ld	r24, Z
     35a:	81 60       	ori	r24, 0x01	; 1
     35c:	80 83       	st	Z, r24

	// Set Channel A compare output (Set at OCR1A, clear at rollover)
	set(TCCR1A, COM1A1);
     35e:	80 81       	ld	r24, Z
     360:	80 68       	ori	r24, 0x80	; 128
     362:	80 83       	st	Z, r24
	set(TCCR1A, COM1A0);
     364:	80 81       	ld	r24, Z
     366:	80 64       	ori	r24, 0x40	; 64
     368:	80 83       	st	Z, r24

	// Set Channel B compare output (Set at OCR1B, clear at rollover)
	set(TCCR1A, COM1B1);
     36a:	80 81       	ld	r24, Z
     36c:	80 62       	ori	r24, 0x20	; 32
     36e:	80 83       	st	Z, r24
	set(TCCR1A, COM1B0);
     370:	80 81       	ld	r24, Z
     372:	80 61       	ori	r24, 0x10	; 16
     374:	80 83       	st	Z, r24

	// Initialize OCR1A/B
	OCR1A = 0xBF;
     376:	8f eb       	ldi	r24, 0xBF	; 191
     378:	90 e0       	ldi	r25, 0x00	; 0
     37a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     37e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	OCR1B = 0xBF;
     382:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     386:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>

	// Enable B5/6 output
	set(DDRB, 6);
     38a:	26 9a       	sbi	0x04, 6	; 4
	set(DDRB, 5);
     38c:	25 9a       	sbi	0x04, 5	; 4
     38e:	08 95       	ret

00000390 <motor_stop>:
}

// Stop motor
void motor_stop() {
	clear(PORTB, 1);
     390:	29 98       	cbi	0x05, 1	; 5
	clear(PORTB, 2);
     392:	2a 98       	cbi	0x05, 2	; 5
	clear(PORTB, 3);
     394:	2b 98       	cbi	0x05, 3	; 5
	clear(PORTB, 7);
     396:	2f 98       	cbi	0x05, 7	; 5
     398:	08 95       	ret

0000039a <turn_in_place>:
}

// Turn in place - right if true or left if false
// Speed is an int between 0 and 255
void turn_in_place(bool right, int speed) {
	if (right) {
     39a:	88 23       	and	r24, r24
     39c:	89 f0       	breq	.+34     	; 0x3c0 <turn_in_place+0x26>
		OCR1A = 255 - speed;
     39e:	8f ef       	ldi	r24, 0xFF	; 255
     3a0:	90 e0       	ldi	r25, 0x00	; 0
     3a2:	86 1b       	sub	r24, r22
     3a4:	97 0b       	sbc	r25, r23
     3a6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     3aa:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		OCR1B = 255 - speed;
     3ae:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     3b2:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
		set(PORTB, 1);
     3b6:	29 9a       	sbi	0x05, 1	; 5
		clear(PORTB, 2);
     3b8:	2a 98       	cbi	0x05, 2	; 5
		clear(PORTB, 3);
     3ba:	2b 98       	cbi	0x05, 3	; 5
		set(PORTB, 7);
     3bc:	2f 9a       	sbi	0x05, 7	; 5
     3be:	08 95       	ret
	} else {
		OCR1A = 255 - speed;
     3c0:	8f ef       	ldi	r24, 0xFF	; 255
     3c2:	90 e0       	ldi	r25, 0x00	; 0
     3c4:	86 1b       	sub	r24, r22
     3c6:	97 0b       	sbc	r25, r23
     3c8:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     3cc:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		OCR1B = 255 - speed;
     3d0:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     3d4:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
		clear(PORTB, 1);
     3d8:	29 98       	cbi	0x05, 1	; 5
		set(PORTB, 2);
     3da:	2a 9a       	sbi	0x05, 2	; 5
		set(PORTB, 3);
     3dc:	2b 9a       	sbi	0x05, 3	; 5
		clear(PORTB, 7);
     3de:	2f 98       	cbi	0x05, 7	; 5
     3e0:	08 95       	ret

000003e2 <m_usb_init>:
	phex(i);
}

void m_usb_tx_hexchar(unsigned char i)
{
	phex(i);
     3e2:	81 e0       	ldi	r24, 0x01	; 1
     3e4:	80 93 d7 00 	sts	0x00D7, r24	; 0x8000d7 <__TEXT_REGION_LENGTH__+0x7e00d7>
     3e8:	80 ea       	ldi	r24, 0xA0	; 160
     3ea:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
     3ee:	82 e1       	ldi	r24, 0x12	; 18
     3f0:	89 bd       	out	0x29, r24	; 41
     3f2:	09 b4       	in	r0, 0x29	; 41
     3f4:	00 fe       	sbrs	r0, 0
     3f6:	fd cf       	rjmp	.-6      	; 0x3f2 <m_usb_init+0x10>
     3f8:	80 e9       	ldi	r24, 0x90	; 144
     3fa:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
     3fe:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7e00e0>
     402:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <usb_configuration>
     406:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <__data_end>
     40a:	8c e0       	ldi	r24, 0x0C	; 12
     40c:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
     410:	78 94       	sei
     412:	08 95       	ret

00000414 <m_usb_tx_char>:
     414:	cf 93       	push	r28
     416:	df 93       	push	r29
     418:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <usb_configuration>
     41c:	99 23       	and	r25, r25
     41e:	09 f4       	brne	.+2      	; 0x422 <m_usb_tx_char+0xe>
     420:	4c c0       	rjmp	.+152    	; 0x4ba <m_usb_tx_char+0xa6>
     422:	9f b7       	in	r25, 0x3f	; 63
     424:	f8 94       	cli
     426:	24 e0       	ldi	r18, 0x04	; 4
     428:	20 93 e9 00 	sts	0x00E9, r18	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     42c:	20 91 1b 01 	lds	r18, 0x011B	; 0x80011b <transmit_previous_timeout>
     430:	22 23       	and	r18, r18
     432:	49 f0       	breq	.+18     	; 0x446 <m_usb_tx_char+0x32>
     434:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     438:	25 fd       	sbrc	r18, 5
     43a:	03 c0       	rjmp	.+6      	; 0x442 <m_usb_tx_char+0x2e>
     43c:	9f bf       	out	0x3f, r25	; 63
     43e:	8f ef       	ldi	r24, 0xFF	; 255
     440:	41 c0       	rjmp	.+130    	; 0x4c4 <m_usb_tx_char+0xb0>
     442:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <transmit_previous_timeout>
     446:	30 91 e4 00 	lds	r19, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
     44a:	37 5e       	subi	r19, 0xE7	; 231
     44c:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     450:	25 fd       	sbrc	r18, 5
     452:	24 c0       	rjmp	.+72     	; 0x49c <m_usb_tx_char+0x88>
     454:	9f bf       	out	0x3f, r25	; 63
     456:	90 91 e4 00 	lds	r25, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
     45a:	93 17       	cp	r25, r19
     45c:	81 f0       	breq	.+32     	; 0x47e <m_usb_tx_char+0x6a>
     45e:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <usb_configuration>
     462:	99 23       	and	r25, r25
     464:	61 f1       	breq	.+88     	; 0x4be <m_usb_tx_char+0xaa>
     466:	a9 ee       	ldi	r26, 0xE9	; 233
     468:	b0 e0       	ldi	r27, 0x00	; 0
     46a:	44 e0       	ldi	r20, 0x04	; 4
     46c:	e8 ee       	ldi	r30, 0xE8	; 232
     46e:	f0 e0       	ldi	r31, 0x00	; 0
     470:	c4 ee       	ldi	r28, 0xE4	; 228
     472:	d0 e0       	ldi	r29, 0x00	; 0
     474:	0d c0       	rjmp	.+26     	; 0x490 <m_usb_tx_char+0x7c>
     476:	9f bf       	out	0x3f, r25	; 63
     478:	98 81       	ld	r25, Y
     47a:	93 13       	cpse	r25, r19
     47c:	05 c0       	rjmp	.+10     	; 0x488 <m_usb_tx_char+0x74>
     47e:	81 e0       	ldi	r24, 0x01	; 1
     480:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <transmit_previous_timeout>
     484:	8f ef       	ldi	r24, 0xFF	; 255
     486:	1e c0       	rjmp	.+60     	; 0x4c4 <m_usb_tx_char+0xb0>
     488:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <usb_configuration>
     48c:	99 23       	and	r25, r25
     48e:	c9 f0       	breq	.+50     	; 0x4c2 <m_usb_tx_char+0xae>
     490:	9f b7       	in	r25, 0x3f	; 63
     492:	f8 94       	cli
     494:	4c 93       	st	X, r20
     496:	20 81       	ld	r18, Z
     498:	25 ff       	sbrs	r18, 5
     49a:	ed cf       	rjmp	.-38     	; 0x476 <m_usb_tx_char+0x62>
     49c:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     4a0:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     4a4:	85 fd       	sbrc	r24, 5
     4a6:	03 c0       	rjmp	.+6      	; 0x4ae <m_usb_tx_char+0x9a>
     4a8:	8a e3       	ldi	r24, 0x3A	; 58
     4aa:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     4ae:	85 e0       	ldi	r24, 0x05	; 5
     4b0:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <transmit_flush_timer>
     4b4:	9f bf       	out	0x3f, r25	; 63
     4b6:	80 e0       	ldi	r24, 0x00	; 0
     4b8:	05 c0       	rjmp	.+10     	; 0x4c4 <m_usb_tx_char+0xb0>
     4ba:	8f ef       	ldi	r24, 0xFF	; 255
     4bc:	03 c0       	rjmp	.+6      	; 0x4c4 <m_usb_tx_char+0xb0>
     4be:	8f ef       	ldi	r24, 0xFF	; 255
     4c0:	01 c0       	rjmp	.+2      	; 0x4c4 <m_usb_tx_char+0xb0>
     4c2:	8f ef       	ldi	r24, 0xFF	; 255
     4c4:	df 91       	pop	r29
     4c6:	cf 91       	pop	r28
     4c8:	08 95       	ret

000004ca <__vector_10>:
     4ca:	1f 92       	push	r1
     4cc:	0f 92       	push	r0
     4ce:	0f b6       	in	r0, 0x3f	; 63
     4d0:	0f 92       	push	r0
     4d2:	11 24       	eor	r1, r1
     4d4:	8f 93       	push	r24
     4d6:	9f 93       	push	r25
     4d8:	ef 93       	push	r30
     4da:	ff 93       	push	r31
     4dc:	e1 ee       	ldi	r30, 0xE1	; 225
     4de:	f0 e0       	ldi	r31, 0x00	; 0
     4e0:	80 81       	ld	r24, Z
     4e2:	10 82       	st	Z, r1
     4e4:	83 ff       	sbrs	r24, 3
     4e6:	11 c0       	rjmp	.+34     	; 0x50a <__vector_10+0x40>
     4e8:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     4ec:	91 e0       	ldi	r25, 0x01	; 1
     4ee:	90 93 eb 00 	sts	0x00EB, r25	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     4f2:	10 92 ec 00 	sts	0x00EC, r1	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
     4f6:	92 e1       	ldi	r25, 0x12	; 18
     4f8:	90 93 ed 00 	sts	0x00ED, r25	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     4fc:	98 e0       	ldi	r25, 0x08	; 8
     4fe:	90 93 f0 00 	sts	0x00F0, r25	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
     502:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <usb_configuration>
     506:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <__data_end>
     50a:	82 ff       	sbrs	r24, 2
     50c:	13 c0       	rjmp	.+38     	; 0x534 <__vector_10+0x6a>
     50e:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <usb_configuration>
     512:	88 23       	and	r24, r24
     514:	79 f0       	breq	.+30     	; 0x534 <__vector_10+0x6a>
     516:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <transmit_flush_timer>
     51a:	88 23       	and	r24, r24
     51c:	59 f0       	breq	.+22     	; 0x534 <__vector_10+0x6a>
     51e:	81 50       	subi	r24, 0x01	; 1
     520:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <transmit_flush_timer>
     524:	81 11       	cpse	r24, r1
     526:	06 c0       	rjmp	.+12     	; 0x534 <__vector_10+0x6a>
     528:	84 e0       	ldi	r24, 0x04	; 4
     52a:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     52e:	8a e3       	ldi	r24, 0x3A	; 58
     530:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     534:	ff 91       	pop	r31
     536:	ef 91       	pop	r30
     538:	9f 91       	pop	r25
     53a:	8f 91       	pop	r24
     53c:	0f 90       	pop	r0
     53e:	0f be       	out	0x3f, r0	; 63
     540:	0f 90       	pop	r0
     542:	1f 90       	pop	r1
     544:	18 95       	reti

00000546 <__vector_11>:
     546:	1f 92       	push	r1
     548:	0f 92       	push	r0
     54a:	0f b6       	in	r0, 0x3f	; 63
     54c:	0f 92       	push	r0
     54e:	11 24       	eor	r1, r1
     550:	0f 93       	push	r16
     552:	1f 93       	push	r17
     554:	2f 93       	push	r18
     556:	3f 93       	push	r19
     558:	4f 93       	push	r20
     55a:	5f 93       	push	r21
     55c:	6f 93       	push	r22
     55e:	7f 93       	push	r23
     560:	8f 93       	push	r24
     562:	9f 93       	push	r25
     564:	af 93       	push	r26
     566:	bf 93       	push	r27
     568:	cf 93       	push	r28
     56a:	df 93       	push	r29
     56c:	ef 93       	push	r30
     56e:	ff 93       	push	r31
     570:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     574:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     578:	83 ff       	sbrs	r24, 3
     57a:	4c c1       	rjmp	.+664    	; 0x814 <__vector_11+0x2ce>
     57c:	e1 ef       	ldi	r30, 0xF1	; 241
     57e:	f0 e0       	ldi	r31, 0x00	; 0
     580:	60 81       	ld	r22, Z
     582:	80 81       	ld	r24, Z
     584:	20 81       	ld	r18, Z
     586:	90 81       	ld	r25, Z
     588:	30 e0       	ldi	r19, 0x00	; 0
     58a:	39 2b       	or	r19, r25
     58c:	40 81       	ld	r20, Z
     58e:	90 81       	ld	r25, Z
     590:	50 e0       	ldi	r21, 0x00	; 0
     592:	59 2b       	or	r21, r25
     594:	70 81       	ld	r23, Z
     596:	c0 81       	ld	r28, Z
     598:	92 ef       	ldi	r25, 0xF2	; 242
     59a:	90 93 e8 00 	sts	0x00E8, r25	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     59e:	86 30       	cpi	r24, 0x06	; 6
     5a0:	09 f0       	breq	.+2      	; 0x5a4 <__vector_11+0x5e>
     5a2:	58 c0       	rjmp	.+176    	; 0x654 <__vector_11+0x10e>
     5a4:	04 c0       	rjmp	.+8      	; 0x5ae <__vector_11+0x68>
     5a6:	81 e2       	ldi	r24, 0x21	; 33
     5a8:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     5ac:	3a c1       	rjmp	.+628    	; 0x822 <__vector_11+0x2dc>
     5ae:	66 e0       	ldi	r22, 0x06	; 6
     5b0:	8d eb       	ldi	r24, 0xBD	; 189
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	fc 01       	movw	r30, r24
     5b6:	a5 91       	lpm	r26, Z+
     5b8:	b4 91       	lpm	r27, Z
     5ba:	2a 17       	cp	r18, r26
     5bc:	3b 07       	cpc	r19, r27
     5be:	11 f0       	breq	.+4      	; 0x5c4 <__vector_11+0x7e>
     5c0:	07 96       	adiw	r24, 0x07	; 7
     5c2:	23 c0       	rjmp	.+70     	; 0x60a <__vector_11+0xc4>
     5c4:	fc 01       	movw	r30, r24
     5c6:	32 96       	adiw	r30, 0x02	; 2
     5c8:	a5 91       	lpm	r26, Z+
     5ca:	b4 91       	lpm	r27, Z
     5cc:	4a 17       	cp	r20, r26
     5ce:	5b 07       	cpc	r21, r27
     5d0:	11 f0       	breq	.+4      	; 0x5d6 <__vector_11+0x90>
     5d2:	07 96       	adiw	r24, 0x07	; 7
     5d4:	1a c0       	rjmp	.+52     	; 0x60a <__vector_11+0xc4>
     5d6:	fc 01       	movw	r30, r24
     5d8:	34 96       	adiw	r30, 0x04	; 4
     5da:	45 91       	lpm	r20, Z+
     5dc:	54 91       	lpm	r21, Z
     5de:	fc 01       	movw	r30, r24
     5e0:	36 96       	adiw	r30, 0x06	; 6
     5e2:	24 91       	lpm	r18, Z
     5e4:	87 2f       	mov	r24, r23
     5e6:	90 e0       	ldi	r25, 0x00	; 0
     5e8:	9c 2b       	or	r25, r28
     5ea:	8f 3f       	cpi	r24, 0xFF	; 255
     5ec:	91 05       	cpc	r25, r1
     5ee:	19 f0       	breq	.+6      	; 0x5f6 <__vector_11+0xb0>
     5f0:	10 f0       	brcs	.+4      	; 0x5f6 <__vector_11+0xb0>
     5f2:	8f ef       	ldi	r24, 0xFF	; 255
     5f4:	90 e0       	ldi	r25, 0x00	; 0
     5f6:	82 17       	cp	r24, r18
     5f8:	08 f4       	brcc	.+2      	; 0x5fc <__vector_11+0xb6>
     5fa:	28 2f       	mov	r18, r24
     5fc:	a8 ee       	ldi	r26, 0xE8	; 232
     5fe:	b0 e0       	ldi	r27, 0x00	; 0
     600:	70 e1       	ldi	r23, 0x10	; 16
     602:	6e ef       	ldi	r22, 0xFE	; 254
     604:	c1 ef       	ldi	r28, 0xF1	; 241
     606:	d0 e0       	ldi	r29, 0x00	; 0
     608:	03 c0       	rjmp	.+6      	; 0x610 <__vector_11+0xca>
     60a:	61 50       	subi	r22, 0x01	; 1
     60c:	99 f6       	brne	.-90     	; 0x5b4 <__vector_11+0x6e>
     60e:	cb cf       	rjmp	.-106    	; 0x5a6 <__vector_11+0x60>
     610:	8c 91       	ld	r24, X
     612:	98 2f       	mov	r25, r24
     614:	95 70       	andi	r25, 0x05	; 5
     616:	e1 f3       	breq	.-8      	; 0x610 <__vector_11+0xca>
     618:	82 fd       	sbrc	r24, 2
     61a:	03 c1       	rjmp	.+518    	; 0x822 <__vector_11+0x2dc>
     61c:	32 2f       	mov	r19, r18
     61e:	21 31       	cpi	r18, 0x11	; 17
     620:	08 f0       	brcs	.+2      	; 0x624 <__vector_11+0xde>
     622:	37 2f       	mov	r19, r23
     624:	33 23       	and	r19, r19
     626:	09 f4       	brne	.+2      	; 0x62a <__vector_11+0xe4>
     628:	f9 c0       	rjmp	.+498    	; 0x81c <__vector_11+0x2d6>
     62a:	fa 01       	movw	r30, r20
     62c:	83 2f       	mov	r24, r19
     62e:	94 91       	lpm	r25, Z
     630:	98 83       	st	Y, r25
     632:	81 50       	subi	r24, 0x01	; 1
     634:	31 96       	adiw	r30, 0x01	; 1
     636:	81 11       	cpse	r24, r1
     638:	fa cf       	rjmp	.-12     	; 0x62e <__vector_11+0xe8>
     63a:	8f ef       	ldi	r24, 0xFF	; 255
     63c:	83 0f       	add	r24, r19
     63e:	90 e0       	ldi	r25, 0x00	; 0
     640:	01 96       	adiw	r24, 0x01	; 1
     642:	48 0f       	add	r20, r24
     644:	59 1f       	adc	r21, r25
     646:	23 1b       	sub	r18, r19
     648:	6c 93       	st	X, r22
     64a:	21 11       	cpse	r18, r1
     64c:	e1 cf       	rjmp	.-62     	; 0x610 <__vector_11+0xca>
     64e:	30 31       	cpi	r19, 0x10	; 16
     650:	f9 f2       	breq	.-66     	; 0x610 <__vector_11+0xca>
     652:	e7 c0       	rjmp	.+462    	; 0x822 <__vector_11+0x2dc>
     654:	85 30       	cpi	r24, 0x05	; 5
     656:	61 f4       	brne	.+24     	; 0x670 <__vector_11+0x12a>
     658:	8e ef       	ldi	r24, 0xFE	; 254
     65a:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     65e:	e8 ee       	ldi	r30, 0xE8	; 232
     660:	f0 e0       	ldi	r31, 0x00	; 0
     662:	80 81       	ld	r24, Z
     664:	80 ff       	sbrs	r24, 0
     666:	fd cf       	rjmp	.-6      	; 0x662 <__vector_11+0x11c>
     668:	20 68       	ori	r18, 0x80	; 128
     66a:	20 93 e3 00 	sts	0x00E3, r18	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
     66e:	d9 c0       	rjmp	.+434    	; 0x822 <__vector_11+0x2dc>
     670:	89 30       	cpi	r24, 0x09	; 9
     672:	09 f0       	breq	.+2      	; 0x676 <__vector_11+0x130>
     674:	35 c0       	rjmp	.+106    	; 0x6e0 <__vector_11+0x19a>
     676:	61 11       	cpse	r22, r1
     678:	cd c0       	rjmp	.+410    	; 0x814 <__vector_11+0x2ce>
     67a:	20 93 1d 01 	sts	0x011D, r18	; 0x80011d <usb_configuration>
     67e:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <__data_end>
     682:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <transmit_flush_timer>
     686:	8e ef       	ldi	r24, 0xFE	; 254
     688:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     68c:	81 e0       	ldi	r24, 0x01	; 1
     68e:	26 e6       	ldi	r18, 0x66	; 102
     690:	31 e0       	ldi	r19, 0x01	; 1
     692:	c9 ee       	ldi	r28, 0xE9	; 233
     694:	d0 e0       	ldi	r29, 0x00	; 0
     696:	ab ee       	ldi	r26, 0xEB	; 235
     698:	b0 e0       	ldi	r27, 0x00	; 0
     69a:	0c ee       	ldi	r16, 0xEC	; 236
     69c:	10 e0       	ldi	r17, 0x00	; 0
     69e:	6d ee       	ldi	r22, 0xED	; 237
     6a0:	70 e0       	ldi	r23, 0x00	; 0
     6a2:	88 83       	st	Y, r24
     6a4:	a9 01       	movw	r20, r18
     6a6:	4f 5f       	subi	r20, 0xFF	; 255
     6a8:	5f 4f       	sbci	r21, 0xFF	; 255
     6aa:	f9 01       	movw	r30, r18
     6ac:	94 91       	lpm	r25, Z
     6ae:	9c 93       	st	X, r25
     6b0:	99 23       	and	r25, r25
     6b2:	61 f0       	breq	.+24     	; 0x6cc <__vector_11+0x186>
     6b4:	fa 01       	movw	r30, r20
     6b6:	44 91       	lpm	r20, Z
     6b8:	f8 01       	movw	r30, r16
     6ba:	40 83       	st	Z, r20
     6bc:	f9 01       	movw	r30, r18
     6be:	32 96       	adiw	r30, 0x02	; 2
     6c0:	94 91       	lpm	r25, Z
     6c2:	2d 5f       	subi	r18, 0xFD	; 253
     6c4:	3f 4f       	sbci	r19, 0xFF	; 255
     6c6:	fb 01       	movw	r30, r22
     6c8:	90 83       	st	Z, r25
     6ca:	01 c0       	rjmp	.+2      	; 0x6ce <__vector_11+0x188>
     6cc:	9a 01       	movw	r18, r20
     6ce:	8f 5f       	subi	r24, 0xFF	; 255
     6d0:	85 30       	cpi	r24, 0x05	; 5
     6d2:	39 f7       	brne	.-50     	; 0x6a2 <__vector_11+0x15c>
     6d4:	ea ee       	ldi	r30, 0xEA	; 234
     6d6:	f0 e0       	ldi	r31, 0x00	; 0
     6d8:	8e e1       	ldi	r24, 0x1E	; 30
     6da:	80 83       	st	Z, r24
     6dc:	10 82       	st	Z, r1
     6de:	a1 c0       	rjmp	.+322    	; 0x822 <__vector_11+0x2dc>
     6e0:	88 30       	cpi	r24, 0x08	; 8
     6e2:	81 f4       	brne	.+32     	; 0x704 <__vector_11+0x1be>
     6e4:	60 38       	cpi	r22, 0x80	; 128
     6e6:	09 f0       	breq	.+2      	; 0x6ea <__vector_11+0x1a4>
     6e8:	95 c0       	rjmp	.+298    	; 0x814 <__vector_11+0x2ce>
     6ea:	e8 ee       	ldi	r30, 0xE8	; 232
     6ec:	f0 e0       	ldi	r31, 0x00	; 0
     6ee:	80 81       	ld	r24, Z
     6f0:	80 ff       	sbrs	r24, 0
     6f2:	fd cf       	rjmp	.-6      	; 0x6ee <__vector_11+0x1a8>
     6f4:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <usb_configuration>
     6f8:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     6fc:	8e ef       	ldi	r24, 0xFE	; 254
     6fe:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     702:	8f c0       	rjmp	.+286    	; 0x822 <__vector_11+0x2dc>
     704:	81 32       	cpi	r24, 0x21	; 33
     706:	b9 f4       	brne	.+46     	; 0x736 <__vector_11+0x1f0>
     708:	61 3a       	cpi	r22, 0xA1	; 161
     70a:	09 f0       	breq	.+2      	; 0x70e <__vector_11+0x1c8>
     70c:	83 c0       	rjmp	.+262    	; 0x814 <__vector_11+0x2ce>
     70e:	e8 ee       	ldi	r30, 0xE8	; 232
     710:	f0 e0       	ldi	r31, 0x00	; 0
     712:	80 81       	ld	r24, Z
     714:	80 ff       	sbrs	r24, 0
     716:	fd cf       	rjmp	.-6      	; 0x712 <__vector_11+0x1cc>
     718:	e0 e0       	ldi	r30, 0x00	; 0
     71a:	f1 e0       	ldi	r31, 0x01	; 1
     71c:	27 e0       	ldi	r18, 0x07	; 7
     71e:	31 e0       	ldi	r19, 0x01	; 1
     720:	a1 ef       	ldi	r26, 0xF1	; 241
     722:	b0 e0       	ldi	r27, 0x00	; 0
     724:	81 91       	ld	r24, Z+
     726:	8c 93       	st	X, r24
     728:	e2 17       	cp	r30, r18
     72a:	f3 07       	cpc	r31, r19
     72c:	d9 f7       	brne	.-10     	; 0x724 <__vector_11+0x1de>
     72e:	8e ef       	ldi	r24, 0xFE	; 254
     730:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     734:	76 c0       	rjmp	.+236    	; 0x822 <__vector_11+0x2dc>
     736:	80 32       	cpi	r24, 0x20	; 32
     738:	d1 f4       	brne	.+52     	; 0x76e <__vector_11+0x228>
     73a:	61 32       	cpi	r22, 0x21	; 33
     73c:	09 f0       	breq	.+2      	; 0x740 <__vector_11+0x1fa>
     73e:	6a c0       	rjmp	.+212    	; 0x814 <__vector_11+0x2ce>
     740:	e8 ee       	ldi	r30, 0xE8	; 232
     742:	f0 e0       	ldi	r31, 0x00	; 0
     744:	80 81       	ld	r24, Z
     746:	82 ff       	sbrs	r24, 2
     748:	fd cf       	rjmp	.-6      	; 0x744 <__vector_11+0x1fe>
     74a:	e0 e0       	ldi	r30, 0x00	; 0
     74c:	f1 e0       	ldi	r31, 0x01	; 1
     74e:	27 e0       	ldi	r18, 0x07	; 7
     750:	31 e0       	ldi	r19, 0x01	; 1
     752:	a1 ef       	ldi	r26, 0xF1	; 241
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	8c 91       	ld	r24, X
     758:	81 93       	st	Z+, r24
     75a:	e2 17       	cp	r30, r18
     75c:	f3 07       	cpc	r31, r19
     75e:	d9 f7       	brne	.-10     	; 0x756 <__vector_11+0x210>
     760:	e8 ee       	ldi	r30, 0xE8	; 232
     762:	f0 e0       	ldi	r31, 0x00	; 0
     764:	8b ef       	ldi	r24, 0xFB	; 251
     766:	80 83       	st	Z, r24
     768:	8e ef       	ldi	r24, 0xFE	; 254
     76a:	80 83       	st	Z, r24
     76c:	5a c0       	rjmp	.+180    	; 0x822 <__vector_11+0x2dc>
     76e:	82 32       	cpi	r24, 0x22	; 34
     770:	71 f4       	brne	.+28     	; 0x78e <__vector_11+0x248>
     772:	61 32       	cpi	r22, 0x21	; 33
     774:	09 f0       	breq	.+2      	; 0x778 <__vector_11+0x232>
     776:	4e c0       	rjmp	.+156    	; 0x814 <__vector_11+0x2ce>
     778:	20 93 1a 01 	sts	0x011A, r18	; 0x80011a <__data_end>
     77c:	e8 ee       	ldi	r30, 0xE8	; 232
     77e:	f0 e0       	ldi	r31, 0x00	; 0
     780:	80 81       	ld	r24, Z
     782:	80 ff       	sbrs	r24, 0
     784:	fd cf       	rjmp	.-6      	; 0x780 <__vector_11+0x23a>
     786:	8e ef       	ldi	r24, 0xFE	; 254
     788:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     78c:	4a c0       	rjmp	.+148    	; 0x822 <__vector_11+0x2dc>
     78e:	81 11       	cpse	r24, r1
     790:	1a c0       	rjmp	.+52     	; 0x7c6 <__vector_11+0x280>
     792:	e8 ee       	ldi	r30, 0xE8	; 232
     794:	f0 e0       	ldi	r31, 0x00	; 0
     796:	80 81       	ld	r24, Z
     798:	80 ff       	sbrs	r24, 0
     79a:	fd cf       	rjmp	.-6      	; 0x796 <__vector_11+0x250>
     79c:	62 38       	cpi	r22, 0x82	; 130
     79e:	51 f4       	brne	.+20     	; 0x7b4 <__vector_11+0x26e>
     7a0:	e9 ee       	ldi	r30, 0xE9	; 233
     7a2:	f0 e0       	ldi	r31, 0x00	; 0
     7a4:	40 83       	st	Z, r20
     7a6:	80 91 eb 00 	lds	r24, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     7aa:	85 fb       	bst	r24, 5
     7ac:	88 27       	eor	r24, r24
     7ae:	80 f9       	bld	r24, 0
     7b0:	10 82       	st	Z, r1
     7b2:	01 c0       	rjmp	.+2      	; 0x7b6 <__vector_11+0x270>
     7b4:	80 e0       	ldi	r24, 0x00	; 0
     7b6:	e1 ef       	ldi	r30, 0xF1	; 241
     7b8:	f0 e0       	ldi	r31, 0x00	; 0
     7ba:	80 83       	st	Z, r24
     7bc:	10 82       	st	Z, r1
     7be:	8e ef       	ldi	r24, 0xFE	; 254
     7c0:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     7c4:	2e c0       	rjmp	.+92     	; 0x822 <__vector_11+0x2dc>
     7c6:	98 2f       	mov	r25, r24
     7c8:	9d 7f       	andi	r25, 0xFD	; 253
     7ca:	91 30       	cpi	r25, 0x01	; 1
     7cc:	19 f5       	brne	.+70     	; 0x814 <__vector_11+0x2ce>
     7ce:	62 30       	cpi	r22, 0x02	; 2
     7d0:	09 f5       	brne	.+66     	; 0x814 <__vector_11+0x2ce>
     7d2:	23 2b       	or	r18, r19
     7d4:	f9 f4       	brne	.+62     	; 0x814 <__vector_11+0x2ce>
     7d6:	4f 77       	andi	r20, 0x7F	; 127
     7d8:	9f ef       	ldi	r25, 0xFF	; 255
     7da:	94 0f       	add	r25, r20
     7dc:	94 30       	cpi	r25, 0x04	; 4
     7de:	d0 f4       	brcc	.+52     	; 0x814 <__vector_11+0x2ce>
     7e0:	9e ef       	ldi	r25, 0xFE	; 254
     7e2:	90 93 e8 00 	sts	0x00E8, r25	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     7e6:	40 93 e9 00 	sts	0x00E9, r20	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     7ea:	83 30       	cpi	r24, 0x03	; 3
     7ec:	21 f4       	brne	.+8      	; 0x7f6 <__vector_11+0x2b0>
     7ee:	81 e2       	ldi	r24, 0x21	; 33
     7f0:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     7f4:	16 c0       	rjmp	.+44     	; 0x822 <__vector_11+0x2dc>
     7f6:	89 e1       	ldi	r24, 0x19	; 25
     7f8:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     7fc:	81 e0       	ldi	r24, 0x01	; 1
     7fe:	90 e0       	ldi	r25, 0x00	; 0
     800:	02 c0       	rjmp	.+4      	; 0x806 <__vector_11+0x2c0>
     802:	88 0f       	add	r24, r24
     804:	99 1f       	adc	r25, r25
     806:	4a 95       	dec	r20
     808:	e2 f7       	brpl	.-8      	; 0x802 <__vector_11+0x2bc>
     80a:	ea ee       	ldi	r30, 0xEA	; 234
     80c:	f0 e0       	ldi	r31, 0x00	; 0
     80e:	80 83       	st	Z, r24
     810:	10 82       	st	Z, r1
     812:	07 c0       	rjmp	.+14     	; 0x822 <__vector_11+0x2dc>
     814:	81 e2       	ldi	r24, 0x21	; 33
     816:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     81a:	03 c0       	rjmp	.+6      	; 0x822 <__vector_11+0x2dc>
     81c:	6c 93       	st	X, r22
     81e:	21 11       	cpse	r18, r1
     820:	f7 ce       	rjmp	.-530    	; 0x610 <__vector_11+0xca>
     822:	ff 91       	pop	r31
     824:	ef 91       	pop	r30
     826:	df 91       	pop	r29
     828:	cf 91       	pop	r28
     82a:	bf 91       	pop	r27
     82c:	af 91       	pop	r26
     82e:	9f 91       	pop	r25
     830:	8f 91       	pop	r24
     832:	7f 91       	pop	r23
     834:	6f 91       	pop	r22
     836:	5f 91       	pop	r21
     838:	4f 91       	pop	r20
     83a:	3f 91       	pop	r19
     83c:	2f 91       	pop	r18
     83e:	1f 91       	pop	r17
     840:	0f 91       	pop	r16
     842:	0f 90       	pop	r0
     844:	0f be       	out	0x3f, r0	; 63
     846:	0f 90       	pop	r0
     848:	1f 90       	pop	r1
     84a:	18 95       	reti

0000084c <print_P>:
     84c:	0f 93       	push	r16
     84e:	1f 93       	push	r17
     850:	cf 93       	push	r28
     852:	8c 01       	movw	r16, r24
     854:	0f 5f       	subi	r16, 0xFF	; 255
     856:	1f 4f       	sbci	r17, 0xFF	; 255
     858:	fc 01       	movw	r30, r24
     85a:	c4 91       	lpm	r28, Z
     85c:	cc 23       	and	r28, r28
     85e:	71 f0       	breq	.+28     	; 0x87c <print_P+0x30>
     860:	ca 30       	cpi	r28, 0x0A	; 10
     862:	19 f4       	brne	.+6      	; 0x86a <print_P+0x1e>
     864:	8d e0       	ldi	r24, 0x0D	; 13
     866:	0e 94 0a 02 	call	0x414	; 0x414 <m_usb_tx_char>
     86a:	8c 2f       	mov	r24, r28
     86c:	0e 94 0a 02 	call	0x414	; 0x414 <m_usb_tx_char>
     870:	f8 01       	movw	r30, r16
     872:	c4 91       	lpm	r28, Z
     874:	0f 5f       	subi	r16, 0xFF	; 255
     876:	1f 4f       	sbci	r17, 0xFF	; 255
     878:	c1 11       	cpse	r28, r1
     87a:	f2 cf       	rjmp	.-28     	; 0x860 <print_P+0x14>
     87c:	cf 91       	pop	r28
     87e:	1f 91       	pop	r17
     880:	0f 91       	pop	r16
     882:	08 95       	ret

00000884 <m_usb_tx_int>:
}

void m_usb_tx_int(int i)
{
     884:	ef 92       	push	r14
     886:	ff 92       	push	r15
     888:	0f 93       	push	r16
     88a:	1f 93       	push	r17
     88c:	cf 93       	push	r28
     88e:	df 93       	push	r29
     890:	cd b7       	in	r28, 0x3d	; 61
     892:	de b7       	in	r29, 0x3e	; 62
     894:	27 97       	sbiw	r28, 0x07	; 7
     896:	0f b6       	in	r0, 0x3f	; 63
     898:	f8 94       	cli
     89a:	de bf       	out	0x3e, r29	; 62
     89c:	0f be       	out	0x3f, r0	; 63
     89e:	cd bf       	out	0x3d, r28	; 61
	char string[7] = {0,0,0,0,0,0,0};
     8a0:	8e 01       	movw	r16, r28
     8a2:	0f 5f       	subi	r16, 0xFF	; 255
     8a4:	1f 4f       	sbci	r17, 0xFF	; 255
     8a6:	27 e0       	ldi	r18, 0x07	; 7
     8a8:	f8 01       	movw	r30, r16
     8aa:	11 92       	st	Z+, r1
     8ac:	2a 95       	dec	r18
     8ae:	e9 f7       	brne	.-6      	; 0x8aa <m_usb_tx_int+0x26>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     8b0:	4a e0       	ldi	r20, 0x0A	; 10
     8b2:	b8 01       	movw	r22, r16
     8b4:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <__itoa_ncheck>
     8b8:	7e 01       	movw	r14, r28
     8ba:	f8 e0       	ldi	r31, 0x08	; 8
     8bc:	ef 0e       	add	r14, r31
     8be:	f1 1c       	adc	r15, r1
	itoa(i,string,10);
	for(i=0;i<7;i++){
        if(string[i]){
     8c0:	f8 01       	movw	r30, r16
     8c2:	81 91       	ld	r24, Z+
     8c4:	8f 01       	movw	r16, r30
     8c6:	81 11       	cpse	r24, r1
            m_usb_tx_char(string[i]);
     8c8:	0e 94 0a 02 	call	0x414	; 0x414 <m_usb_tx_char>

void m_usb_tx_int(int i)
{
	char string[7] = {0,0,0,0,0,0,0};
	itoa(i,string,10);
	for(i=0;i<7;i++){
     8cc:	0e 15       	cp	r16, r14
     8ce:	1f 05       	cpc	r17, r15
     8d0:	b9 f7       	brne	.-18     	; 0x8c0 <m_usb_tx_int+0x3c>
        if(string[i]){
            m_usb_tx_char(string[i]);
        }
	}
}
     8d2:	27 96       	adiw	r28, 0x07	; 7
     8d4:	0f b6       	in	r0, 0x3f	; 63
     8d6:	f8 94       	cli
     8d8:	de bf       	out	0x3e, r29	; 62
     8da:	0f be       	out	0x3f, r0	; 63
     8dc:	cd bf       	out	0x3d, r28	; 61
     8de:	df 91       	pop	r29
     8e0:	cf 91       	pop	r28
     8e2:	1f 91       	pop	r17
     8e4:	0f 91       	pop	r16
     8e6:	ff 90       	pop	r15
     8e8:	ef 90       	pop	r14
     8ea:	08 95       	ret

000008ec <ADC_init>:
		return true;
	}
	
	// otherwise, it is not
	return false;
}
     8ec:	ec e7       	ldi	r30, 0x7C	; 124
     8ee:	f0 e0       	ldi	r31, 0x00	; 0
     8f0:	80 81       	ld	r24, Z
     8f2:	8f 77       	andi	r24, 0x7F	; 127
     8f4:	80 83       	st	Z, r24
     8f6:	80 81       	ld	r24, Z
     8f8:	80 64       	ori	r24, 0x40	; 64
     8fa:	80 83       	st	Z, r24
     8fc:	aa e7       	ldi	r26, 0x7A	; 122
     8fe:	b0 e0       	ldi	r27, 0x00	; 0
     900:	8c 91       	ld	r24, X
     902:	84 60       	ori	r24, 0x04	; 4
     904:	8c 93       	st	X, r24
     906:	8c 91       	ld	r24, X
     908:	8d 7f       	andi	r24, 0xFD	; 253
     90a:	8c 93       	st	X, r24
     90c:	8c 91       	ld	r24, X
     90e:	81 60       	ori	r24, 0x01	; 1
     910:	8c 93       	st	X, r24
     912:	ee e7       	ldi	r30, 0x7E	; 126
     914:	f0 e0       	ldi	r31, 0x00	; 0
     916:	80 81       	ld	r24, Z
     918:	81 60       	ori	r24, 0x01	; 1
     91a:	80 83       	st	Z, r24
     91c:	80 81       	ld	r24, Z
     91e:	82 60       	ori	r24, 0x02	; 2
     920:	80 83       	st	Z, r24
     922:	80 81       	ld	r24, Z
     924:	80 61       	ori	r24, 0x10	; 16
     926:	80 83       	st	Z, r24
     928:	80 81       	ld	r24, Z
     92a:	80 62       	ori	r24, 0x20	; 32
     92c:	80 83       	st	Z, r24
     92e:	80 81       	ld	r24, Z
     930:	80 64       	ori	r24, 0x40	; 64
     932:	80 83       	st	Z, r24
     934:	80 81       	ld	r24, Z
     936:	80 68       	ori	r24, 0x80	; 128
     938:	80 83       	st	Z, r24
     93a:	ed e7       	ldi	r30, 0x7D	; 125
     93c:	f0 e0       	ldi	r31, 0x00	; 0
     93e:	80 81       	ld	r24, Z
     940:	81 60       	ori	r24, 0x01	; 1
     942:	80 83       	st	Z, r24
     944:	80 81       	ld	r24, Z
     946:	82 60       	ori	r24, 0x02	; 2
     948:	80 83       	st	Z, r24
     94a:	80 81       	ld	r24, Z
     94c:	84 60       	ori	r24, 0x04	; 4
     94e:	80 83       	st	Z, r24
     950:	8c 91       	ld	r24, X
     952:	80 62       	ori	r24, 0x20	; 32
     954:	8c 93       	st	X, r24
     956:	08 95       	ret

00000958 <setMUX>:
     958:	82 30       	cpi	r24, 0x02	; 2
     95a:	91 05       	cpc	r25, r1
     95c:	b0 f0       	brcs	.+44     	; 0x98a <setMUX+0x32>
     95e:	84 30       	cpi	r24, 0x04	; 4
     960:	91 05       	cpc	r25, r1
     962:	d9 f0       	breq	.+54     	; 0x99a <setMUX+0x42>
     964:	85 30       	cpi	r24, 0x05	; 5
     966:	91 05       	cpc	r25, r1
     968:	91 f0       	breq	.+36     	; 0x98e <setMUX+0x36>
     96a:	86 30       	cpi	r24, 0x06	; 6
     96c:	91 05       	cpc	r25, r1
     96e:	a9 f0       	breq	.+42     	; 0x99a <setMUX+0x42>
     970:	87 30       	cpi	r24, 0x07	; 7
     972:	91 05       	cpc	r25, r1
     974:	61 f0       	breq	.+24     	; 0x98e <setMUX+0x36>
     976:	88 30       	cpi	r24, 0x08	; 8
     978:	91 05       	cpc	r25, r1
     97a:	79 f0       	breq	.+30     	; 0x99a <setMUX+0x42>
     97c:	89 30       	cpi	r24, 0x09	; 9
     97e:	91 05       	cpc	r25, r1
     980:	31 f0       	breq	.+12     	; 0x98e <setMUX+0x36>
     982:	8a 30       	cpi	r24, 0x0A	; 10
     984:	91 05       	cpc	r25, r1
     986:	b1 f5       	brne	.+108    	; 0x9f4 <setMUX+0x9c>
     988:	08 c0       	rjmp	.+16     	; 0x99a <setMUX+0x42>
     98a:	80 ff       	sbrs	r24, 0
     98c:	06 c0       	rjmp	.+12     	; 0x99a <setMUX+0x42>
     98e:	ec e7       	ldi	r30, 0x7C	; 124
     990:	f0 e0       	ldi	r31, 0x00	; 0
     992:	20 81       	ld	r18, Z
     994:	21 60       	ori	r18, 0x01	; 1
     996:	20 83       	st	Z, r18
     998:	05 c0       	rjmp	.+10     	; 0x9a4 <setMUX+0x4c>
     99a:	ec e7       	ldi	r30, 0x7C	; 124
     99c:	f0 e0       	ldi	r31, 0x00	; 0
     99e:	20 81       	ld	r18, Z
     9a0:	2e 7f       	andi	r18, 0xFE	; 254
     9a2:	20 83       	st	Z, r18
     9a4:	81 ff       	sbrs	r24, 1
     9a6:	06 c0       	rjmp	.+12     	; 0x9b4 <setMUX+0x5c>
     9a8:	ec e7       	ldi	r30, 0x7C	; 124
     9aa:	f0 e0       	ldi	r31, 0x00	; 0
     9ac:	20 81       	ld	r18, Z
     9ae:	22 60       	ori	r18, 0x02	; 2
     9b0:	20 83       	st	Z, r18
     9b2:	05 c0       	rjmp	.+10     	; 0x9be <setMUX+0x66>
     9b4:	ec e7       	ldi	r30, 0x7C	; 124
     9b6:	f0 e0       	ldi	r31, 0x00	; 0
     9b8:	20 81       	ld	r18, Z
     9ba:	2d 7f       	andi	r18, 0xFD	; 253
     9bc:	20 83       	st	Z, r18
     9be:	82 ff       	sbrs	r24, 2
     9c0:	06 c0       	rjmp	.+12     	; 0x9ce <setMUX+0x76>
     9c2:	ec e7       	ldi	r30, 0x7C	; 124
     9c4:	f0 e0       	ldi	r31, 0x00	; 0
     9c6:	20 81       	ld	r18, Z
     9c8:	24 60       	ori	r18, 0x04	; 4
     9ca:	20 83       	st	Z, r18
     9cc:	05 c0       	rjmp	.+10     	; 0x9d8 <setMUX+0x80>
     9ce:	ec e7       	ldi	r30, 0x7C	; 124
     9d0:	f0 e0       	ldi	r31, 0x00	; 0
     9d2:	20 81       	ld	r18, Z
     9d4:	2b 7f       	andi	r18, 0xFB	; 251
     9d6:	20 83       	st	Z, r18
     9d8:	83 ff       	sbrs	r24, 3
     9da:	06 c0       	rjmp	.+12     	; 0x9e8 <setMUX+0x90>
     9dc:	eb e7       	ldi	r30, 0x7B	; 123
     9de:	f0 e0       	ldi	r31, 0x00	; 0
     9e0:	80 81       	ld	r24, Z
     9e2:	80 62       	ori	r24, 0x20	; 32
     9e4:	80 83       	st	Z, r24
     9e6:	08 95       	ret
     9e8:	eb e7       	ldi	r30, 0x7B	; 123
     9ea:	f0 e0       	ldi	r31, 0x00	; 0
     9ec:	80 81       	ld	r24, Z
     9ee:	8f 7d       	andi	r24, 0xDF	; 223
     9f0:	80 83       	st	Z, r24
     9f2:	08 95       	ret
     9f4:	6a 9a       	sbi	0x0d, 2	; 13
     9f6:	72 98       	cbi	0x0e, 2	; 14
     9f8:	08 95       	ret

000009fa <readADC>:
     9fa:	ea e7       	ldi	r30, 0x7A	; 122
     9fc:	f0 e0       	ldi	r31, 0x00	; 0
     9fe:	80 81       	ld	r24, Z
     a00:	80 68       	ori	r24, 0x80	; 128
     a02:	80 83       	st	Z, r24
     a04:	80 81       	ld	r24, Z
     a06:	80 64       	ori	r24, 0x40	; 64
     a08:	80 83       	st	Z, r24
     a0a:	80 81       	ld	r24, Z
     a0c:	84 ff       	sbrs	r24, 4
     a0e:	fd cf       	rjmp	.-6      	; 0xa0a <readADC+0x10>
     a10:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     a14:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     a18:	ea e7       	ldi	r30, 0x7A	; 122
     a1a:	f0 e0       	ldi	r31, 0x00	; 0
     a1c:	90 81       	ld	r25, Z
     a1e:	9f 7e       	andi	r25, 0xEF	; 239
     a20:	90 83       	st	Z, r25
     a22:	90 81       	ld	r25, Z
     a24:	9f 77       	andi	r25, 0x7F	; 127
     a26:	90 83       	st	Z, r25
     a28:	c9 01       	movw	r24, r18
     a2a:	08 95       	ret

00000a2c <read_pts>:
     a2c:	cf 92       	push	r12
     a2e:	df 92       	push	r13
     a30:	ef 92       	push	r14
     a32:	ff 92       	push	r15
     a34:	0f 93       	push	r16
     a36:	1f 93       	push	r17
     a38:	cf 93       	push	r28
     a3a:	df 93       	push	r29
     a3c:	cd b7       	in	r28, 0x3d	; 61
     a3e:	de b7       	in	r29, 0x3e	; 62
     a40:	62 97       	sbiw	r28, 0x12	; 18
     a42:	0f b6       	in	r0, 0x3f	; 63
     a44:	f8 94       	cli
     a46:	de bf       	out	0x3e, r29	; 62
     a48:	0f be       	out	0x3f, r0	; 63
     a4a:	cd bf       	out	0x3d, r28	; 61
     a4c:	6c 01       	movw	r12, r24
     a4e:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <jtag_enabled>
     a52:	88 23       	and	r24, r24
     a54:	29 f0       	breq	.+10     	; 0xa60 <read_pts+0x34>
     a56:	80 e8       	ldi	r24, 0x80	; 128
     a58:	85 bf       	out	0x35, r24	; 53
     a5a:	85 bf       	out	0x35, r24	; 53
     a5c:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <jtag_enabled>
     a60:	89 e0       	ldi	r24, 0x09	; 9
     a62:	90 e0       	ldi	r25, 0x00	; 0
     a64:	0e 94 76 04 	call	0x8ec	; 0x8ec <ADC_init>
     a68:	82 e1       	ldi	r24, 0x12	; 18
     a6a:	e8 e0       	ldi	r30, 0x08	; 8
     a6c:	f1 e0       	ldi	r31, 0x01	; 1
     a6e:	de 01       	movw	r26, r28
     a70:	11 96       	adiw	r26, 0x01	; 1
     a72:	01 90       	ld	r0, Z+
     a74:	0d 92       	st	X+, r0
     a76:	8a 95       	dec	r24
     a78:	e1 f7       	brne	.-8      	; 0xa72 <read_pts+0x46>
     a7a:	ce 01       	movw	r24, r28
     a7c:	01 96       	adiw	r24, 0x01	; 1
     a7e:	7c 01       	movw	r14, r24
     a80:	86 01       	movw	r16, r12
     a82:	92 e1       	ldi	r25, 0x12	; 18
     a84:	c9 0e       	add	r12, r25
     a86:	d1 1c       	adc	r13, r1
     a88:	f7 01       	movw	r30, r14
     a8a:	81 91       	ld	r24, Z+
     a8c:	91 91       	ld	r25, Z+
     a8e:	7f 01       	movw	r14, r30
     a90:	0e 94 ac 04 	call	0x958	; 0x958 <setMUX>
     a94:	0e 94 fd 04 	call	0x9fa	; 0x9fa <readADC>
     a98:	f8 01       	movw	r30, r16
     a9a:	81 93       	st	Z+, r24
     a9c:	91 93       	st	Z+, r25
     a9e:	8f 01       	movw	r16, r30
     aa0:	83 ef       	ldi	r24, 0xF3	; 243
     aa2:	91 e0       	ldi	r25, 0x01	; 1
     aa4:	01 97       	sbiw	r24, 0x01	; 1
     aa6:	f1 f7       	brne	.-4      	; 0xaa4 <read_pts+0x78>
     aa8:	00 c0       	rjmp	.+0      	; 0xaaa <read_pts+0x7e>
     aaa:	00 00       	nop
     aac:	ec 15       	cp	r30, r12
     aae:	fd 05       	cpc	r31, r13
     ab0:	59 f7       	brne	.-42     	; 0xa88 <read_pts+0x5c>
     ab2:	62 96       	adiw	r28, 0x12	; 18
     ab4:	0f b6       	in	r0, 0x3f	; 63
     ab6:	f8 94       	cli
     ab8:	de bf       	out	0x3e, r29	; 62
     aba:	0f be       	out	0x3f, r0	; 63
     abc:	cd bf       	out	0x3d, r28	; 61
     abe:	df 91       	pop	r29
     ac0:	cf 91       	pop	r28
     ac2:	1f 91       	pop	r17
     ac4:	0f 91       	pop	r16
     ac6:	ff 90       	pop	r15
     ac8:	ef 90       	pop	r14
     aca:	df 90       	pop	r13
     acc:	cf 90       	pop	r12
     ace:	08 95       	ret

00000ad0 <get_turn>:
     ad0:	cf 93       	push	r28
     ad2:	df 93       	push	r29
     ad4:	fc 01       	movw	r30, r24
     ad6:	c0 81       	ld	r28, Z
     ad8:	d1 81       	ldd	r29, Z+1	; 0x01
     ada:	a2 81       	ldd	r26, Z+2	; 0x02
     adc:	b3 81       	ldd	r27, Z+3	; 0x03
     ade:	84 81       	ldd	r24, Z+4	; 0x04
     ae0:	95 81       	ldd	r25, Z+5	; 0x05
     ae2:	60 85       	ldd	r22, Z+8	; 0x08
     ae4:	71 85       	ldd	r23, Z+9	; 0x09
     ae6:	66 0f       	add	r22, r22
     ae8:	77 1f       	adc	r23, r23
     aea:	46 81       	ldd	r20, Z+6	; 0x06
     aec:	57 81       	ldd	r21, Z+7	; 0x07
     aee:	9b 01       	movw	r18, r22
     af0:	24 0f       	add	r18, r20
     af2:	35 1f       	adc	r19, r21
     af4:	62 85       	ldd	r22, Z+10	; 0x0a
     af6:	73 85       	ldd	r23, Z+11	; 0x0b
     af8:	ab 01       	movw	r20, r22
     afa:	44 0f       	add	r20, r20
     afc:	55 1f       	adc	r21, r21
     afe:	64 0f       	add	r22, r20
     b00:	75 1f       	adc	r23, r21
     b02:	62 0f       	add	r22, r18
     b04:	73 1f       	adc	r23, r19
     b06:	24 85       	ldd	r18, Z+12	; 0x0c
     b08:	35 85       	ldd	r19, Z+13	; 0x0d
     b0a:	a9 01       	movw	r20, r18
     b0c:	44 0f       	add	r20, r20
     b0e:	55 1f       	adc	r21, r21
     b10:	24 0f       	add	r18, r20
     b12:	35 1f       	adc	r19, r21
     b14:	62 1b       	sub	r22, r18
     b16:	73 0b       	sbc	r23, r19
     b18:	26 85       	ldd	r18, Z+14	; 0x0e
     b1a:	37 85       	ldd	r19, Z+15	; 0x0f
     b1c:	22 0f       	add	r18, r18
     b1e:	33 1f       	adc	r19, r19
     b20:	62 1b       	sub	r22, r18
     b22:	73 0b       	sbc	r23, r19
     b24:	20 89       	ldd	r18, Z+16	; 0x10
     b26:	31 89       	ldd	r19, Z+17	; 0x11
     b28:	62 1b       	sub	r22, r18
     b2a:	73 0b       	sbc	r23, r19
     b2c:	9b 01       	movw	r18, r22
     b2e:	22 f4       	brpl	.+8      	; 0xb38 <__stack+0x39>
     b30:	22 27       	eor	r18, r18
     b32:	33 27       	eor	r19, r19
     b34:	26 1b       	sub	r18, r22
     b36:	37 0b       	sbc	r19, r23
     b38:	27 30       	cpi	r18, 0x07	; 7
     b3a:	31 05       	cpc	r19, r1
     b3c:	b4 f0       	brlt	.+44     	; 0xb6a <__stack+0x6b>
     b3e:	07 2e       	mov	r0, r23
     b40:	00 0c       	add	r0, r0
     b42:	88 0b       	sbc	r24, r24
     b44:	99 0b       	sbc	r25, r25
     b46:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <__floatsisf>
     b4a:	20 e0       	ldi	r18, 0x00	; 0
     b4c:	30 e0       	ldi	r19, 0x00	; 0
     b4e:	40 e8       	ldi	r20, 0x80	; 128
     b50:	5e e3       	ldi	r21, 0x3E	; 62
     b52:	0e 94 76 07 	call	0xeec	; 0xeec <__mulsf3>
     b56:	0e 94 b2 06 	call	0xd64	; 0xd64 <__fixsfsi>
     b5a:	cb 01       	movw	r24, r22
     b5c:	6f 3f       	cpi	r22, 0xFF	; 255
     b5e:	71 05       	cpc	r23, r1
     b60:	b1 f0       	breq	.+44     	; 0xb8e <__stack+0x8f>
     b62:	ac f0       	brlt	.+42     	; 0xb8e <__stack+0x8f>
     b64:	8f ef       	ldi	r24, 0xFF	; 255
     b66:	90 e0       	ldi	r25, 0x00	; 0
     b68:	12 c0       	rjmp	.+36     	; 0xb8e <__stack+0x8f>
     b6a:	ac 0f       	add	r26, r28
     b6c:	bd 1f       	adc	r27, r29
     b6e:	8a 0f       	add	r24, r26
     b70:	9b 1f       	adc	r25, r27
     b72:	cd 97       	sbiw	r24, 0x3d	; 61
     b74:	54 f4       	brge	.+20     	; 0xb8a <__stack+0x8b>
     b76:	81 e0       	ldi	r24, 0x01	; 1
     b78:	92 e0       	ldi	r25, 0x02	; 2
     b7a:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
     b7e:	8d e0       	ldi	r24, 0x0D	; 13
     b80:	0e 94 0a 02 	call	0x414	; 0x414 <m_usb_tx_char>
     b84:	84 e6       	ldi	r24, 0x64	; 100
     b86:	90 e0       	ldi	r25, 0x00	; 0
     b88:	02 c0       	rjmp	.+4      	; 0xb8e <__stack+0x8f>
     b8a:	80 e0       	ldi	r24, 0x00	; 0
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	df 91       	pop	r29
     b90:	cf 91       	pop	r28
     b92:	08 95       	ret

00000b94 <turn_to_puck>:
	none
*/


void turn_to_puck(int direction) {
	if (direction < 0) {
     b94:	99 23       	and	r25, r25
     b96:	2c f4       	brge	.+10     	; 0xba2 <turn_to_puck+0xe>
		turn_in_place(false, direction);
     b98:	bc 01       	movw	r22, r24
     b9a:	80 e0       	ldi	r24, 0x00	; 0
     b9c:	0e 94 cd 01 	call	0x39a	; 0x39a <turn_in_place>
     ba0:	08 95       	ret
	} else if (direction > 0) {
     ba2:	18 16       	cp	r1, r24
     ba4:	19 06       	cpc	r1, r25
     ba6:	24 f4       	brge	.+8      	; 0xbb0 <turn_to_puck+0x1c>
		turn_in_place(true, direction);
     ba8:	bc 01       	movw	r22, r24
     baa:	81 e0       	ldi	r24, 0x01	; 1
     bac:	0e 94 cd 01 	call	0x39a	; 0x39a <turn_in_place>
     bb0:	08 95       	ret

00000bb2 <printADC>:

OUTPUTS:
	none
*/

void printADC(int pt_data[]) {
     bb2:	cf 93       	push	r28
     bb4:	df 93       	push	r29
     bb6:	ec 01       	movw	r28, r24

	m_usb_tx_string("   ---   ");
     bb8:	87 ef       	ldi	r24, 0xF7	; 247
     bba:	91 e0       	ldi	r25, 0x01	; 1
     bbc:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
	m_usb_tx_string("D4: ");
     bc0:	82 ef       	ldi	r24, 0xF2	; 242
     bc2:	91 e0       	ldi	r25, 0x01	; 1
     bc4:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
	m_usb_tx_int(pt_data[0]);
     bc8:	88 81       	ld	r24, Y
     bca:	99 81       	ldd	r25, Y+1	; 0x01
     bcc:	0e 94 42 04 	call	0x884	; 0x884 <m_usb_tx_int>
	if(NUM_PTS > 1){
		m_usb_tx_string("   ---   ");
     bd0:	88 ee       	ldi	r24, 0xE8	; 232
     bd2:	91 e0       	ldi	r25, 0x01	; 1
     bd4:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
		m_usb_tx_string("D6: ");
     bd8:	83 ee       	ldi	r24, 0xE3	; 227
     bda:	91 e0       	ldi	r25, 0x01	; 1
     bdc:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
		m_usb_tx_int(pt_data[1]);
     be0:	8a 81       	ldd	r24, Y+2	; 0x02
     be2:	9b 81       	ldd	r25, Y+3	; 0x03
     be4:	0e 94 42 04 	call	0x884	; 0x884 <m_usb_tx_int>
	} if(NUM_PTS > 2) {
		m_usb_tx_string("   ---   ");
     be8:	89 ed       	ldi	r24, 0xD9	; 217
     bea:	91 e0       	ldi	r25, 0x01	; 1
     bec:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
		m_usb_tx_string("D7: ");
     bf0:	84 ed       	ldi	r24, 0xD4	; 212
     bf2:	91 e0       	ldi	r25, 0x01	; 1
     bf4:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
		m_usb_tx_int(pt_data[2]);
     bf8:	8c 81       	ldd	r24, Y+4	; 0x04
     bfa:	9d 81       	ldd	r25, Y+5	; 0x05
     bfc:	0e 94 42 04 	call	0x884	; 0x884 <m_usb_tx_int>
	} if(NUM_PTS > 3){
		m_usb_tx_string("   ---   ");
     c00:	8a ec       	ldi	r24, 0xCA	; 202
     c02:	91 e0       	ldi	r25, 0x01	; 1
     c04:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
		m_usb_tx_string("F0: ");
     c08:	85 ec       	ldi	r24, 0xC5	; 197
     c0a:	91 e0       	ldi	r25, 0x01	; 1
     c0c:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
		m_usb_tx_int(pt_data[3]);
     c10:	8e 81       	ldd	r24, Y+6	; 0x06
     c12:	9f 81       	ldd	r25, Y+7	; 0x07
     c14:	0e 94 42 04 	call	0x884	; 0x884 <m_usb_tx_int>
	} if(NUM_PTS > 4) {
		m_usb_tx_string("   ---   ");
     c18:	8b eb       	ldi	r24, 0xBB	; 187
     c1a:	91 e0       	ldi	r25, 0x01	; 1
     c1c:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
		m_usb_tx_string("F1: ");
     c20:	86 eb       	ldi	r24, 0xB6	; 182
     c22:	91 e0       	ldi	r25, 0x01	; 1
     c24:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
		m_usb_tx_int(pt_data[4]);
     c28:	88 85       	ldd	r24, Y+8	; 0x08
     c2a:	99 85       	ldd	r25, Y+9	; 0x09
     c2c:	0e 94 42 04 	call	0x884	; 0x884 <m_usb_tx_int>
	} if(NUM_PTS > 5){
		m_usb_tx_string("   ---   ");
     c30:	8c ea       	ldi	r24, 0xAC	; 172
     c32:	91 e0       	ldi	r25, 0x01	; 1
     c34:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
		m_usb_tx_string("F4: ");
     c38:	87 ea       	ldi	r24, 0xA7	; 167
     c3a:	91 e0       	ldi	r25, 0x01	; 1
     c3c:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
		m_usb_tx_int(pt_data[5]);
     c40:	8a 85       	ldd	r24, Y+10	; 0x0a
     c42:	9b 85       	ldd	r25, Y+11	; 0x0b
     c44:	0e 94 42 04 	call	0x884	; 0x884 <m_usb_tx_int>
	} if(NUM_PTS > 6) {
		m_usb_tx_string("   ---   ");
     c48:	8d e9       	ldi	r24, 0x9D	; 157
     c4a:	91 e0       	ldi	r25, 0x01	; 1
     c4c:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
		m_usb_tx_string("F5: ");
     c50:	88 e9       	ldi	r24, 0x98	; 152
     c52:	91 e0       	ldi	r25, 0x01	; 1
     c54:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
		m_usb_tx_int(pt_data[6]);
     c58:	8c 85       	ldd	r24, Y+12	; 0x0c
     c5a:	9d 85       	ldd	r25, Y+13	; 0x0d
     c5c:	0e 94 42 04 	call	0x884	; 0x884 <m_usb_tx_int>
	} if(NUM_PTS > 7) {
		m_usb_tx_string("   ---   ");
     c60:	8e e8       	ldi	r24, 0x8E	; 142
     c62:	91 e0       	ldi	r25, 0x01	; 1
     c64:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
		m_usb_tx_string("F6: ");
     c68:	89 e8       	ldi	r24, 0x89	; 137
     c6a:	91 e0       	ldi	r25, 0x01	; 1
     c6c:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
		m_usb_tx_int(pt_data[7]);
     c70:	8e 85       	ldd	r24, Y+14	; 0x0e
     c72:	9f 85       	ldd	r25, Y+15	; 0x0f
     c74:	0e 94 42 04 	call	0x884	; 0x884 <m_usb_tx_int>
	} if(NUM_PTS > 8) {
		m_usb_tx_string("   ---   ");
     c78:	8f e7       	ldi	r24, 0x7F	; 127
     c7a:	91 e0       	ldi	r25, 0x01	; 1
     c7c:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
		m_usb_tx_string("F7: ");
     c80:	8a e7       	ldi	r24, 0x7A	; 122
     c82:	91 e0       	ldi	r25, 0x01	; 1
     c84:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
		m_usb_tx_int(pt_data[8]);
     c88:	88 89       	ldd	r24, Y+16	; 0x10
     c8a:	99 89       	ldd	r25, Y+17	; 0x11
     c8c:	0e 94 42 04 	call	0x884	; 0x884 <m_usb_tx_int>
	}
	m_usb_tx_string("   ---   ");
     c90:	80 e7       	ldi	r24, 0x70	; 112
     c92:	91 e0       	ldi	r25, 0x01	; 1
     c94:	0e 94 26 04 	call	0x84c	; 0x84c <print_P>
	//m_usb_tx_char(13);
}
     c98:	df 91       	pop	r29
     c9a:	cf 91       	pop	r28
     c9c:	08 95       	ret

00000c9e <compare_function_int>:
	
	// edit new_data to have median measurements
	new_data->x = x_med;
	new_data->y = y_med;
	new_data->o = o_med;
}
     c9e:	fc 01       	movw	r30, r24
     ca0:	80 81       	ld	r24, Z
     ca2:	91 81       	ldd	r25, Z+1	; 0x01
     ca4:	fb 01       	movw	r30, r22
     ca6:	20 81       	ld	r18, Z
     ca8:	31 81       	ldd	r19, Z+1	; 0x01
     caa:	82 1b       	sub	r24, r18
     cac:	93 0b       	sbc	r25, r19
     cae:	08 95       	ret

00000cb0 <initialize_past_directions>:
     cb0:	ef e8       	ldi	r30, 0x8F	; 143
     cb2:	f1 e0       	ldi	r31, 0x01	; 1
     cb4:	11 82       	std	Z+1, r1	; 0x01
     cb6:	10 82       	st	Z, r1
     cb8:	13 82       	std	Z+3, r1	; 0x03
     cba:	12 82       	std	Z+2, r1	; 0x02
     cbc:	15 82       	std	Z+5, r1	; 0x05
     cbe:	14 82       	std	Z+4, r1	; 0x04
     cc0:	17 82       	std	Z+7, r1	; 0x07
     cc2:	16 82       	std	Z+6, r1	; 0x06
     cc4:	11 86       	std	Z+9, r1	; 0x09
     cc6:	10 86       	std	Z+8, r1	; 0x08
     cc8:	81 e0       	ldi	r24, 0x01	; 1
     cca:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <past_directions_initialized>
     cce:	08 95       	ret

00000cd0 <update_past_directions>:
     cd0:	e9 e9       	ldi	r30, 0x99	; 153
     cd2:	f1 e0       	ldi	r31, 0x01	; 1
     cd4:	4f e8       	ldi	r20, 0x8F	; 143
     cd6:	51 e0       	ldi	r21, 0x01	; 1
     cd8:	32 91       	ld	r19, -Z
     cda:	22 91       	ld	r18, -Z
     cdc:	33 83       	std	Z+3, r19	; 0x03
     cde:	22 83       	std	Z+2, r18	; 0x02
     ce0:	e4 17       	cp	r30, r20
     ce2:	f5 07       	cpc	r31, r21
     ce4:	c9 f7       	brne	.-14     	; 0xcd8 <update_past_directions+0x8>
     ce6:	90 93 90 01 	sts	0x0190, r25	; 0x800190 <past_directions+0x1>
     cea:	80 93 8f 01 	sts	0x018F, r24	; 0x80018f <past_directions>
     cee:	08 95       	ret

00000cf0 <median_filter_directions>:

// takes in new direction data, updates past_directions array, and updates "new direction"
// to median filtered new directions
int median_filter_directions(int direction){
     cf0:	0f 93       	push	r16
     cf2:	1f 93       	push	r17
     cf4:	cf 93       	push	r28
     cf6:	df 93       	push	r29
     cf8:	cd b7       	in	r28, 0x3d	; 61
     cfa:	de b7       	in	r29, 0x3e	; 62
     cfc:	2a 97       	sbiw	r28, 0x0a	; 10
     cfe:	0f b6       	in	r0, 0x3f	; 63
     d00:	f8 94       	cli
     d02:	de bf       	out	0x3e, r29	; 62
     d04:	0f be       	out	0x3f, r0	; 63
     d06:	cd bf       	out	0x3d, r28	; 61
     d08:	8c 01       	movw	r16, r24
	// if past_directions was not initialized, initialize it
	if(!past_directions_initialized){
     d0a:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <past_directions_initialized>
     d0e:	81 11       	cpse	r24, r1
     d10:	02 c0       	rjmp	.+4      	; 0xd16 <median_filter_directions+0x26>
		initialize_past_directions();
     d12:	0e 94 58 06 	call	0xcb0	; 0xcb0 <initialize_past_directions>
	}
	
	// update past_data array
	update_past_directions(direction);
     d16:	c8 01       	movw	r24, r16
     d18:	0e 94 68 06 	call	0xcd0	; 0xcd0 <update_past_directions>
     d1c:	ef e8       	ldi	r30, 0x8F	; 143
     d1e:	f1 e0       	ldi	r31, 0x01	; 1
     d20:	de 01       	movw	r26, r28
     d22:	11 96       	adiw	r26, 0x01	; 1
     d24:	29 e9       	ldi	r18, 0x99	; 153
     d26:	31 e0       	ldi	r19, 0x01	; 1
	
	int temp[NUM_SAVED_DIRECTIONS];
	
	for (int i = 0; i < NUM_SAVED_DIRECTIONS; i++) {
		temp[i] = past_directions[i];
     d28:	81 91       	ld	r24, Z+
     d2a:	91 91       	ld	r25, Z+
     d2c:	8d 93       	st	X+, r24
     d2e:	9d 93       	st	X+, r25
	// update past_data array
	update_past_directions(direction);
	
	int temp[NUM_SAVED_DIRECTIONS];
	
	for (int i = 0; i < NUM_SAVED_DIRECTIONS; i++) {
     d30:	e2 17       	cp	r30, r18
     d32:	f3 07       	cpc	r31, r19
     d34:	c9 f7       	brne	.-14     	; 0xd28 <median_filter_directions+0x38>
		temp[i] = past_directions[i];
	}

	// sort each list
	qsort(temp, NUM_SAVED_DIRECTIONS, sizeof(int), compare_function_int);
     d36:	2f e4       	ldi	r18, 0x4F	; 79
     d38:	36 e0       	ldi	r19, 0x06	; 6
     d3a:	42 e0       	ldi	r20, 0x02	; 2
     d3c:	50 e0       	ldi	r21, 0x00	; 0
     d3e:	65 e0       	ldi	r22, 0x05	; 5
     d40:	70 e0       	ldi	r23, 0x00	; 0
     d42:	ce 01       	movw	r24, r28
     d44:	01 96       	adiw	r24, 0x01	; 1
     d46:	0e 94 4c 08 	call	0x1098	; 0x1098 <qsort>
	int med_index = NUM_SAVED_DIRECTIONS/2;
	int direction_med = temp[med_index];
	
	// return median direction
	return direction_med;
     d4a:	8d 81       	ldd	r24, Y+5	; 0x05
     d4c:	9e 81       	ldd	r25, Y+6	; 0x06
     d4e:	2a 96       	adiw	r28, 0x0a	; 10
     d50:	0f b6       	in	r0, 0x3f	; 63
     d52:	f8 94       	cli
     d54:	de bf       	out	0x3e, r29	; 62
     d56:	0f be       	out	0x3f, r0	; 63
     d58:	cd bf       	out	0x3d, r28	; 61
     d5a:	df 91       	pop	r29
     d5c:	cf 91       	pop	r28
     d5e:	1f 91       	pop	r17
     d60:	0f 91       	pop	r16
     d62:	08 95       	ret

00000d64 <__fixsfsi>:
     d64:	0e 94 b9 06 	call	0xd72	; 0xd72 <__fixunssfsi>
     d68:	68 94       	set
     d6a:	b1 11       	cpse	r27, r1
     d6c:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__fp_szero>
     d70:	08 95       	ret

00000d72 <__fixunssfsi>:
     d72:	0e 94 55 07 	call	0xeaa	; 0xeaa <__fp_splitA>
     d76:	88 f0       	brcs	.+34     	; 0xd9a <__fixunssfsi+0x28>
     d78:	9f 57       	subi	r25, 0x7F	; 127
     d7a:	98 f0       	brcs	.+38     	; 0xda2 <__fixunssfsi+0x30>
     d7c:	b9 2f       	mov	r27, r25
     d7e:	99 27       	eor	r25, r25
     d80:	b7 51       	subi	r27, 0x17	; 23
     d82:	b0 f0       	brcs	.+44     	; 0xdb0 <__fixunssfsi+0x3e>
     d84:	e1 f0       	breq	.+56     	; 0xdbe <__fixunssfsi+0x4c>
     d86:	66 0f       	add	r22, r22
     d88:	77 1f       	adc	r23, r23
     d8a:	88 1f       	adc	r24, r24
     d8c:	99 1f       	adc	r25, r25
     d8e:	1a f0       	brmi	.+6      	; 0xd96 <__fixunssfsi+0x24>
     d90:	ba 95       	dec	r27
     d92:	c9 f7       	brne	.-14     	; 0xd86 <__fixunssfsi+0x14>
     d94:	14 c0       	rjmp	.+40     	; 0xdbe <__fixunssfsi+0x4c>
     d96:	b1 30       	cpi	r27, 0x01	; 1
     d98:	91 f0       	breq	.+36     	; 0xdbe <__fixunssfsi+0x4c>
     d9a:	0e 94 6f 07 	call	0xede	; 0xede <__fp_zero>
     d9e:	b1 e0       	ldi	r27, 0x01	; 1
     da0:	08 95       	ret
     da2:	0c 94 6f 07 	jmp	0xede	; 0xede <__fp_zero>
     da6:	67 2f       	mov	r22, r23
     da8:	78 2f       	mov	r23, r24
     daa:	88 27       	eor	r24, r24
     dac:	b8 5f       	subi	r27, 0xF8	; 248
     dae:	39 f0       	breq	.+14     	; 0xdbe <__fixunssfsi+0x4c>
     db0:	b9 3f       	cpi	r27, 0xF9	; 249
     db2:	cc f3       	brlt	.-14     	; 0xda6 <__fixunssfsi+0x34>
     db4:	86 95       	lsr	r24
     db6:	77 95       	ror	r23
     db8:	67 95       	ror	r22
     dba:	b3 95       	inc	r27
     dbc:	d9 f7       	brne	.-10     	; 0xdb4 <__fixunssfsi+0x42>
     dbe:	3e f4       	brtc	.+14     	; 0xdce <__fixunssfsi+0x5c>
     dc0:	90 95       	com	r25
     dc2:	80 95       	com	r24
     dc4:	70 95       	com	r23
     dc6:	61 95       	neg	r22
     dc8:	7f 4f       	sbci	r23, 0xFF	; 255
     dca:	8f 4f       	sbci	r24, 0xFF	; 255
     dcc:	9f 4f       	sbci	r25, 0xFF	; 255
     dce:	08 95       	ret

00000dd0 <__floatunsisf>:
     dd0:	e8 94       	clt
     dd2:	09 c0       	rjmp	.+18     	; 0xde6 <__floatsisf+0x12>

00000dd4 <__floatsisf>:
     dd4:	97 fb       	bst	r25, 7
     dd6:	3e f4       	brtc	.+14     	; 0xde6 <__floatsisf+0x12>
     dd8:	90 95       	com	r25
     dda:	80 95       	com	r24
     ddc:	70 95       	com	r23
     dde:	61 95       	neg	r22
     de0:	7f 4f       	sbci	r23, 0xFF	; 255
     de2:	8f 4f       	sbci	r24, 0xFF	; 255
     de4:	9f 4f       	sbci	r25, 0xFF	; 255
     de6:	99 23       	and	r25, r25
     de8:	a9 f0       	breq	.+42     	; 0xe14 <__floatsisf+0x40>
     dea:	f9 2f       	mov	r31, r25
     dec:	96 e9       	ldi	r25, 0x96	; 150
     dee:	bb 27       	eor	r27, r27
     df0:	93 95       	inc	r25
     df2:	f6 95       	lsr	r31
     df4:	87 95       	ror	r24
     df6:	77 95       	ror	r23
     df8:	67 95       	ror	r22
     dfa:	b7 95       	ror	r27
     dfc:	f1 11       	cpse	r31, r1
     dfe:	f8 cf       	rjmp	.-16     	; 0xdf0 <__floatsisf+0x1c>
     e00:	fa f4       	brpl	.+62     	; 0xe40 <__floatsisf+0x6c>
     e02:	bb 0f       	add	r27, r27
     e04:	11 f4       	brne	.+4      	; 0xe0a <__floatsisf+0x36>
     e06:	60 ff       	sbrs	r22, 0
     e08:	1b c0       	rjmp	.+54     	; 0xe40 <__floatsisf+0x6c>
     e0a:	6f 5f       	subi	r22, 0xFF	; 255
     e0c:	7f 4f       	sbci	r23, 0xFF	; 255
     e0e:	8f 4f       	sbci	r24, 0xFF	; 255
     e10:	9f 4f       	sbci	r25, 0xFF	; 255
     e12:	16 c0       	rjmp	.+44     	; 0xe40 <__floatsisf+0x6c>
     e14:	88 23       	and	r24, r24
     e16:	11 f0       	breq	.+4      	; 0xe1c <__floatsisf+0x48>
     e18:	96 e9       	ldi	r25, 0x96	; 150
     e1a:	11 c0       	rjmp	.+34     	; 0xe3e <__floatsisf+0x6a>
     e1c:	77 23       	and	r23, r23
     e1e:	21 f0       	breq	.+8      	; 0xe28 <__floatsisf+0x54>
     e20:	9e e8       	ldi	r25, 0x8E	; 142
     e22:	87 2f       	mov	r24, r23
     e24:	76 2f       	mov	r23, r22
     e26:	05 c0       	rjmp	.+10     	; 0xe32 <__floatsisf+0x5e>
     e28:	66 23       	and	r22, r22
     e2a:	71 f0       	breq	.+28     	; 0xe48 <__floatsisf+0x74>
     e2c:	96 e8       	ldi	r25, 0x86	; 134
     e2e:	86 2f       	mov	r24, r22
     e30:	70 e0       	ldi	r23, 0x00	; 0
     e32:	60 e0       	ldi	r22, 0x00	; 0
     e34:	2a f0       	brmi	.+10     	; 0xe40 <__floatsisf+0x6c>
     e36:	9a 95       	dec	r25
     e38:	66 0f       	add	r22, r22
     e3a:	77 1f       	adc	r23, r23
     e3c:	88 1f       	adc	r24, r24
     e3e:	da f7       	brpl	.-10     	; 0xe36 <__floatsisf+0x62>
     e40:	88 0f       	add	r24, r24
     e42:	96 95       	lsr	r25
     e44:	87 95       	ror	r24
     e46:	97 f9       	bld	r25, 7
     e48:	08 95       	ret

00000e4a <__fp_inf>:
     e4a:	97 f9       	bld	r25, 7
     e4c:	9f 67       	ori	r25, 0x7F	; 127
     e4e:	80 e8       	ldi	r24, 0x80	; 128
     e50:	70 e0       	ldi	r23, 0x00	; 0
     e52:	60 e0       	ldi	r22, 0x00	; 0
     e54:	08 95       	ret

00000e56 <__fp_nan>:
     e56:	9f ef       	ldi	r25, 0xFF	; 255
     e58:	80 ec       	ldi	r24, 0xC0	; 192
     e5a:	08 95       	ret

00000e5c <__fp_pscA>:
     e5c:	00 24       	eor	r0, r0
     e5e:	0a 94       	dec	r0
     e60:	16 16       	cp	r1, r22
     e62:	17 06       	cpc	r1, r23
     e64:	18 06       	cpc	r1, r24
     e66:	09 06       	cpc	r0, r25
     e68:	08 95       	ret

00000e6a <__fp_pscB>:
     e6a:	00 24       	eor	r0, r0
     e6c:	0a 94       	dec	r0
     e6e:	12 16       	cp	r1, r18
     e70:	13 06       	cpc	r1, r19
     e72:	14 06       	cpc	r1, r20
     e74:	05 06       	cpc	r0, r21
     e76:	08 95       	ret

00000e78 <__fp_round>:
     e78:	09 2e       	mov	r0, r25
     e7a:	03 94       	inc	r0
     e7c:	00 0c       	add	r0, r0
     e7e:	11 f4       	brne	.+4      	; 0xe84 <__fp_round+0xc>
     e80:	88 23       	and	r24, r24
     e82:	52 f0       	brmi	.+20     	; 0xe98 <__fp_round+0x20>
     e84:	bb 0f       	add	r27, r27
     e86:	40 f4       	brcc	.+16     	; 0xe98 <__fp_round+0x20>
     e88:	bf 2b       	or	r27, r31
     e8a:	11 f4       	brne	.+4      	; 0xe90 <__fp_round+0x18>
     e8c:	60 ff       	sbrs	r22, 0
     e8e:	04 c0       	rjmp	.+8      	; 0xe98 <__fp_round+0x20>
     e90:	6f 5f       	subi	r22, 0xFF	; 255
     e92:	7f 4f       	sbci	r23, 0xFF	; 255
     e94:	8f 4f       	sbci	r24, 0xFF	; 255
     e96:	9f 4f       	sbci	r25, 0xFF	; 255
     e98:	08 95       	ret

00000e9a <__fp_split3>:
     e9a:	57 fd       	sbrc	r21, 7
     e9c:	90 58       	subi	r25, 0x80	; 128
     e9e:	44 0f       	add	r20, r20
     ea0:	55 1f       	adc	r21, r21
     ea2:	59 f0       	breq	.+22     	; 0xeba <__fp_splitA+0x10>
     ea4:	5f 3f       	cpi	r21, 0xFF	; 255
     ea6:	71 f0       	breq	.+28     	; 0xec4 <__fp_splitA+0x1a>
     ea8:	47 95       	ror	r20

00000eaa <__fp_splitA>:
     eaa:	88 0f       	add	r24, r24
     eac:	97 fb       	bst	r25, 7
     eae:	99 1f       	adc	r25, r25
     eb0:	61 f0       	breq	.+24     	; 0xeca <__fp_splitA+0x20>
     eb2:	9f 3f       	cpi	r25, 0xFF	; 255
     eb4:	79 f0       	breq	.+30     	; 0xed4 <__fp_splitA+0x2a>
     eb6:	87 95       	ror	r24
     eb8:	08 95       	ret
     eba:	12 16       	cp	r1, r18
     ebc:	13 06       	cpc	r1, r19
     ebe:	14 06       	cpc	r1, r20
     ec0:	55 1f       	adc	r21, r21
     ec2:	f2 cf       	rjmp	.-28     	; 0xea8 <__fp_split3+0xe>
     ec4:	46 95       	lsr	r20
     ec6:	f1 df       	rcall	.-30     	; 0xeaa <__fp_splitA>
     ec8:	08 c0       	rjmp	.+16     	; 0xeda <__fp_splitA+0x30>
     eca:	16 16       	cp	r1, r22
     ecc:	17 06       	cpc	r1, r23
     ece:	18 06       	cpc	r1, r24
     ed0:	99 1f       	adc	r25, r25
     ed2:	f1 cf       	rjmp	.-30     	; 0xeb6 <__fp_splitA+0xc>
     ed4:	86 95       	lsr	r24
     ed6:	71 05       	cpc	r23, r1
     ed8:	61 05       	cpc	r22, r1
     eda:	08 94       	sec
     edc:	08 95       	ret

00000ede <__fp_zero>:
     ede:	e8 94       	clt

00000ee0 <__fp_szero>:
     ee0:	bb 27       	eor	r27, r27
     ee2:	66 27       	eor	r22, r22
     ee4:	77 27       	eor	r23, r23
     ee6:	cb 01       	movw	r24, r22
     ee8:	97 f9       	bld	r25, 7
     eea:	08 95       	ret

00000eec <__mulsf3>:
     eec:	0e 94 89 07 	call	0xf12	; 0xf12 <__mulsf3x>
     ef0:	0c 94 3c 07 	jmp	0xe78	; 0xe78 <__fp_round>
     ef4:	0e 94 2e 07 	call	0xe5c	; 0xe5c <__fp_pscA>
     ef8:	38 f0       	brcs	.+14     	; 0xf08 <__mulsf3+0x1c>
     efa:	0e 94 35 07 	call	0xe6a	; 0xe6a <__fp_pscB>
     efe:	20 f0       	brcs	.+8      	; 0xf08 <__mulsf3+0x1c>
     f00:	95 23       	and	r25, r21
     f02:	11 f0       	breq	.+4      	; 0xf08 <__mulsf3+0x1c>
     f04:	0c 94 25 07 	jmp	0xe4a	; 0xe4a <__fp_inf>
     f08:	0c 94 2b 07 	jmp	0xe56	; 0xe56 <__fp_nan>
     f0c:	11 24       	eor	r1, r1
     f0e:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__fp_szero>

00000f12 <__mulsf3x>:
     f12:	0e 94 4d 07 	call	0xe9a	; 0xe9a <__fp_split3>
     f16:	70 f3       	brcs	.-36     	; 0xef4 <__mulsf3+0x8>

00000f18 <__mulsf3_pse>:
     f18:	95 9f       	mul	r25, r21
     f1a:	c1 f3       	breq	.-16     	; 0xf0c <__mulsf3+0x20>
     f1c:	95 0f       	add	r25, r21
     f1e:	50 e0       	ldi	r21, 0x00	; 0
     f20:	55 1f       	adc	r21, r21
     f22:	62 9f       	mul	r22, r18
     f24:	f0 01       	movw	r30, r0
     f26:	72 9f       	mul	r23, r18
     f28:	bb 27       	eor	r27, r27
     f2a:	f0 0d       	add	r31, r0
     f2c:	b1 1d       	adc	r27, r1
     f2e:	63 9f       	mul	r22, r19
     f30:	aa 27       	eor	r26, r26
     f32:	f0 0d       	add	r31, r0
     f34:	b1 1d       	adc	r27, r1
     f36:	aa 1f       	adc	r26, r26
     f38:	64 9f       	mul	r22, r20
     f3a:	66 27       	eor	r22, r22
     f3c:	b0 0d       	add	r27, r0
     f3e:	a1 1d       	adc	r26, r1
     f40:	66 1f       	adc	r22, r22
     f42:	82 9f       	mul	r24, r18
     f44:	22 27       	eor	r18, r18
     f46:	b0 0d       	add	r27, r0
     f48:	a1 1d       	adc	r26, r1
     f4a:	62 1f       	adc	r22, r18
     f4c:	73 9f       	mul	r23, r19
     f4e:	b0 0d       	add	r27, r0
     f50:	a1 1d       	adc	r26, r1
     f52:	62 1f       	adc	r22, r18
     f54:	83 9f       	mul	r24, r19
     f56:	a0 0d       	add	r26, r0
     f58:	61 1d       	adc	r22, r1
     f5a:	22 1f       	adc	r18, r18
     f5c:	74 9f       	mul	r23, r20
     f5e:	33 27       	eor	r19, r19
     f60:	a0 0d       	add	r26, r0
     f62:	61 1d       	adc	r22, r1
     f64:	23 1f       	adc	r18, r19
     f66:	84 9f       	mul	r24, r20
     f68:	60 0d       	add	r22, r0
     f6a:	21 1d       	adc	r18, r1
     f6c:	82 2f       	mov	r24, r18
     f6e:	76 2f       	mov	r23, r22
     f70:	6a 2f       	mov	r22, r26
     f72:	11 24       	eor	r1, r1
     f74:	9f 57       	subi	r25, 0x7F	; 127
     f76:	50 40       	sbci	r21, 0x00	; 0
     f78:	9a f0       	brmi	.+38     	; 0xfa0 <__mulsf3_pse+0x88>
     f7a:	f1 f0       	breq	.+60     	; 0xfb8 <__mulsf3_pse+0xa0>
     f7c:	88 23       	and	r24, r24
     f7e:	4a f0       	brmi	.+18     	; 0xf92 <__mulsf3_pse+0x7a>
     f80:	ee 0f       	add	r30, r30
     f82:	ff 1f       	adc	r31, r31
     f84:	bb 1f       	adc	r27, r27
     f86:	66 1f       	adc	r22, r22
     f88:	77 1f       	adc	r23, r23
     f8a:	88 1f       	adc	r24, r24
     f8c:	91 50       	subi	r25, 0x01	; 1
     f8e:	50 40       	sbci	r21, 0x00	; 0
     f90:	a9 f7       	brne	.-22     	; 0xf7c <__mulsf3_pse+0x64>
     f92:	9e 3f       	cpi	r25, 0xFE	; 254
     f94:	51 05       	cpc	r21, r1
     f96:	80 f0       	brcs	.+32     	; 0xfb8 <__mulsf3_pse+0xa0>
     f98:	0c 94 25 07 	jmp	0xe4a	; 0xe4a <__fp_inf>
     f9c:	0c 94 70 07 	jmp	0xee0	; 0xee0 <__fp_szero>
     fa0:	5f 3f       	cpi	r21, 0xFF	; 255
     fa2:	e4 f3       	brlt	.-8      	; 0xf9c <__mulsf3_pse+0x84>
     fa4:	98 3e       	cpi	r25, 0xE8	; 232
     fa6:	d4 f3       	brlt	.-12     	; 0xf9c <__mulsf3_pse+0x84>
     fa8:	86 95       	lsr	r24
     faa:	77 95       	ror	r23
     fac:	67 95       	ror	r22
     fae:	b7 95       	ror	r27
     fb0:	f7 95       	ror	r31
     fb2:	e7 95       	ror	r30
     fb4:	9f 5f       	subi	r25, 0xFF	; 255
     fb6:	c1 f7       	brne	.-16     	; 0xfa8 <__mulsf3_pse+0x90>
     fb8:	fe 2b       	or	r31, r30
     fba:	88 0f       	add	r24, r24
     fbc:	91 1d       	adc	r25, r1
     fbe:	96 95       	lsr	r25
     fc0:	87 95       	ror	r24
     fc2:	97 f9       	bld	r25, 7
     fc4:	08 95       	ret

00000fc6 <__divmodhi4>:
     fc6:	97 fb       	bst	r25, 7
     fc8:	07 2e       	mov	r0, r23
     fca:	16 f4       	brtc	.+4      	; 0xfd0 <__divmodhi4+0xa>
     fcc:	00 94       	com	r0
     fce:	07 d0       	rcall	.+14     	; 0xfde <__divmodhi4_neg1>
     fd0:	77 fd       	sbrc	r23, 7
     fd2:	09 d0       	rcall	.+18     	; 0xfe6 <__divmodhi4_neg2>
     fd4:	0e 94 f7 07 	call	0xfee	; 0xfee <__udivmodhi4>
     fd8:	07 fc       	sbrc	r0, 7
     fda:	05 d0       	rcall	.+10     	; 0xfe6 <__divmodhi4_neg2>
     fdc:	3e f4       	brtc	.+14     	; 0xfec <__divmodhi4_exit>

00000fde <__divmodhi4_neg1>:
     fde:	90 95       	com	r25
     fe0:	81 95       	neg	r24
     fe2:	9f 4f       	sbci	r25, 0xFF	; 255
     fe4:	08 95       	ret

00000fe6 <__divmodhi4_neg2>:
     fe6:	70 95       	com	r23
     fe8:	61 95       	neg	r22
     fea:	7f 4f       	sbci	r23, 0xFF	; 255

00000fec <__divmodhi4_exit>:
     fec:	08 95       	ret

00000fee <__udivmodhi4>:
     fee:	aa 1b       	sub	r26, r26
     ff0:	bb 1b       	sub	r27, r27
     ff2:	51 e1       	ldi	r21, 0x11	; 17
     ff4:	07 c0       	rjmp	.+14     	; 0x1004 <__udivmodhi4_ep>

00000ff6 <__udivmodhi4_loop>:
     ff6:	aa 1f       	adc	r26, r26
     ff8:	bb 1f       	adc	r27, r27
     ffa:	a6 17       	cp	r26, r22
     ffc:	b7 07       	cpc	r27, r23
     ffe:	10 f0       	brcs	.+4      	; 0x1004 <__udivmodhi4_ep>
    1000:	a6 1b       	sub	r26, r22
    1002:	b7 0b       	sbc	r27, r23

00001004 <__udivmodhi4_ep>:
    1004:	88 1f       	adc	r24, r24
    1006:	99 1f       	adc	r25, r25
    1008:	5a 95       	dec	r21
    100a:	a9 f7       	brne	.-22     	; 0xff6 <__udivmodhi4_loop>
    100c:	80 95       	com	r24
    100e:	90 95       	com	r25
    1010:	bc 01       	movw	r22, r24
    1012:	cd 01       	movw	r24, r26
    1014:	08 95       	ret

00001016 <swapfunc>:
    1016:	dc 01       	movw	r26, r24
    1018:	fb 01       	movw	r30, r22
    101a:	8c 91       	ld	r24, X
    101c:	90 81       	ld	r25, Z
    101e:	9d 93       	st	X+, r25
    1020:	81 93       	st	Z+, r24
    1022:	41 50       	subi	r20, 0x01	; 1
    1024:	51 09       	sbc	r21, r1
    1026:	14 16       	cp	r1, r20
    1028:	15 06       	cpc	r1, r21
    102a:	bc f3       	brlt	.-18     	; 0x101a <swapfunc+0x4>
    102c:	08 95       	ret

0000102e <med3>:
    102e:	a0 e0       	ldi	r26, 0x00	; 0
    1030:	b0 e0       	ldi	r27, 0x00	; 0
    1032:	ed e1       	ldi	r30, 0x1D	; 29
    1034:	f8 e0       	ldi	r31, 0x08	; 8
    1036:	0c 94 32 0a 	jmp	0x1464	; 0x1464 <__prologue_saves__+0x14>
    103a:	d8 2f       	mov	r29, r24
    103c:	c9 2f       	mov	r28, r25
    103e:	6b 01       	movw	r12, r22
    1040:	8a 01       	movw	r16, r20
    1042:	79 01       	movw	r14, r18
    1044:	f9 01       	movw	r30, r18
    1046:	09 95       	icall
    1048:	b8 01       	movw	r22, r16
    104a:	97 ff       	sbrs	r25, 7
    104c:	0f c0       	rjmp	.+30     	; 0x106c <med3+0x3e>
    104e:	c6 01       	movw	r24, r12
    1050:	f7 01       	movw	r30, r14
    1052:	09 95       	icall
    1054:	97 ff       	sbrs	r25, 7
    1056:	02 c0       	rjmp	.+4      	; 0x105c <med3+0x2e>
    1058:	c6 01       	movw	r24, r12
    105a:	19 c0       	rjmp	.+50     	; 0x108e <med3+0x60>
    105c:	b8 01       	movw	r22, r16
    105e:	8d 2f       	mov	r24, r29
    1060:	9c 2f       	mov	r25, r28
    1062:	f7 01       	movw	r30, r14
    1064:	09 95       	icall
    1066:	97 fd       	sbrc	r25, 7
    1068:	0e c0       	rjmp	.+28     	; 0x1086 <med3+0x58>
    106a:	0f c0       	rjmp	.+30     	; 0x108a <med3+0x5c>
    106c:	c6 01       	movw	r24, r12
    106e:	f7 01       	movw	r30, r14
    1070:	09 95       	icall
    1072:	18 16       	cp	r1, r24
    1074:	19 06       	cpc	r1, r25
    1076:	84 f3       	brlt	.-32     	; 0x1058 <med3+0x2a>
    1078:	b8 01       	movw	r22, r16
    107a:	8d 2f       	mov	r24, r29
    107c:	9c 2f       	mov	r25, r28
    107e:	f7 01       	movw	r30, r14
    1080:	09 95       	icall
    1082:	97 fd       	sbrc	r25, 7
    1084:	02 c0       	rjmp	.+4      	; 0x108a <med3+0x5c>
    1086:	c8 01       	movw	r24, r16
    1088:	02 c0       	rjmp	.+4      	; 0x108e <med3+0x60>
    108a:	8d 2f       	mov	r24, r29
    108c:	9c 2f       	mov	r25, r28
    108e:	cd b7       	in	r28, 0x3d	; 61
    1090:	de b7       	in	r29, 0x3e	; 62
    1092:	e8 e0       	ldi	r30, 0x08	; 8
    1094:	0c 94 4e 0a 	jmp	0x149c	; 0x149c <__epilogue_restores__+0x14>

00001098 <qsort>:
    1098:	aa e0       	ldi	r26, 0x0A	; 10
    109a:	b0 e0       	ldi	r27, 0x00	; 0
    109c:	e2 e5       	ldi	r30, 0x52	; 82
    109e:	f8 e0       	ldi	r31, 0x08	; 8
    10a0:	0c 94 28 0a 	jmp	0x1450	; 0x1450 <__prologue_saves__>
    10a4:	8c 01       	movw	r16, r24
    10a6:	7b 01       	movw	r14, r22
    10a8:	5a 87       	std	Y+10, r21	; 0x0a
    10aa:	49 87       	std	Y+9, r20	; 0x09
    10ac:	69 01       	movw	r12, r18
    10ae:	51 95       	neg	r21
    10b0:	41 95       	neg	r20
    10b2:	51 09       	sbc	r21, r1
    10b4:	5e 83       	std	Y+6, r21	; 0x06
    10b6:	4d 83       	std	Y+5, r20	; 0x05
    10b8:	29 85       	ldd	r18, Y+9	; 0x09
    10ba:	3a 85       	ldd	r19, Y+10	; 0x0a
    10bc:	20 0f       	add	r18, r16
    10be:	31 1f       	adc	r19, r17
    10c0:	3a 83       	std	Y+2, r19	; 0x02
    10c2:	29 83       	std	Y+1, r18	; 0x01
    10c4:	37 e0       	ldi	r19, 0x07	; 7
    10c6:	e3 16       	cp	r14, r19
    10c8:	f1 04       	cpc	r15, r1
    10ca:	78 f5       	brcc	.+94     	; 0x112a <qsort+0x92>
    10cc:	89 80       	ldd	r8, Y+1	; 0x01
    10ce:	9a 80       	ldd	r9, Y+2	; 0x02
    10d0:	49 85       	ldd	r20, Y+9	; 0x09
    10d2:	5a 85       	ldd	r21, Y+10	; 0x0a
    10d4:	e4 9e       	mul	r14, r20
    10d6:	c0 01       	movw	r24, r0
    10d8:	e5 9e       	mul	r14, r21
    10da:	90 0d       	add	r25, r0
    10dc:	f4 9e       	mul	r15, r20
    10de:	90 0d       	add	r25, r0
    10e0:	11 24       	eor	r1, r1
    10e2:	78 01       	movw	r14, r16
    10e4:	e8 0e       	add	r14, r24
    10e6:	f9 1e       	adc	r15, r25
    10e8:	8e 14       	cp	r8, r14
    10ea:	9f 04       	cpc	r9, r15
    10ec:	08 f0       	brcs	.+2      	; 0x10f0 <qsort+0x58>
    10ee:	77 c1       	rjmp	.+750    	; 0x13de <qsort+0x346>
    10f0:	34 01       	movw	r6, r8
    10f2:	06 15       	cp	r16, r6
    10f4:	17 05       	cpc	r17, r7
    10f6:	a0 f4       	brcc	.+40     	; 0x1120 <qsort+0x88>
    10f8:	53 01       	movw	r10, r6
    10fa:	69 85       	ldd	r22, Y+9	; 0x09
    10fc:	7a 85       	ldd	r23, Y+10	; 0x0a
    10fe:	a6 1a       	sub	r10, r22
    1100:	b7 0a       	sbc	r11, r23
    1102:	b3 01       	movw	r22, r6
    1104:	c5 01       	movw	r24, r10
    1106:	f6 01       	movw	r30, r12
    1108:	09 95       	icall
    110a:	18 16       	cp	r1, r24
    110c:	19 06       	cpc	r1, r25
    110e:	44 f4       	brge	.+16     	; 0x1120 <qsort+0x88>
    1110:	49 85       	ldd	r20, Y+9	; 0x09
    1112:	5a 85       	ldd	r21, Y+10	; 0x0a
    1114:	b5 01       	movw	r22, r10
    1116:	c3 01       	movw	r24, r6
    1118:	0e 94 0b 08 	call	0x1016	; 0x1016 <swapfunc>
    111c:	35 01       	movw	r6, r10
    111e:	e9 cf       	rjmp	.-46     	; 0x10f2 <qsort+0x5a>
    1120:	29 85       	ldd	r18, Y+9	; 0x09
    1122:	3a 85       	ldd	r19, Y+10	; 0x0a
    1124:	82 0e       	add	r8, r18
    1126:	93 1e       	adc	r9, r19
    1128:	df cf       	rjmp	.-66     	; 0x10e8 <qsort+0x50>
    112a:	c7 01       	movw	r24, r14
    112c:	96 95       	lsr	r25
    112e:	87 95       	ror	r24
    1130:	49 85       	ldd	r20, Y+9	; 0x09
    1132:	5a 85       	ldd	r21, Y+10	; 0x0a
    1134:	84 9f       	mul	r24, r20
    1136:	50 01       	movw	r10, r0
    1138:	85 9f       	mul	r24, r21
    113a:	b0 0c       	add	r11, r0
    113c:	94 9f       	mul	r25, r20
    113e:	b0 0c       	add	r11, r0
    1140:	11 24       	eor	r1, r1
    1142:	a0 0e       	add	r10, r16
    1144:	b1 1e       	adc	r11, r17
    1146:	b7 01       	movw	r22, r14
    1148:	61 50       	subi	r22, 0x01	; 1
    114a:	71 09       	sbc	r23, r1
    114c:	7c 83       	std	Y+4, r23	; 0x04
    114e:	6b 83       	std	Y+3, r22	; 0x03
    1150:	77 e0       	ldi	r23, 0x07	; 7
    1152:	e7 16       	cp	r14, r23
    1154:	f1 04       	cpc	r15, r1
    1156:	09 f4       	brne	.+2      	; 0x115a <qsort+0xc2>
    1158:	4c c0       	rjmp	.+152    	; 0x11f2 <qsort+0x15a>
    115a:	8b 81       	ldd	r24, Y+3	; 0x03
    115c:	9c 81       	ldd	r25, Y+4	; 0x04
    115e:	84 9f       	mul	r24, r20
    1160:	30 01       	movw	r6, r0
    1162:	85 9f       	mul	r24, r21
    1164:	70 0c       	add	r7, r0
    1166:	94 9f       	mul	r25, r20
    1168:	70 0c       	add	r7, r0
    116a:	11 24       	eor	r1, r1
    116c:	60 0e       	add	r6, r16
    116e:	71 1e       	adc	r7, r17
    1170:	99 e2       	ldi	r25, 0x29	; 41
    1172:	e9 16       	cp	r14, r25
    1174:	f1 04       	cpc	r15, r1
    1176:	a8 f1       	brcs	.+106    	; 0x11e2 <qsort+0x14a>
    1178:	c7 01       	movw	r24, r14
    117a:	23 e0       	ldi	r18, 0x03	; 3
    117c:	96 95       	lsr	r25
    117e:	87 95       	ror	r24
    1180:	2a 95       	dec	r18
    1182:	e1 f7       	brne	.-8      	; 0x117c <qsort+0xe4>
    1184:	84 9f       	mul	r24, r20
    1186:	40 01       	movw	r8, r0
    1188:	85 9f       	mul	r24, r21
    118a:	90 0c       	add	r9, r0
    118c:	94 9f       	mul	r25, r20
    118e:	90 0c       	add	r9, r0
    1190:	11 24       	eor	r1, r1
    1192:	14 01       	movw	r2, r8
    1194:	22 0c       	add	r2, r2
    1196:	33 1c       	adc	r3, r3
    1198:	a8 01       	movw	r20, r16
    119a:	42 0d       	add	r20, r2
    119c:	53 1d       	adc	r21, r3
    119e:	b8 01       	movw	r22, r16
    11a0:	68 0d       	add	r22, r8
    11a2:	79 1d       	adc	r23, r9
    11a4:	96 01       	movw	r18, r12
    11a6:	c8 01       	movw	r24, r16
    11a8:	0e 94 17 08 	call	0x102e	; 0x102e <med3>
    11ac:	2c 01       	movw	r4, r24
    11ae:	a5 01       	movw	r20, r10
    11b0:	48 0d       	add	r20, r8
    11b2:	59 1d       	adc	r21, r9
    11b4:	91 94       	neg	r9
    11b6:	81 94       	neg	r8
    11b8:	91 08       	sbc	r9, r1
    11ba:	96 01       	movw	r18, r12
    11bc:	b5 01       	movw	r22, r10
    11be:	c5 01       	movw	r24, r10
    11c0:	88 0d       	add	r24, r8
    11c2:	99 1d       	adc	r25, r9
    11c4:	0e 94 17 08 	call	0x102e	; 0x102e <med3>
    11c8:	5c 01       	movw	r10, r24
    11ca:	b3 01       	movw	r22, r6
    11cc:	68 0d       	add	r22, r8
    11ce:	79 1d       	adc	r23, r9
    11d0:	96 01       	movw	r18, r12
    11d2:	a3 01       	movw	r20, r6
    11d4:	c3 01       	movw	r24, r6
    11d6:	82 19       	sub	r24, r2
    11d8:	93 09       	sbc	r25, r3
    11da:	0e 94 17 08 	call	0x102e	; 0x102e <med3>
    11de:	3c 01       	movw	r6, r24
    11e0:	01 c0       	rjmp	.+2      	; 0x11e4 <qsort+0x14c>
    11e2:	28 01       	movw	r4, r16
    11e4:	96 01       	movw	r18, r12
    11e6:	a3 01       	movw	r20, r6
    11e8:	b5 01       	movw	r22, r10
    11ea:	c2 01       	movw	r24, r4
    11ec:	0e 94 17 08 	call	0x102e	; 0x102e <med3>
    11f0:	5c 01       	movw	r10, r24
    11f2:	49 85       	ldd	r20, Y+9	; 0x09
    11f4:	5a 85       	ldd	r21, Y+10	; 0x0a
    11f6:	b5 01       	movw	r22, r10
    11f8:	c8 01       	movw	r24, r16
    11fa:	0e 94 0b 08 	call	0x1016	; 0x1016 <swapfunc>
    11fe:	89 80       	ldd	r8, Y+1	; 0x01
    1200:	9a 80       	ldd	r9, Y+2	; 0x02
    1202:	4b 81       	ldd	r20, Y+3	; 0x03
    1204:	5c 81       	ldd	r21, Y+4	; 0x04
    1206:	69 85       	ldd	r22, Y+9	; 0x09
    1208:	7a 85       	ldd	r23, Y+10	; 0x0a
    120a:	46 9f       	mul	r20, r22
    120c:	90 01       	movw	r18, r0
    120e:	47 9f       	mul	r20, r23
    1210:	30 0d       	add	r19, r0
    1212:	56 9f       	mul	r21, r22
    1214:	30 0d       	add	r19, r0
    1216:	11 24       	eor	r1, r1
    1218:	3a 83       	std	Y+2, r19	; 0x02
    121a:	29 83       	std	Y+1, r18	; 0x01
    121c:	39 01       	movw	r6, r18
    121e:	60 0e       	add	r6, r16
    1220:	71 1e       	adc	r7, r17
    1222:	23 01       	movw	r4, r6
    1224:	54 01       	movw	r10, r8
    1226:	14 01       	movw	r2, r8
    1228:	20 e0       	ldi	r18, 0x00	; 0
    122a:	30 e0       	ldi	r19, 0x00	; 0
    122c:	6a 14       	cp	r6, r10
    122e:	7b 04       	cpc	r7, r11
    1230:	08 f4       	brcc	.+2      	; 0x1234 <qsort+0x19c>
    1232:	3f c0       	rjmp	.+126    	; 0x12b2 <qsort+0x21a>
    1234:	b8 01       	movw	r22, r16
    1236:	c5 01       	movw	r24, r10
    1238:	2f 83       	std	Y+7, r18	; 0x07
    123a:	38 87       	std	Y+8, r19	; 0x08
    123c:	f6 01       	movw	r30, r12
    123e:	09 95       	icall
    1240:	2f 81       	ldd	r18, Y+7	; 0x07
    1242:	38 85       	ldd	r19, Y+8	; 0x08
    1244:	18 16       	cp	r1, r24
    1246:	19 06       	cpc	r1, r25
    1248:	a4 f1       	brlt	.+104    	; 0x12b2 <qsort+0x21a>
    124a:	89 2b       	or	r24, r25
    124c:	61 f4       	brne	.+24     	; 0x1266 <qsort+0x1ce>
    124e:	49 85       	ldd	r20, Y+9	; 0x09
    1250:	5a 85       	ldd	r21, Y+10	; 0x0a
    1252:	b5 01       	movw	r22, r10
    1254:	c1 01       	movw	r24, r2
    1256:	0e 94 0b 08 	call	0x1016	; 0x1016 <swapfunc>
    125a:	89 85       	ldd	r24, Y+9	; 0x09
    125c:	9a 85       	ldd	r25, Y+10	; 0x0a
    125e:	28 0e       	add	r2, r24
    1260:	39 1e       	adc	r3, r25
    1262:	21 e0       	ldi	r18, 0x01	; 1
    1264:	30 e0       	ldi	r19, 0x00	; 0
    1266:	e9 85       	ldd	r30, Y+9	; 0x09
    1268:	fa 85       	ldd	r31, Y+10	; 0x0a
    126a:	ae 0e       	add	r10, r30
    126c:	bf 1e       	adc	r11, r31
    126e:	de cf       	rjmp	.-68     	; 0x122c <qsort+0x194>
    1270:	b8 01       	movw	r22, r16
    1272:	c3 01       	movw	r24, r6
    1274:	2f 83       	std	Y+7, r18	; 0x07
    1276:	38 87       	std	Y+8, r19	; 0x08
    1278:	f6 01       	movw	r30, r12
    127a:	09 95       	icall
    127c:	a3 01       	movw	r20, r6
    127e:	69 85       	ldd	r22, Y+9	; 0x09
    1280:	7a 85       	ldd	r23, Y+10	; 0x0a
    1282:	46 1b       	sub	r20, r22
    1284:	57 0b       	sbc	r21, r23
    1286:	5c 83       	std	Y+4, r21	; 0x04
    1288:	4b 83       	std	Y+3, r20	; 0x03
    128a:	2f 81       	ldd	r18, Y+7	; 0x07
    128c:	38 85       	ldd	r19, Y+8	; 0x08
    128e:	97 fd       	sbrc	r25, 7
    1290:	14 c0       	rjmp	.+40     	; 0x12ba <qsort+0x222>
    1292:	89 2b       	or	r24, r25
    1294:	61 f4       	brne	.+24     	; 0x12ae <qsort+0x216>
    1296:	49 85       	ldd	r20, Y+9	; 0x09
    1298:	5a 85       	ldd	r21, Y+10	; 0x0a
    129a:	b2 01       	movw	r22, r4
    129c:	c3 01       	movw	r24, r6
    129e:	0e 94 0b 08 	call	0x1016	; 0x1016 <swapfunc>
    12a2:	29 85       	ldd	r18, Y+9	; 0x09
    12a4:	3a 85       	ldd	r19, Y+10	; 0x0a
    12a6:	42 1a       	sub	r4, r18
    12a8:	53 0a       	sbc	r5, r19
    12aa:	21 e0       	ldi	r18, 0x01	; 1
    12ac:	30 e0       	ldi	r19, 0x00	; 0
    12ae:	6b 80       	ldd	r6, Y+3	; 0x03
    12b0:	7c 80       	ldd	r7, Y+4	; 0x04
    12b2:	6a 14       	cp	r6, r10
    12b4:	7b 04       	cpc	r7, r11
    12b6:	e0 f6       	brcc	.-72     	; 0x1270 <qsort+0x1d8>
    12b8:	0f c0       	rjmp	.+30     	; 0x12d8 <qsort+0x240>
    12ba:	49 85       	ldd	r20, Y+9	; 0x09
    12bc:	5a 85       	ldd	r21, Y+10	; 0x0a
    12be:	b3 01       	movw	r22, r6
    12c0:	c5 01       	movw	r24, r10
    12c2:	0e 94 0b 08 	call	0x1016	; 0x1016 <swapfunc>
    12c6:	49 85       	ldd	r20, Y+9	; 0x09
    12c8:	5a 85       	ldd	r21, Y+10	; 0x0a
    12ca:	a4 0e       	add	r10, r20
    12cc:	b5 1e       	adc	r11, r21
    12ce:	6b 80       	ldd	r6, Y+3	; 0x03
    12d0:	7c 80       	ldd	r7, Y+4	; 0x04
    12d2:	21 e0       	ldi	r18, 0x01	; 1
    12d4:	30 e0       	ldi	r19, 0x00	; 0
    12d6:	aa cf       	rjmp	.-172    	; 0x122c <qsort+0x194>
    12d8:	23 2b       	or	r18, r19
    12da:	69 f5       	brne	.+90     	; 0x1336 <qsort+0x29e>
    12dc:	e9 85       	ldd	r30, Y+9	; 0x09
    12de:	fa 85       	ldd	r31, Y+10	; 0x0a
    12e0:	ee 9e       	mul	r14, r30
    12e2:	c0 01       	movw	r24, r0
    12e4:	ef 9e       	mul	r14, r31
    12e6:	90 0d       	add	r25, r0
    12e8:	fe 9e       	mul	r15, r30
    12ea:	90 0d       	add	r25, r0
    12ec:	11 24       	eor	r1, r1
    12ee:	78 01       	movw	r14, r16
    12f0:	e8 0e       	add	r14, r24
    12f2:	f9 1e       	adc	r15, r25
    12f4:	8e 14       	cp	r8, r14
    12f6:	9f 04       	cpc	r9, r15
    12f8:	08 f0       	brcs	.+2      	; 0x12fc <qsort+0x264>
    12fa:	71 c0       	rjmp	.+226    	; 0x13de <qsort+0x346>
    12fc:	34 01       	movw	r6, r8
    12fe:	06 15       	cp	r16, r6
    1300:	17 05       	cpc	r17, r7
    1302:	a0 f4       	brcc	.+40     	; 0x132c <qsort+0x294>
    1304:	53 01       	movw	r10, r6
    1306:	29 85       	ldd	r18, Y+9	; 0x09
    1308:	3a 85       	ldd	r19, Y+10	; 0x0a
    130a:	a2 1a       	sub	r10, r18
    130c:	b3 0a       	sbc	r11, r19
    130e:	b3 01       	movw	r22, r6
    1310:	c5 01       	movw	r24, r10
    1312:	f6 01       	movw	r30, r12
    1314:	09 95       	icall
    1316:	18 16       	cp	r1, r24
    1318:	19 06       	cpc	r1, r25
    131a:	44 f4       	brge	.+16     	; 0x132c <qsort+0x294>
    131c:	49 85       	ldd	r20, Y+9	; 0x09
    131e:	5a 85       	ldd	r21, Y+10	; 0x0a
    1320:	b5 01       	movw	r22, r10
    1322:	c3 01       	movw	r24, r6
    1324:	0e 94 0b 08 	call	0x1016	; 0x1016 <swapfunc>
    1328:	35 01       	movw	r6, r10
    132a:	e9 cf       	rjmp	.-46     	; 0x12fe <qsort+0x266>
    132c:	29 85       	ldd	r18, Y+9	; 0x09
    132e:	3a 85       	ldd	r19, Y+10	; 0x0a
    1330:	82 0e       	add	r8, r18
    1332:	93 1e       	adc	r9, r19
    1334:	df cf       	rjmp	.-66     	; 0x12f4 <qsort+0x25c>
    1336:	89 81       	ldd	r24, Y+1	; 0x01
    1338:	9a 81       	ldd	r25, Y+2	; 0x02
    133a:	4d 81       	ldd	r20, Y+5	; 0x05
    133c:	5e 81       	ldd	r21, Y+6	; 0x06
    133e:	84 1b       	sub	r24, r20
    1340:	95 0b       	sbc	r25, r21
    1342:	b8 01       	movw	r22, r16
    1344:	68 0f       	add	r22, r24
    1346:	79 1f       	adc	r23, r25
    1348:	7a 83       	std	Y+2, r23	; 0x02
    134a:	69 83       	std	Y+1, r22	; 0x01
    134c:	75 01       	movw	r14, r10
    134e:	e2 18       	sub	r14, r2
    1350:	f3 08       	sbc	r15, r3
    1352:	a1 01       	movw	r20, r2
    1354:	40 1b       	sub	r20, r16
    1356:	51 0b       	sbc	r21, r17
    1358:	e4 16       	cp	r14, r20
    135a:	f5 06       	cpc	r15, r21
    135c:	0c f4       	brge	.+2      	; 0x1360 <qsort+0x2c8>
    135e:	a7 01       	movw	r20, r14
    1360:	14 16       	cp	r1, r20
    1362:	15 06       	cpc	r1, r21
    1364:	34 f4       	brge	.+12     	; 0x1372 <qsort+0x2da>
    1366:	b5 01       	movw	r22, r10
    1368:	64 1b       	sub	r22, r20
    136a:	75 0b       	sbc	r23, r21
    136c:	c8 01       	movw	r24, r16
    136e:	0e 94 0b 08 	call	0x1016	; 0x1016 <swapfunc>
    1372:	42 01       	movw	r8, r4
    1374:	86 18       	sub	r8, r6
    1376:	97 08       	sbc	r9, r7
    1378:	49 81       	ldd	r20, Y+1	; 0x01
    137a:	5a 81       	ldd	r21, Y+2	; 0x02
    137c:	44 19       	sub	r20, r4
    137e:	55 09       	sbc	r21, r5
    1380:	89 85       	ldd	r24, Y+9	; 0x09
    1382:	9a 85       	ldd	r25, Y+10	; 0x0a
    1384:	48 1b       	sub	r20, r24
    1386:	59 0b       	sbc	r21, r25
    1388:	84 16       	cp	r8, r20
    138a:	95 06       	cpc	r9, r21
    138c:	08 f4       	brcc	.+2      	; 0x1390 <qsort+0x2f8>
    138e:	a4 01       	movw	r20, r8
    1390:	14 16       	cp	r1, r20
    1392:	15 06       	cpc	r1, r21
    1394:	3c f4       	brge	.+14     	; 0x13a4 <qsort+0x30c>
    1396:	69 81       	ldd	r22, Y+1	; 0x01
    1398:	7a 81       	ldd	r23, Y+2	; 0x02
    139a:	64 1b       	sub	r22, r20
    139c:	75 0b       	sbc	r23, r21
    139e:	c5 01       	movw	r24, r10
    13a0:	0e 94 0b 08 	call	0x1016	; 0x1016 <swapfunc>
    13a4:	e9 85       	ldd	r30, Y+9	; 0x09
    13a6:	fa 85       	ldd	r31, Y+10	; 0x0a
    13a8:	ee 15       	cp	r30, r14
    13aa:	ff 05       	cpc	r31, r15
    13ac:	48 f4       	brcc	.+18     	; 0x13c0 <qsort+0x328>
    13ae:	c7 01       	movw	r24, r14
    13b0:	bf 01       	movw	r22, r30
    13b2:	0e 94 f7 07 	call	0xfee	; 0xfee <__udivmodhi4>
    13b6:	96 01       	movw	r18, r12
    13b8:	af 01       	movw	r20, r30
    13ba:	c8 01       	movw	r24, r16
    13bc:	0e 94 4c 08 	call	0x1098	; 0x1098 <qsort>
    13c0:	29 85       	ldd	r18, Y+9	; 0x09
    13c2:	3a 85       	ldd	r19, Y+10	; 0x0a
    13c4:	28 15       	cp	r18, r8
    13c6:	39 05       	cpc	r19, r9
    13c8:	50 f4       	brcc	.+20     	; 0x13de <qsort+0x346>
    13ca:	09 81       	ldd	r16, Y+1	; 0x01
    13cc:	1a 81       	ldd	r17, Y+2	; 0x02
    13ce:	08 19       	sub	r16, r8
    13d0:	19 09       	sbc	r17, r9
    13d2:	c4 01       	movw	r24, r8
    13d4:	b9 01       	movw	r22, r18
    13d6:	0e 94 f7 07 	call	0xfee	; 0xfee <__udivmodhi4>
    13da:	7b 01       	movw	r14, r22
    13dc:	6d ce       	rjmp	.-806    	; 0x10b8 <qsort+0x20>
    13de:	2a 96       	adiw	r28, 0x0a	; 10
    13e0:	e2 e1       	ldi	r30, 0x12	; 18
    13e2:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__epilogue_restores__>

000013e6 <__itoa_ncheck>:
    13e6:	bb 27       	eor	r27, r27
    13e8:	4a 30       	cpi	r20, 0x0A	; 10
    13ea:	31 f4       	brne	.+12     	; 0x13f8 <__itoa_ncheck+0x12>
    13ec:	99 23       	and	r25, r25
    13ee:	22 f4       	brpl	.+8      	; 0x13f8 <__itoa_ncheck+0x12>
    13f0:	bd e2       	ldi	r27, 0x2D	; 45
    13f2:	90 95       	com	r25
    13f4:	81 95       	neg	r24
    13f6:	9f 4f       	sbci	r25, 0xFF	; 255
    13f8:	0c 94 ff 09 	jmp	0x13fe	; 0x13fe <__utoa_common>

000013fc <__utoa_ncheck>:
    13fc:	bb 27       	eor	r27, r27

000013fe <__utoa_common>:
    13fe:	fb 01       	movw	r30, r22
    1400:	55 27       	eor	r21, r21
    1402:	aa 27       	eor	r26, r26
    1404:	88 0f       	add	r24, r24
    1406:	99 1f       	adc	r25, r25
    1408:	aa 1f       	adc	r26, r26
    140a:	a4 17       	cp	r26, r20
    140c:	10 f0       	brcs	.+4      	; 0x1412 <__utoa_common+0x14>
    140e:	a4 1b       	sub	r26, r20
    1410:	83 95       	inc	r24
    1412:	50 51       	subi	r21, 0x10	; 16
    1414:	b9 f7       	brne	.-18     	; 0x1404 <__utoa_common+0x6>
    1416:	a0 5d       	subi	r26, 0xD0	; 208
    1418:	aa 33       	cpi	r26, 0x3A	; 58
    141a:	08 f0       	brcs	.+2      	; 0x141e <__utoa_common+0x20>
    141c:	a9 5d       	subi	r26, 0xD9	; 217
    141e:	a1 93       	st	Z+, r26
    1420:	00 97       	sbiw	r24, 0x00	; 0
    1422:	79 f7       	brne	.-34     	; 0x1402 <__utoa_common+0x4>
    1424:	b1 11       	cpse	r27, r1
    1426:	b1 93       	st	Z+, r27
    1428:	11 92       	st	Z+, r1
    142a:	cb 01       	movw	r24, r22
    142c:	0c 94 18 0a 	jmp	0x1430	; 0x1430 <strrev>

00001430 <strrev>:
    1430:	dc 01       	movw	r26, r24
    1432:	fc 01       	movw	r30, r24
    1434:	67 2f       	mov	r22, r23
    1436:	71 91       	ld	r23, Z+
    1438:	77 23       	and	r23, r23
    143a:	e1 f7       	brne	.-8      	; 0x1434 <strrev+0x4>
    143c:	32 97       	sbiw	r30, 0x02	; 2
    143e:	04 c0       	rjmp	.+8      	; 0x1448 <strrev+0x18>
    1440:	7c 91       	ld	r23, X
    1442:	6d 93       	st	X+, r22
    1444:	70 83       	st	Z, r23
    1446:	62 91       	ld	r22, -Z
    1448:	ae 17       	cp	r26, r30
    144a:	bf 07       	cpc	r27, r31
    144c:	c8 f3       	brcs	.-14     	; 0x1440 <strrev+0x10>
    144e:	08 95       	ret

00001450 <__prologue_saves__>:
    1450:	2f 92       	push	r2
    1452:	3f 92       	push	r3
    1454:	4f 92       	push	r4
    1456:	5f 92       	push	r5
    1458:	6f 92       	push	r6
    145a:	7f 92       	push	r7
    145c:	8f 92       	push	r8
    145e:	9f 92       	push	r9
    1460:	af 92       	push	r10
    1462:	bf 92       	push	r11
    1464:	cf 92       	push	r12
    1466:	df 92       	push	r13
    1468:	ef 92       	push	r14
    146a:	ff 92       	push	r15
    146c:	0f 93       	push	r16
    146e:	1f 93       	push	r17
    1470:	cf 93       	push	r28
    1472:	df 93       	push	r29
    1474:	cd b7       	in	r28, 0x3d	; 61
    1476:	de b7       	in	r29, 0x3e	; 62
    1478:	ca 1b       	sub	r28, r26
    147a:	db 0b       	sbc	r29, r27
    147c:	0f b6       	in	r0, 0x3f	; 63
    147e:	f8 94       	cli
    1480:	de bf       	out	0x3e, r29	; 62
    1482:	0f be       	out	0x3f, r0	; 63
    1484:	cd bf       	out	0x3d, r28	; 61
    1486:	09 94       	ijmp

00001488 <__epilogue_restores__>:
    1488:	2a 88       	ldd	r2, Y+18	; 0x12
    148a:	39 88       	ldd	r3, Y+17	; 0x11
    148c:	48 88       	ldd	r4, Y+16	; 0x10
    148e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1490:	6e 84       	ldd	r6, Y+14	; 0x0e
    1492:	7d 84       	ldd	r7, Y+13	; 0x0d
    1494:	8c 84       	ldd	r8, Y+12	; 0x0c
    1496:	9b 84       	ldd	r9, Y+11	; 0x0b
    1498:	aa 84       	ldd	r10, Y+10	; 0x0a
    149a:	b9 84       	ldd	r11, Y+9	; 0x09
    149c:	c8 84       	ldd	r12, Y+8	; 0x08
    149e:	df 80       	ldd	r13, Y+7	; 0x07
    14a0:	ee 80       	ldd	r14, Y+6	; 0x06
    14a2:	fd 80       	ldd	r15, Y+5	; 0x05
    14a4:	0c 81       	ldd	r16, Y+4	; 0x04
    14a6:	1b 81       	ldd	r17, Y+3	; 0x03
    14a8:	aa 81       	ldd	r26, Y+2	; 0x02
    14aa:	b9 81       	ldd	r27, Y+1	; 0x01
    14ac:	ce 0f       	add	r28, r30
    14ae:	d1 1d       	adc	r29, r1
    14b0:	0f b6       	in	r0, 0x3f	; 63
    14b2:	f8 94       	cli
    14b4:	de bf       	out	0x3e, r29	; 62
    14b6:	0f be       	out	0x3f, r0	; 63
    14b8:	cd bf       	out	0x3d, r28	; 61
    14ba:	ed 01       	movw	r28, r26
    14bc:	08 95       	ret

000014be <_exit>:
    14be:	f8 94       	cli

000014c0 <__stop_program>:
    14c0:	ff cf       	rjmp	.-2      	; 0x14c0 <__stop_program>
