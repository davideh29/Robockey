
PuckFind.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  000012e4  00001378  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000012e4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000071  0080011a  0080011a  00001392  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001392  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000013c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  00001404  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002ad2  00000000  00000000  000015f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000013cb  00000000  00000000  000040c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001ac6  00000000  00000000  00005491  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005c4  00000000  00000000  00006f58  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000bf9  00000000  00000000  0000751c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002485  00000000  00000000  00008115  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f0  00000000  00000000  0000a59a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 13 01 	jmp	0x226	; 0x226 <__ctors_end>
       4:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
       8:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
       c:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      10:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      14:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      18:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      1c:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      20:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      24:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      28:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__vector_10>
      2c:	0c 94 9c 02 	jmp	0x538	; 0x538 <__vector_11>
      30:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      34:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      38:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      3c:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      40:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      44:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      48:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      4c:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      50:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      54:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      58:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      5c:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      60:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      64:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      68:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      6c:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      70:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      74:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      78:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      7c:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      80:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      84:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      88:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      8c:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      90:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      94:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      98:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      9c:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      a0:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      a4:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
      a8:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>

000000ac <__trampolines_end>:
      ac:	00 01       	movw	r0, r0
      ae:	00 00       	nop
      b0:	43 01       	movw	r8, r6
      b2:	12 00       	.word	0x0012	; ????
      b4:	02 00       	.word	0x0002	; ????
      b6:	00 00       	nop
      b8:	01 43       	sbci	r16, 0x31	; 49
      ba:	00 03       	mulsu	r16, r16
      bc:	00 00       	nop
      be:	fc 00       	.word	0x00fc	; ????
      c0:	04 01       	movw	r0, r8
      c2:	03 09       	sbc	r16, r3
      c4:	04 e8       	ldi	r16, 0x84	; 132
      c6:	00 12       	cpse	r0, r16
      c8:	02 03       	mulsu	r16, r18
      ca:	09 04       	cpc	r0, r9
      cc:	e0 00       	.word	0x00e0	; ????
      ce:	06 03       	mulsu	r16, r22
      d0:	03 09       	sbc	r16, r3
      d2:	04 d6       	rcall	.+3080   	; 0xcdc <initialize_past_directions+0x2>
      d4:	00 08       	sbc	r0, r0

000000d6 <string3>:
      d6:	08 03 34 00 31 00 30 00 00 00                       ..4.1.0...

000000e0 <string2>:
      e0:	06 03 4d 00 32 00 00 00                             ..M.2...

000000e8 <string1>:
      e8:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
      f8:	65 00 00 00                                         e...

000000fc <string0>:
      fc:	04 03 09 04                                         ....

00000100 <config1_descriptor>:
     100:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
     110:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
     120:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
     130:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
     140:	40 00 00                                            @..

00000143 <device_descriptor>:
     143:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
     153:	03 01                                               ..

00000155 <endpoint_config_table>:
     155:	00 01 c1 12 01 80 36 01 81 36                       ......6..6

0000015f <__c.2251>:
     15f:	20 20 20 2d 2d 2d 20 20 20 00                          ---   .

00000169 <__c.2249>:
     169:	46 37 3a 20 00                                      F7: .

0000016e <__c.2247>:
     16e:	20 20 20 2d 2d 2d 20 20 20 00                          ---   .

00000178 <__c.2245>:
     178:	46 36 3a 20 00                                      F6: .

0000017d <__c.2243>:
     17d:	20 20 20 2d 2d 2d 20 20 20 00                          ---   .

00000187 <__c.2241>:
     187:	46 35 3a 20 00                                      F5: .

0000018c <__c.2239>:
     18c:	20 20 20 2d 2d 2d 20 20 20 00                          ---   .

00000196 <__c.2237>:
     196:	46 34 3a 20 00                                      F4: .

0000019b <__c.2235>:
     19b:	20 20 20 2d 2d 2d 20 20 20 00                          ---   .

000001a5 <__c.2233>:
     1a5:	46 31 3a 20 00                                      F1: .

000001aa <__c.2231>:
     1aa:	20 20 20 2d 2d 2d 20 20 20 00                          ---   .

000001b4 <__c.2229>:
     1b4:	46 30 3a 20 00                                      F0: .

000001b9 <__c.2227>:
     1b9:	20 20 20 2d 2d 2d 20 20 20 00                          ---   .

000001c3 <__c.2225>:
     1c3:	44 37 3a 20 00                                      D7: .

000001c8 <__c.2223>:
     1c8:	20 20 20 2d 2d 2d 20 20 20 00                          ---   .

000001d2 <__c.2221>:
     1d2:	44 36 3a 20 00                                      D6: .

000001d7 <__c.2219>:
     1d7:	20 20 20 2d 2d 2d 20 20 20 00                          ---   .

000001e1 <__c.2217>:
     1e1:	44 34 3a 20 00                                      D4: .

000001e6 <__c.2215>:
     1e6:	20 20 20 2d 2d 2d 20 20 20 00                          ---   .

000001f0 <__c.2199>:
     1f0:	42 61 63 6b 2f 54 6f 6f 20 4c 6f 77 00              Back/Too Low.

000001fd <__c.2197>:
     1fd:	46 72 6f 6e 74 00                                   Front.

00000203 <__c.2195>:
     203:	4c 65 66 74 20 46 72 6f 6e 74 00                    Left Front.

0000020e <__c.2193>:
     20e:	52 69 67 68 74 20 46 72 6f 6e 74 00                 Right Front.

0000021a <__c.2190>:
     21a:	4c 65 66 74 00                                      Left.

0000021f <__c.2188>:
     21f:	52 69 67 68 74 00 00                                Right..

00000226 <__ctors_end>:
     226:	11 24       	eor	r1, r1
     228:	1f be       	out	0x3f, r1	; 63
     22a:	cf ef       	ldi	r28, 0xFF	; 255
     22c:	da e0       	ldi	r29, 0x0A	; 10
     22e:	de bf       	out	0x3e, r29	; 62
     230:	cd bf       	out	0x3d, r28	; 61

00000232 <__do_copy_data>:
     232:	11 e0       	ldi	r17, 0x01	; 1
     234:	a0 e0       	ldi	r26, 0x00	; 0
     236:	b1 e0       	ldi	r27, 0x01	; 1
     238:	e4 ee       	ldi	r30, 0xE4	; 228
     23a:	f2 e1       	ldi	r31, 0x12	; 18
     23c:	02 c0       	rjmp	.+4      	; 0x242 <__do_copy_data+0x10>
     23e:	05 90       	lpm	r0, Z+
     240:	0d 92       	st	X+, r0
     242:	aa 31       	cpi	r26, 0x1A	; 26
     244:	b1 07       	cpc	r27, r17
     246:	d9 f7       	brne	.-10     	; 0x23e <__do_copy_data+0xc>

00000248 <__do_clear_bss>:
     248:	21 e0       	ldi	r18, 0x01	; 1
     24a:	aa e1       	ldi	r26, 0x1A	; 26
     24c:	b1 e0       	ldi	r27, 0x01	; 1
     24e:	01 c0       	rjmp	.+2      	; 0x252 <.do_clear_bss_start>

00000250 <.do_clear_bss_loop>:
     250:	1d 92       	st	X+, r1

00000252 <.do_clear_bss_start>:
     252:	ab 38       	cpi	r26, 0x8B	; 139
     254:	b2 07       	cpc	r27, r18
     256:	e1 f7       	brne	.-8      	; 0x250 <.do_clear_bss_loop>
     258:	0e 94 32 01 	call	0x264	; 0x264 <main>
     25c:	0c 94 70 09 	jmp	0x12e0	; 0x12e0 <_exit>

00000260 <__bad_interrupt>:
     260:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000264 <main>:
 * Team DAYS (13)
 */ 

 #include "robockey.h"

int main(void){
     264:	cf 93       	push	r28
     266:	df 93       	push	r29
     268:	cd b7       	in	r28, 0x3d	; 61
     26a:	de b7       	in	r29, 0x3e	; 62
     26c:	62 97       	sbiw	r28, 0x12	; 18
     26e:	0f b6       	in	r0, 0x3f	; 63
     270:	f8 94       	cli
     272:	de bf       	out	0x3e, r29	; 62
     274:	0f be       	out	0x3f, r0	; 63
     276:	cd bf       	out	0x3d, r28	; 61
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     278:	2f eb       	ldi	r18, 0xBF	; 191
     27a:	87 e2       	ldi	r24, 0x27	; 39
     27c:	99 e0       	ldi	r25, 0x09	; 9
     27e:	21 50       	subi	r18, 0x01	; 1
     280:	80 40       	sbci	r24, 0x00	; 0
     282:	90 40       	sbci	r25, 0x00	; 0
     284:	e1 f7       	brne	.-8      	; 0x27e <main+0x1a>
     286:	00 c0       	rjmp	.+0      	; 0x288 <main+0x24>
     288:	00 00       	nop
	m_wait(3000);
	// System prescaler
	m_clockdivide(3);
     28a:	e1 e6       	ldi	r30, 0x61	; 97
     28c:	f0 e0       	ldi	r31, 0x00	; 0
     28e:	80 e8       	ldi	r24, 0x80	; 128
     290:	80 83       	st	Z, r24
     292:	83 e0       	ldi	r24, 0x03	; 3
     294:	80 83       	st	Z, r24
	// Initialize usb
	m_usb_init();
     296:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <m_usb_init>
	// Initialize motor
	motor_init();
     29a:	0e 94 87 01 	call	0x30e	; 0x30e <motor_init>
	int pt_data[NUM_PTS];
	
	// Find puck direction and turn to face it
	int i = 0;
	while (1) {
		read_pts(pt_data); // Get ADC phototransistor pt_datas
     29e:	ce 01       	movw	r24, r28
     2a0:	01 96       	adiw	r24, 0x01	; 1
     2a2:	0e 94 0f 05 	call	0xa1e	; 0xa1e <read_pts>
		if (++i % 40000 == 0) {
     2a6:	01 e0       	ldi	r16, 0x01	; 1
     2a8:	10 e0       	ldi	r17, 0x00	; 0
     2aa:	0f 2e       	mov	r0, r31
     2ac:	f0 e4       	ldi	r31, 0x40	; 64
     2ae:	cf 2e       	mov	r12, r31
     2b0:	fc e9       	ldi	r31, 0x9C	; 156
     2b2:	df 2e       	mov	r13, r31
     2b4:	e1 2c       	mov	r14, r1
     2b6:	f1 2c       	mov	r15, r1
     2b8:	f0 2d       	mov	r31, r0
			i = 0;
     2ba:	a1 2c       	mov	r10, r1
     2bc:	b1 2c       	mov	r11, r1
     2be:	19 c0       	rjmp	.+50     	; 0x2f2 <main+0x8e>
	int pt_data[NUM_PTS];
	
	// Find puck direction and turn to face it
	int i = 0;
	while (1) {
		read_pts(pt_data); // Get ADC phototransistor pt_datas
     2c0:	ce 01       	movw	r24, r28
     2c2:	01 96       	adiw	r24, 0x01	; 1
     2c4:	0e 94 0f 05 	call	0xa1e	; 0xa1e <read_pts>
		if (++i % 40000 == 0) {
     2c8:	0f 5f       	subi	r16, 0xFF	; 255
     2ca:	1f 4f       	sbci	r17, 0xFF	; 255
     2cc:	b8 01       	movw	r22, r16
     2ce:	01 2e       	mov	r0, r17
     2d0:	00 0c       	add	r0, r0
     2d2:	88 0b       	sbc	r24, r24
     2d4:	99 0b       	sbc	r25, r25
     2d6:	a7 01       	movw	r20, r14
     2d8:	96 01       	movw	r18, r12
     2da:	0e 94 c7 06 	call	0xd8e	; 0xd8e <__divmodsi4>
     2de:	67 2b       	or	r22, r23
     2e0:	68 2b       	or	r22, r24
     2e2:	69 2b       	or	r22, r25
     2e4:	31 f4       	brne	.+12     	; 0x2f2 <main+0x8e>
			i = 0;
			printADC(pt_data); // Print ADC values to usb
     2e6:	ce 01       	movw	r24, r28
     2e8:	01 96       	adiw	r24, 0x01	; 1
     2ea:	0e 94 ee 05 	call	0xbdc	; 0xbdc <printADC>
	// Find puck direction and turn to face it
	int i = 0;
	while (1) {
		read_pts(pt_data); // Get ADC phototransistor pt_datas
		if (++i % 40000 == 0) {
			i = 0;
     2ee:	0a 2d       	mov	r16, r10
     2f0:	1b 2d       	mov	r17, r11
			printADC(pt_data); // Print ADC values to usb
		}
		// If facing puck, turn on green lights
		int direction = get_turn(pt_data);
     2f2:	ce 01       	movw	r24, r28
     2f4:	01 96       	adiw	r24, 0x01	; 1
     2f6:	0e 94 61 05 	call	0xac2	; 0xac2 <get_turn>
		int med_direction = median_filter_directions(direction);
     2fa:	0e 94 8d 06 	call	0xd1a	; 0xd1a <median_filter_directions>
		if (med_direction == 0) {
     2fe:	00 97       	sbiw	r24, 0x00	; 0
     300:	19 f4       	brne	.+6      	; 0x308 <main+0xa4>
			motor_stop();
     302:	0e 94 c1 01 	call	0x382	; 0x382 <motor_stop>
     306:	dc cf       	rjmp	.-72     	; 0x2c0 <main+0x5c>
		} else {
			turn_to_puck(med_direction); // Turn to face puck
     308:	0e 94 df 05 	call	0xbbe	; 0xbbe <turn_to_puck>
     30c:	d9 cf       	rjmp	.-78     	; 0x2c0 <main+0x5c>

0000030e <motor_init>:
#define PI 3.14159

// Initialize motor
void motor_init() {
	// Digital output pins
	set(DDRB, 1); // A-IN 1
     30e:	21 9a       	sbi	0x04, 1	; 4
	set(DDRB, 2); // A-IN 2
     310:	22 9a       	sbi	0x04, 2	; 4
	set(DDRB, 3); // B-IN 1
     312:	23 9a       	sbi	0x04, 3	; 4
	set(DDRB, 7); // B-IN 2
     314:	27 9a       	sbi	0x04, 7	; 4

	set(PORTB, 1);
     316:	29 9a       	sbi	0x05, 1	; 5
	clear(PORTB, 2);
     318:	2a 98       	cbi	0x05, 2	; 5
	set(PORTB, 3);
     31a:	2b 9a       	sbi	0x05, 3	; 5
	clear(PORTB, 7);
     31c:	2f 98       	cbi	0x05, 7	; 5

	// Timer 1
	// Prescale timer clock
	clear(TCCR1B, CS12);
     31e:	e1 e8       	ldi	r30, 0x81	; 129
     320:	f0 e0       	ldi	r31, 0x00	; 0
     322:	80 81       	ld	r24, Z
     324:	8b 7f       	andi	r24, 0xFB	; 251
     326:	80 83       	st	Z, r24
	set(TCCR1B, CS11);
     328:	80 81       	ld	r24, Z
     32a:	82 60       	ori	r24, 0x02	; 2
     32c:	80 83       	st	Z, r24
	clear(TCCR1B, CS10);
     32e:	80 81       	ld	r24, Z
     330:	8e 7f       	andi	r24, 0xFE	; 254
     332:	80 83       	st	Z, r24

	// Set timer mode (UP to 0x00FF, PWM mode)
	clear(TCCR1B, WGM13);
     334:	80 81       	ld	r24, Z
     336:	8f 7e       	andi	r24, 0xEF	; 239
     338:	80 83       	st	Z, r24
	set(TCCR1B, WGM12);
     33a:	80 81       	ld	r24, Z
     33c:	88 60       	ori	r24, 0x08	; 8
     33e:	80 83       	st	Z, r24
	clear(TCCR1A, WGM11);
     340:	e0 e8       	ldi	r30, 0x80	; 128
     342:	f0 e0       	ldi	r31, 0x00	; 0
     344:	80 81       	ld	r24, Z
     346:	8d 7f       	andi	r24, 0xFD	; 253
     348:	80 83       	st	Z, r24
	set(TCCR1A, WGM10);
     34a:	80 81       	ld	r24, Z
     34c:	81 60       	ori	r24, 0x01	; 1
     34e:	80 83       	st	Z, r24

	// Set Channel A compare output (Set at OCR1A, clear at rollover)
	set(TCCR1A, COM1A1);
     350:	80 81       	ld	r24, Z
     352:	80 68       	ori	r24, 0x80	; 128
     354:	80 83       	st	Z, r24
	set(TCCR1A, COM1A0);
     356:	80 81       	ld	r24, Z
     358:	80 64       	ori	r24, 0x40	; 64
     35a:	80 83       	st	Z, r24

	// Set Channel B compare output (Set at OCR1B, clear at rollover)
	set(TCCR1A, COM1B1);
     35c:	80 81       	ld	r24, Z
     35e:	80 62       	ori	r24, 0x20	; 32
     360:	80 83       	st	Z, r24
	set(TCCR1A, COM1B0);
     362:	80 81       	ld	r24, Z
     364:	80 61       	ori	r24, 0x10	; 16
     366:	80 83       	st	Z, r24

	// Initialize OCR1A/B
	OCR1A = 0xBF;
     368:	8f eb       	ldi	r24, 0xBF	; 191
     36a:	90 e0       	ldi	r25, 0x00	; 0
     36c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     370:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	OCR1B = 0xBF;
     374:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     378:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>

	// Enable B5/6 output
	set(DDRB, 6);
     37c:	26 9a       	sbi	0x04, 6	; 4
	set(DDRB, 5);
     37e:	25 9a       	sbi	0x04, 5	; 4
     380:	08 95       	ret

00000382 <motor_stop>:
}

// Stop motor
void motor_stop() {
	clear(PORTB, 1);
     382:	29 98       	cbi	0x05, 1	; 5
	clear(PORTB, 2);
     384:	2a 98       	cbi	0x05, 2	; 5
	clear(PORTB, 3);
     386:	2b 98       	cbi	0x05, 3	; 5
	clear(PORTB, 7);
     388:	2f 98       	cbi	0x05, 7	; 5
     38a:	08 95       	ret

0000038c <turn_in_place>:
}

// Turn in place - right if true or left if false
// Speed is an int between 0 and 255
void turn_in_place(bool right, int speed) {
	if (right) {
     38c:	88 23       	and	r24, r24
     38e:	89 f0       	breq	.+34     	; 0x3b2 <turn_in_place+0x26>
		OCR1A = 255 - speed;
     390:	8f ef       	ldi	r24, 0xFF	; 255
     392:	90 e0       	ldi	r25, 0x00	; 0
     394:	86 1b       	sub	r24, r22
     396:	97 0b       	sbc	r25, r23
     398:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     39c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		OCR1B = 255 - speed;
     3a0:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     3a4:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
		set(PORTB, 1);
     3a8:	29 9a       	sbi	0x05, 1	; 5
		clear(PORTB, 2);
     3aa:	2a 98       	cbi	0x05, 2	; 5
		clear(PORTB, 3);
     3ac:	2b 98       	cbi	0x05, 3	; 5
		set(PORTB, 7);
     3ae:	2f 9a       	sbi	0x05, 7	; 5
     3b0:	08 95       	ret
	} else {
		OCR1A = 255 - speed;
     3b2:	8f ef       	ldi	r24, 0xFF	; 255
     3b4:	90 e0       	ldi	r25, 0x00	; 0
     3b6:	86 1b       	sub	r24, r22
     3b8:	97 0b       	sbc	r25, r23
     3ba:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     3be:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		OCR1B = 255 - speed;
     3c2:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     3c6:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
		clear(PORTB, 1);
     3ca:	29 98       	cbi	0x05, 1	; 5
		set(PORTB, 2);
     3cc:	2a 9a       	sbi	0x05, 2	; 5
		set(PORTB, 3);
     3ce:	2b 9a       	sbi	0x05, 3	; 5
		clear(PORTB, 7);
     3d0:	2f 98       	cbi	0x05, 7	; 5
     3d2:	08 95       	ret

000003d4 <m_usb_init>:
	phex(i);
}

void m_usb_tx_hexchar(unsigned char i)
{
	phex(i);
     3d4:	81 e0       	ldi	r24, 0x01	; 1
     3d6:	80 93 d7 00 	sts	0x00D7, r24	; 0x8000d7 <__TEXT_REGION_LENGTH__+0x7e00d7>
     3da:	80 ea       	ldi	r24, 0xA0	; 160
     3dc:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
     3e0:	82 e1       	ldi	r24, 0x12	; 18
     3e2:	89 bd       	out	0x29, r24	; 41
     3e4:	09 b4       	in	r0, 0x29	; 41
     3e6:	00 fe       	sbrs	r0, 0
     3e8:	fd cf       	rjmp	.-6      	; 0x3e4 <m_usb_init+0x10>
     3ea:	80 e9       	ldi	r24, 0x90	; 144
     3ec:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
     3f0:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7e00e0>
     3f4:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <usb_configuration>
     3f8:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <__data_end>
     3fc:	8c e0       	ldi	r24, 0x0C	; 12
     3fe:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
     402:	78 94       	sei
     404:	08 95       	ret

00000406 <m_usb_tx_char>:
     406:	cf 93       	push	r28
     408:	df 93       	push	r29
     40a:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <usb_configuration>
     40e:	99 23       	and	r25, r25
     410:	09 f4       	brne	.+2      	; 0x414 <m_usb_tx_char+0xe>
     412:	4c c0       	rjmp	.+152    	; 0x4ac <m_usb_tx_char+0xa6>
     414:	9f b7       	in	r25, 0x3f	; 63
     416:	f8 94       	cli
     418:	24 e0       	ldi	r18, 0x04	; 4
     41a:	20 93 e9 00 	sts	0x00E9, r18	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     41e:	20 91 1b 01 	lds	r18, 0x011B	; 0x80011b <transmit_previous_timeout>
     422:	22 23       	and	r18, r18
     424:	49 f0       	breq	.+18     	; 0x438 <m_usb_tx_char+0x32>
     426:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     42a:	25 fd       	sbrc	r18, 5
     42c:	03 c0       	rjmp	.+6      	; 0x434 <m_usb_tx_char+0x2e>
     42e:	9f bf       	out	0x3f, r25	; 63
     430:	8f ef       	ldi	r24, 0xFF	; 255
     432:	41 c0       	rjmp	.+130    	; 0x4b6 <m_usb_tx_char+0xb0>
     434:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <transmit_previous_timeout>
     438:	30 91 e4 00 	lds	r19, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
     43c:	37 5e       	subi	r19, 0xE7	; 231
     43e:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     442:	25 fd       	sbrc	r18, 5
     444:	24 c0       	rjmp	.+72     	; 0x48e <m_usb_tx_char+0x88>
     446:	9f bf       	out	0x3f, r25	; 63
     448:	90 91 e4 00 	lds	r25, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
     44c:	93 17       	cp	r25, r19
     44e:	81 f0       	breq	.+32     	; 0x470 <m_usb_tx_char+0x6a>
     450:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <usb_configuration>
     454:	99 23       	and	r25, r25
     456:	61 f1       	breq	.+88     	; 0x4b0 <m_usb_tx_char+0xaa>
     458:	a9 ee       	ldi	r26, 0xE9	; 233
     45a:	b0 e0       	ldi	r27, 0x00	; 0
     45c:	44 e0       	ldi	r20, 0x04	; 4
     45e:	e8 ee       	ldi	r30, 0xE8	; 232
     460:	f0 e0       	ldi	r31, 0x00	; 0
     462:	c4 ee       	ldi	r28, 0xE4	; 228
     464:	d0 e0       	ldi	r29, 0x00	; 0
     466:	0d c0       	rjmp	.+26     	; 0x482 <m_usb_tx_char+0x7c>
     468:	9f bf       	out	0x3f, r25	; 63
     46a:	98 81       	ld	r25, Y
     46c:	93 13       	cpse	r25, r19
     46e:	05 c0       	rjmp	.+10     	; 0x47a <m_usb_tx_char+0x74>
     470:	81 e0       	ldi	r24, 0x01	; 1
     472:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <transmit_previous_timeout>
     476:	8f ef       	ldi	r24, 0xFF	; 255
     478:	1e c0       	rjmp	.+60     	; 0x4b6 <m_usb_tx_char+0xb0>
     47a:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <usb_configuration>
     47e:	99 23       	and	r25, r25
     480:	c9 f0       	breq	.+50     	; 0x4b4 <m_usb_tx_char+0xae>
     482:	9f b7       	in	r25, 0x3f	; 63
     484:	f8 94       	cli
     486:	4c 93       	st	X, r20
     488:	20 81       	ld	r18, Z
     48a:	25 ff       	sbrs	r18, 5
     48c:	ed cf       	rjmp	.-38     	; 0x468 <m_usb_tx_char+0x62>
     48e:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     492:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     496:	85 fd       	sbrc	r24, 5
     498:	03 c0       	rjmp	.+6      	; 0x4a0 <m_usb_tx_char+0x9a>
     49a:	8a e3       	ldi	r24, 0x3A	; 58
     49c:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     4a0:	85 e0       	ldi	r24, 0x05	; 5
     4a2:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <transmit_flush_timer>
     4a6:	9f bf       	out	0x3f, r25	; 63
     4a8:	80 e0       	ldi	r24, 0x00	; 0
     4aa:	05 c0       	rjmp	.+10     	; 0x4b6 <m_usb_tx_char+0xb0>
     4ac:	8f ef       	ldi	r24, 0xFF	; 255
     4ae:	03 c0       	rjmp	.+6      	; 0x4b6 <m_usb_tx_char+0xb0>
     4b0:	8f ef       	ldi	r24, 0xFF	; 255
     4b2:	01 c0       	rjmp	.+2      	; 0x4b6 <m_usb_tx_char+0xb0>
     4b4:	8f ef       	ldi	r24, 0xFF	; 255
     4b6:	df 91       	pop	r29
     4b8:	cf 91       	pop	r28
     4ba:	08 95       	ret

000004bc <__vector_10>:
     4bc:	1f 92       	push	r1
     4be:	0f 92       	push	r0
     4c0:	0f b6       	in	r0, 0x3f	; 63
     4c2:	0f 92       	push	r0
     4c4:	11 24       	eor	r1, r1
     4c6:	8f 93       	push	r24
     4c8:	9f 93       	push	r25
     4ca:	ef 93       	push	r30
     4cc:	ff 93       	push	r31
     4ce:	e1 ee       	ldi	r30, 0xE1	; 225
     4d0:	f0 e0       	ldi	r31, 0x00	; 0
     4d2:	80 81       	ld	r24, Z
     4d4:	10 82       	st	Z, r1
     4d6:	83 ff       	sbrs	r24, 3
     4d8:	11 c0       	rjmp	.+34     	; 0x4fc <__vector_10+0x40>
     4da:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     4de:	91 e0       	ldi	r25, 0x01	; 1
     4e0:	90 93 eb 00 	sts	0x00EB, r25	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     4e4:	10 92 ec 00 	sts	0x00EC, r1	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
     4e8:	92 e1       	ldi	r25, 0x12	; 18
     4ea:	90 93 ed 00 	sts	0x00ED, r25	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     4ee:	98 e0       	ldi	r25, 0x08	; 8
     4f0:	90 93 f0 00 	sts	0x00F0, r25	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
     4f4:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <usb_configuration>
     4f8:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <__data_end>
     4fc:	82 ff       	sbrs	r24, 2
     4fe:	13 c0       	rjmp	.+38     	; 0x526 <__vector_10+0x6a>
     500:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <usb_configuration>
     504:	88 23       	and	r24, r24
     506:	79 f0       	breq	.+30     	; 0x526 <__vector_10+0x6a>
     508:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <transmit_flush_timer>
     50c:	88 23       	and	r24, r24
     50e:	59 f0       	breq	.+22     	; 0x526 <__vector_10+0x6a>
     510:	81 50       	subi	r24, 0x01	; 1
     512:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <transmit_flush_timer>
     516:	81 11       	cpse	r24, r1
     518:	06 c0       	rjmp	.+12     	; 0x526 <__vector_10+0x6a>
     51a:	84 e0       	ldi	r24, 0x04	; 4
     51c:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     520:	8a e3       	ldi	r24, 0x3A	; 58
     522:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     526:	ff 91       	pop	r31
     528:	ef 91       	pop	r30
     52a:	9f 91       	pop	r25
     52c:	8f 91       	pop	r24
     52e:	0f 90       	pop	r0
     530:	0f be       	out	0x3f, r0	; 63
     532:	0f 90       	pop	r0
     534:	1f 90       	pop	r1
     536:	18 95       	reti

00000538 <__vector_11>:
     538:	1f 92       	push	r1
     53a:	0f 92       	push	r0
     53c:	0f b6       	in	r0, 0x3f	; 63
     53e:	0f 92       	push	r0
     540:	11 24       	eor	r1, r1
     542:	0f 93       	push	r16
     544:	1f 93       	push	r17
     546:	2f 93       	push	r18
     548:	3f 93       	push	r19
     54a:	4f 93       	push	r20
     54c:	5f 93       	push	r21
     54e:	6f 93       	push	r22
     550:	7f 93       	push	r23
     552:	8f 93       	push	r24
     554:	9f 93       	push	r25
     556:	af 93       	push	r26
     558:	bf 93       	push	r27
     55a:	cf 93       	push	r28
     55c:	df 93       	push	r29
     55e:	ef 93       	push	r30
     560:	ff 93       	push	r31
     562:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     566:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     56a:	83 ff       	sbrs	r24, 3
     56c:	4c c1       	rjmp	.+664    	; 0x806 <__vector_11+0x2ce>
     56e:	e1 ef       	ldi	r30, 0xF1	; 241
     570:	f0 e0       	ldi	r31, 0x00	; 0
     572:	60 81       	ld	r22, Z
     574:	80 81       	ld	r24, Z
     576:	20 81       	ld	r18, Z
     578:	90 81       	ld	r25, Z
     57a:	30 e0       	ldi	r19, 0x00	; 0
     57c:	39 2b       	or	r19, r25
     57e:	40 81       	ld	r20, Z
     580:	90 81       	ld	r25, Z
     582:	50 e0       	ldi	r21, 0x00	; 0
     584:	59 2b       	or	r21, r25
     586:	70 81       	ld	r23, Z
     588:	c0 81       	ld	r28, Z
     58a:	92 ef       	ldi	r25, 0xF2	; 242
     58c:	90 93 e8 00 	sts	0x00E8, r25	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     590:	86 30       	cpi	r24, 0x06	; 6
     592:	09 f0       	breq	.+2      	; 0x596 <__vector_11+0x5e>
     594:	58 c0       	rjmp	.+176    	; 0x646 <__vector_11+0x10e>
     596:	04 c0       	rjmp	.+8      	; 0x5a0 <__vector_11+0x68>
     598:	81 e2       	ldi	r24, 0x21	; 33
     59a:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     59e:	3a c1       	rjmp	.+628    	; 0x814 <__vector_11+0x2dc>
     5a0:	66 e0       	ldi	r22, 0x06	; 6
     5a2:	8c ea       	ldi	r24, 0xAC	; 172
     5a4:	90 e0       	ldi	r25, 0x00	; 0
     5a6:	fc 01       	movw	r30, r24
     5a8:	a5 91       	lpm	r26, Z+
     5aa:	b4 91       	lpm	r27, Z
     5ac:	2a 17       	cp	r18, r26
     5ae:	3b 07       	cpc	r19, r27
     5b0:	11 f0       	breq	.+4      	; 0x5b6 <__vector_11+0x7e>
     5b2:	07 96       	adiw	r24, 0x07	; 7
     5b4:	23 c0       	rjmp	.+70     	; 0x5fc <__vector_11+0xc4>
     5b6:	fc 01       	movw	r30, r24
     5b8:	32 96       	adiw	r30, 0x02	; 2
     5ba:	a5 91       	lpm	r26, Z+
     5bc:	b4 91       	lpm	r27, Z
     5be:	4a 17       	cp	r20, r26
     5c0:	5b 07       	cpc	r21, r27
     5c2:	11 f0       	breq	.+4      	; 0x5c8 <__vector_11+0x90>
     5c4:	07 96       	adiw	r24, 0x07	; 7
     5c6:	1a c0       	rjmp	.+52     	; 0x5fc <__vector_11+0xc4>
     5c8:	fc 01       	movw	r30, r24
     5ca:	34 96       	adiw	r30, 0x04	; 4
     5cc:	45 91       	lpm	r20, Z+
     5ce:	54 91       	lpm	r21, Z
     5d0:	fc 01       	movw	r30, r24
     5d2:	36 96       	adiw	r30, 0x06	; 6
     5d4:	24 91       	lpm	r18, Z
     5d6:	87 2f       	mov	r24, r23
     5d8:	90 e0       	ldi	r25, 0x00	; 0
     5da:	9c 2b       	or	r25, r28
     5dc:	8f 3f       	cpi	r24, 0xFF	; 255
     5de:	91 05       	cpc	r25, r1
     5e0:	19 f0       	breq	.+6      	; 0x5e8 <__vector_11+0xb0>
     5e2:	10 f0       	brcs	.+4      	; 0x5e8 <__vector_11+0xb0>
     5e4:	8f ef       	ldi	r24, 0xFF	; 255
     5e6:	90 e0       	ldi	r25, 0x00	; 0
     5e8:	82 17       	cp	r24, r18
     5ea:	08 f4       	brcc	.+2      	; 0x5ee <__vector_11+0xb6>
     5ec:	28 2f       	mov	r18, r24
     5ee:	a8 ee       	ldi	r26, 0xE8	; 232
     5f0:	b0 e0       	ldi	r27, 0x00	; 0
     5f2:	70 e1       	ldi	r23, 0x10	; 16
     5f4:	6e ef       	ldi	r22, 0xFE	; 254
     5f6:	c1 ef       	ldi	r28, 0xF1	; 241
     5f8:	d0 e0       	ldi	r29, 0x00	; 0
     5fa:	03 c0       	rjmp	.+6      	; 0x602 <__vector_11+0xca>
     5fc:	61 50       	subi	r22, 0x01	; 1
     5fe:	99 f6       	brne	.-90     	; 0x5a6 <__vector_11+0x6e>
     600:	cb cf       	rjmp	.-106    	; 0x598 <__vector_11+0x60>
     602:	8c 91       	ld	r24, X
     604:	98 2f       	mov	r25, r24
     606:	95 70       	andi	r25, 0x05	; 5
     608:	e1 f3       	breq	.-8      	; 0x602 <__vector_11+0xca>
     60a:	82 fd       	sbrc	r24, 2
     60c:	03 c1       	rjmp	.+518    	; 0x814 <__vector_11+0x2dc>
     60e:	32 2f       	mov	r19, r18
     610:	21 31       	cpi	r18, 0x11	; 17
     612:	08 f0       	brcs	.+2      	; 0x616 <__vector_11+0xde>
     614:	37 2f       	mov	r19, r23
     616:	33 23       	and	r19, r19
     618:	09 f4       	brne	.+2      	; 0x61c <__vector_11+0xe4>
     61a:	f9 c0       	rjmp	.+498    	; 0x80e <__vector_11+0x2d6>
     61c:	fa 01       	movw	r30, r20
     61e:	83 2f       	mov	r24, r19
     620:	94 91       	lpm	r25, Z
     622:	98 83       	st	Y, r25
     624:	81 50       	subi	r24, 0x01	; 1
     626:	31 96       	adiw	r30, 0x01	; 1
     628:	81 11       	cpse	r24, r1
     62a:	fa cf       	rjmp	.-12     	; 0x620 <__vector_11+0xe8>
     62c:	8f ef       	ldi	r24, 0xFF	; 255
     62e:	83 0f       	add	r24, r19
     630:	90 e0       	ldi	r25, 0x00	; 0
     632:	01 96       	adiw	r24, 0x01	; 1
     634:	48 0f       	add	r20, r24
     636:	59 1f       	adc	r21, r25
     638:	23 1b       	sub	r18, r19
     63a:	6c 93       	st	X, r22
     63c:	21 11       	cpse	r18, r1
     63e:	e1 cf       	rjmp	.-62     	; 0x602 <__vector_11+0xca>
     640:	30 31       	cpi	r19, 0x10	; 16
     642:	f9 f2       	breq	.-66     	; 0x602 <__vector_11+0xca>
     644:	e7 c0       	rjmp	.+462    	; 0x814 <__vector_11+0x2dc>
     646:	85 30       	cpi	r24, 0x05	; 5
     648:	61 f4       	brne	.+24     	; 0x662 <__vector_11+0x12a>
     64a:	8e ef       	ldi	r24, 0xFE	; 254
     64c:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     650:	e8 ee       	ldi	r30, 0xE8	; 232
     652:	f0 e0       	ldi	r31, 0x00	; 0
     654:	80 81       	ld	r24, Z
     656:	80 ff       	sbrs	r24, 0
     658:	fd cf       	rjmp	.-6      	; 0x654 <__vector_11+0x11c>
     65a:	20 68       	ori	r18, 0x80	; 128
     65c:	20 93 e3 00 	sts	0x00E3, r18	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
     660:	d9 c0       	rjmp	.+434    	; 0x814 <__vector_11+0x2dc>
     662:	89 30       	cpi	r24, 0x09	; 9
     664:	09 f0       	breq	.+2      	; 0x668 <__vector_11+0x130>
     666:	35 c0       	rjmp	.+106    	; 0x6d2 <__vector_11+0x19a>
     668:	61 11       	cpse	r22, r1
     66a:	cd c0       	rjmp	.+410    	; 0x806 <__vector_11+0x2ce>
     66c:	20 93 1d 01 	sts	0x011D, r18	; 0x80011d <usb_configuration>
     670:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <__data_end>
     674:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <transmit_flush_timer>
     678:	8e ef       	ldi	r24, 0xFE	; 254
     67a:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     67e:	81 e0       	ldi	r24, 0x01	; 1
     680:	25 e5       	ldi	r18, 0x55	; 85
     682:	31 e0       	ldi	r19, 0x01	; 1
     684:	c9 ee       	ldi	r28, 0xE9	; 233
     686:	d0 e0       	ldi	r29, 0x00	; 0
     688:	ab ee       	ldi	r26, 0xEB	; 235
     68a:	b0 e0       	ldi	r27, 0x00	; 0
     68c:	0c ee       	ldi	r16, 0xEC	; 236
     68e:	10 e0       	ldi	r17, 0x00	; 0
     690:	6d ee       	ldi	r22, 0xED	; 237
     692:	70 e0       	ldi	r23, 0x00	; 0
     694:	88 83       	st	Y, r24
     696:	a9 01       	movw	r20, r18
     698:	4f 5f       	subi	r20, 0xFF	; 255
     69a:	5f 4f       	sbci	r21, 0xFF	; 255
     69c:	f9 01       	movw	r30, r18
     69e:	94 91       	lpm	r25, Z
     6a0:	9c 93       	st	X, r25
     6a2:	99 23       	and	r25, r25
     6a4:	61 f0       	breq	.+24     	; 0x6be <__vector_11+0x186>
     6a6:	fa 01       	movw	r30, r20
     6a8:	44 91       	lpm	r20, Z
     6aa:	f8 01       	movw	r30, r16
     6ac:	40 83       	st	Z, r20
     6ae:	f9 01       	movw	r30, r18
     6b0:	32 96       	adiw	r30, 0x02	; 2
     6b2:	94 91       	lpm	r25, Z
     6b4:	2d 5f       	subi	r18, 0xFD	; 253
     6b6:	3f 4f       	sbci	r19, 0xFF	; 255
     6b8:	fb 01       	movw	r30, r22
     6ba:	90 83       	st	Z, r25
     6bc:	01 c0       	rjmp	.+2      	; 0x6c0 <__vector_11+0x188>
     6be:	9a 01       	movw	r18, r20
     6c0:	8f 5f       	subi	r24, 0xFF	; 255
     6c2:	85 30       	cpi	r24, 0x05	; 5
     6c4:	39 f7       	brne	.-50     	; 0x694 <__vector_11+0x15c>
     6c6:	ea ee       	ldi	r30, 0xEA	; 234
     6c8:	f0 e0       	ldi	r31, 0x00	; 0
     6ca:	8e e1       	ldi	r24, 0x1E	; 30
     6cc:	80 83       	st	Z, r24
     6ce:	10 82       	st	Z, r1
     6d0:	a1 c0       	rjmp	.+322    	; 0x814 <__vector_11+0x2dc>
     6d2:	88 30       	cpi	r24, 0x08	; 8
     6d4:	81 f4       	brne	.+32     	; 0x6f6 <__vector_11+0x1be>
     6d6:	60 38       	cpi	r22, 0x80	; 128
     6d8:	09 f0       	breq	.+2      	; 0x6dc <__vector_11+0x1a4>
     6da:	95 c0       	rjmp	.+298    	; 0x806 <__vector_11+0x2ce>
     6dc:	e8 ee       	ldi	r30, 0xE8	; 232
     6de:	f0 e0       	ldi	r31, 0x00	; 0
     6e0:	80 81       	ld	r24, Z
     6e2:	80 ff       	sbrs	r24, 0
     6e4:	fd cf       	rjmp	.-6      	; 0x6e0 <__vector_11+0x1a8>
     6e6:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <usb_configuration>
     6ea:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
     6ee:	8e ef       	ldi	r24, 0xFE	; 254
     6f0:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     6f4:	8f c0       	rjmp	.+286    	; 0x814 <__vector_11+0x2dc>
     6f6:	81 32       	cpi	r24, 0x21	; 33
     6f8:	b9 f4       	brne	.+46     	; 0x728 <__vector_11+0x1f0>
     6fa:	61 3a       	cpi	r22, 0xA1	; 161
     6fc:	09 f0       	breq	.+2      	; 0x700 <__vector_11+0x1c8>
     6fe:	83 c0       	rjmp	.+262    	; 0x806 <__vector_11+0x2ce>
     700:	e8 ee       	ldi	r30, 0xE8	; 232
     702:	f0 e0       	ldi	r31, 0x00	; 0
     704:	80 81       	ld	r24, Z
     706:	80 ff       	sbrs	r24, 0
     708:	fd cf       	rjmp	.-6      	; 0x704 <__vector_11+0x1cc>
     70a:	e0 e0       	ldi	r30, 0x00	; 0
     70c:	f1 e0       	ldi	r31, 0x01	; 1
     70e:	27 e0       	ldi	r18, 0x07	; 7
     710:	31 e0       	ldi	r19, 0x01	; 1
     712:	a1 ef       	ldi	r26, 0xF1	; 241
     714:	b0 e0       	ldi	r27, 0x00	; 0
     716:	81 91       	ld	r24, Z+
     718:	8c 93       	st	X, r24
     71a:	e2 17       	cp	r30, r18
     71c:	f3 07       	cpc	r31, r19
     71e:	d9 f7       	brne	.-10     	; 0x716 <__vector_11+0x1de>
     720:	8e ef       	ldi	r24, 0xFE	; 254
     722:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     726:	76 c0       	rjmp	.+236    	; 0x814 <__vector_11+0x2dc>
     728:	80 32       	cpi	r24, 0x20	; 32
     72a:	d1 f4       	brne	.+52     	; 0x760 <__vector_11+0x228>
     72c:	61 32       	cpi	r22, 0x21	; 33
     72e:	09 f0       	breq	.+2      	; 0x732 <__vector_11+0x1fa>
     730:	6a c0       	rjmp	.+212    	; 0x806 <__vector_11+0x2ce>
     732:	e8 ee       	ldi	r30, 0xE8	; 232
     734:	f0 e0       	ldi	r31, 0x00	; 0
     736:	80 81       	ld	r24, Z
     738:	82 ff       	sbrs	r24, 2
     73a:	fd cf       	rjmp	.-6      	; 0x736 <__vector_11+0x1fe>
     73c:	e0 e0       	ldi	r30, 0x00	; 0
     73e:	f1 e0       	ldi	r31, 0x01	; 1
     740:	27 e0       	ldi	r18, 0x07	; 7
     742:	31 e0       	ldi	r19, 0x01	; 1
     744:	a1 ef       	ldi	r26, 0xF1	; 241
     746:	b0 e0       	ldi	r27, 0x00	; 0
     748:	8c 91       	ld	r24, X
     74a:	81 93       	st	Z+, r24
     74c:	e2 17       	cp	r30, r18
     74e:	f3 07       	cpc	r31, r19
     750:	d9 f7       	brne	.-10     	; 0x748 <__vector_11+0x210>
     752:	e8 ee       	ldi	r30, 0xE8	; 232
     754:	f0 e0       	ldi	r31, 0x00	; 0
     756:	8b ef       	ldi	r24, 0xFB	; 251
     758:	80 83       	st	Z, r24
     75a:	8e ef       	ldi	r24, 0xFE	; 254
     75c:	80 83       	st	Z, r24
     75e:	5a c0       	rjmp	.+180    	; 0x814 <__vector_11+0x2dc>
     760:	82 32       	cpi	r24, 0x22	; 34
     762:	71 f4       	brne	.+28     	; 0x780 <__vector_11+0x248>
     764:	61 32       	cpi	r22, 0x21	; 33
     766:	09 f0       	breq	.+2      	; 0x76a <__vector_11+0x232>
     768:	4e c0       	rjmp	.+156    	; 0x806 <__vector_11+0x2ce>
     76a:	20 93 1a 01 	sts	0x011A, r18	; 0x80011a <__data_end>
     76e:	e8 ee       	ldi	r30, 0xE8	; 232
     770:	f0 e0       	ldi	r31, 0x00	; 0
     772:	80 81       	ld	r24, Z
     774:	80 ff       	sbrs	r24, 0
     776:	fd cf       	rjmp	.-6      	; 0x772 <__vector_11+0x23a>
     778:	8e ef       	ldi	r24, 0xFE	; 254
     77a:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     77e:	4a c0       	rjmp	.+148    	; 0x814 <__vector_11+0x2dc>
     780:	81 11       	cpse	r24, r1
     782:	1a c0       	rjmp	.+52     	; 0x7b8 <__vector_11+0x280>
     784:	e8 ee       	ldi	r30, 0xE8	; 232
     786:	f0 e0       	ldi	r31, 0x00	; 0
     788:	80 81       	ld	r24, Z
     78a:	80 ff       	sbrs	r24, 0
     78c:	fd cf       	rjmp	.-6      	; 0x788 <__vector_11+0x250>
     78e:	62 38       	cpi	r22, 0x82	; 130
     790:	51 f4       	brne	.+20     	; 0x7a6 <__vector_11+0x26e>
     792:	e9 ee       	ldi	r30, 0xE9	; 233
     794:	f0 e0       	ldi	r31, 0x00	; 0
     796:	40 83       	st	Z, r20
     798:	80 91 eb 00 	lds	r24, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     79c:	85 fb       	bst	r24, 5
     79e:	88 27       	eor	r24, r24
     7a0:	80 f9       	bld	r24, 0
     7a2:	10 82       	st	Z, r1
     7a4:	01 c0       	rjmp	.+2      	; 0x7a8 <__vector_11+0x270>
     7a6:	80 e0       	ldi	r24, 0x00	; 0
     7a8:	e1 ef       	ldi	r30, 0xF1	; 241
     7aa:	f0 e0       	ldi	r31, 0x00	; 0
     7ac:	80 83       	st	Z, r24
     7ae:	10 82       	st	Z, r1
     7b0:	8e ef       	ldi	r24, 0xFE	; 254
     7b2:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     7b6:	2e c0       	rjmp	.+92     	; 0x814 <__vector_11+0x2dc>
     7b8:	98 2f       	mov	r25, r24
     7ba:	9d 7f       	andi	r25, 0xFD	; 253
     7bc:	91 30       	cpi	r25, 0x01	; 1
     7be:	19 f5       	brne	.+70     	; 0x806 <__vector_11+0x2ce>
     7c0:	62 30       	cpi	r22, 0x02	; 2
     7c2:	09 f5       	brne	.+66     	; 0x806 <__vector_11+0x2ce>
     7c4:	23 2b       	or	r18, r19
     7c6:	f9 f4       	brne	.+62     	; 0x806 <__vector_11+0x2ce>
     7c8:	4f 77       	andi	r20, 0x7F	; 127
     7ca:	9f ef       	ldi	r25, 0xFF	; 255
     7cc:	94 0f       	add	r25, r20
     7ce:	94 30       	cpi	r25, 0x04	; 4
     7d0:	d0 f4       	brcc	.+52     	; 0x806 <__vector_11+0x2ce>
     7d2:	9e ef       	ldi	r25, 0xFE	; 254
     7d4:	90 93 e8 00 	sts	0x00E8, r25	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
     7d8:	40 93 e9 00 	sts	0x00E9, r20	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
     7dc:	83 30       	cpi	r24, 0x03	; 3
     7de:	21 f4       	brne	.+8      	; 0x7e8 <__vector_11+0x2b0>
     7e0:	81 e2       	ldi	r24, 0x21	; 33
     7e2:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     7e6:	16 c0       	rjmp	.+44     	; 0x814 <__vector_11+0x2dc>
     7e8:	89 e1       	ldi	r24, 0x19	; 25
     7ea:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     7ee:	81 e0       	ldi	r24, 0x01	; 1
     7f0:	90 e0       	ldi	r25, 0x00	; 0
     7f2:	02 c0       	rjmp	.+4      	; 0x7f8 <__vector_11+0x2c0>
     7f4:	88 0f       	add	r24, r24
     7f6:	99 1f       	adc	r25, r25
     7f8:	4a 95       	dec	r20
     7fa:	e2 f7       	brpl	.-8      	; 0x7f4 <__vector_11+0x2bc>
     7fc:	ea ee       	ldi	r30, 0xEA	; 234
     7fe:	f0 e0       	ldi	r31, 0x00	; 0
     800:	80 83       	st	Z, r24
     802:	10 82       	st	Z, r1
     804:	07 c0       	rjmp	.+14     	; 0x814 <__vector_11+0x2dc>
     806:	81 e2       	ldi	r24, 0x21	; 33
     808:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
     80c:	03 c0       	rjmp	.+6      	; 0x814 <__vector_11+0x2dc>
     80e:	6c 93       	st	X, r22
     810:	21 11       	cpse	r18, r1
     812:	f7 ce       	rjmp	.-530    	; 0x602 <__vector_11+0xca>
     814:	ff 91       	pop	r31
     816:	ef 91       	pop	r30
     818:	df 91       	pop	r29
     81a:	cf 91       	pop	r28
     81c:	bf 91       	pop	r27
     81e:	af 91       	pop	r26
     820:	9f 91       	pop	r25
     822:	8f 91       	pop	r24
     824:	7f 91       	pop	r23
     826:	6f 91       	pop	r22
     828:	5f 91       	pop	r21
     82a:	4f 91       	pop	r20
     82c:	3f 91       	pop	r19
     82e:	2f 91       	pop	r18
     830:	1f 91       	pop	r17
     832:	0f 91       	pop	r16
     834:	0f 90       	pop	r0
     836:	0f be       	out	0x3f, r0	; 63
     838:	0f 90       	pop	r0
     83a:	1f 90       	pop	r1
     83c:	18 95       	reti

0000083e <print_P>:
     83e:	0f 93       	push	r16
     840:	1f 93       	push	r17
     842:	cf 93       	push	r28
     844:	8c 01       	movw	r16, r24
     846:	0f 5f       	subi	r16, 0xFF	; 255
     848:	1f 4f       	sbci	r17, 0xFF	; 255
     84a:	fc 01       	movw	r30, r24
     84c:	c4 91       	lpm	r28, Z
     84e:	cc 23       	and	r28, r28
     850:	71 f0       	breq	.+28     	; 0x86e <print_P+0x30>
     852:	ca 30       	cpi	r28, 0x0A	; 10
     854:	19 f4       	brne	.+6      	; 0x85c <print_P+0x1e>
     856:	8d e0       	ldi	r24, 0x0D	; 13
     858:	0e 94 03 02 	call	0x406	; 0x406 <m_usb_tx_char>
     85c:	8c 2f       	mov	r24, r28
     85e:	0e 94 03 02 	call	0x406	; 0x406 <m_usb_tx_char>
     862:	f8 01       	movw	r30, r16
     864:	c4 91       	lpm	r28, Z
     866:	0f 5f       	subi	r16, 0xFF	; 255
     868:	1f 4f       	sbci	r17, 0xFF	; 255
     86a:	c1 11       	cpse	r28, r1
     86c:	f2 cf       	rjmp	.-28     	; 0x852 <print_P+0x14>
     86e:	cf 91       	pop	r28
     870:	1f 91       	pop	r17
     872:	0f 91       	pop	r16
     874:	08 95       	ret

00000876 <m_usb_tx_int>:
}

void m_usb_tx_int(int i)
{
     876:	ef 92       	push	r14
     878:	ff 92       	push	r15
     87a:	0f 93       	push	r16
     87c:	1f 93       	push	r17
     87e:	cf 93       	push	r28
     880:	df 93       	push	r29
     882:	cd b7       	in	r28, 0x3d	; 61
     884:	de b7       	in	r29, 0x3e	; 62
     886:	27 97       	sbiw	r28, 0x07	; 7
     888:	0f b6       	in	r0, 0x3f	; 63
     88a:	f8 94       	cli
     88c:	de bf       	out	0x3e, r29	; 62
     88e:	0f be       	out	0x3f, r0	; 63
     890:	cd bf       	out	0x3d, r28	; 61
	char string[7] = {0,0,0,0,0,0,0};
     892:	8e 01       	movw	r16, r28
     894:	0f 5f       	subi	r16, 0xFF	; 255
     896:	1f 4f       	sbci	r17, 0xFF	; 255
     898:	27 e0       	ldi	r18, 0x07	; 7
     89a:	f8 01       	movw	r30, r16
     89c:	11 92       	st	Z+, r1
     89e:	2a 95       	dec	r18
     8a0:	e9 f7       	brne	.-6      	; 0x89c <m_usb_tx_int+0x26>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     8a2:	4a e0       	ldi	r20, 0x0A	; 10
     8a4:	b8 01       	movw	r22, r16
     8a6:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <__itoa_ncheck>
     8aa:	7e 01       	movw	r14, r28
     8ac:	f8 e0       	ldi	r31, 0x08	; 8
     8ae:	ef 0e       	add	r14, r31
     8b0:	f1 1c       	adc	r15, r1
	itoa(i,string,10);
	for(i=0;i<7;i++){
        if(string[i]){
     8b2:	f8 01       	movw	r30, r16
     8b4:	81 91       	ld	r24, Z+
     8b6:	8f 01       	movw	r16, r30
     8b8:	81 11       	cpse	r24, r1
            m_usb_tx_char(string[i]);
     8ba:	0e 94 03 02 	call	0x406	; 0x406 <m_usb_tx_char>

void m_usb_tx_int(int i)
{
	char string[7] = {0,0,0,0,0,0,0};
	itoa(i,string,10);
	for(i=0;i<7;i++){
     8be:	0e 15       	cp	r16, r14
     8c0:	1f 05       	cpc	r17, r15
     8c2:	b9 f7       	brne	.-18     	; 0x8b2 <m_usb_tx_int+0x3c>
        if(string[i]){
            m_usb_tx_char(string[i]);
        }
	}
}
     8c4:	27 96       	adiw	r28, 0x07	; 7
     8c6:	0f b6       	in	r0, 0x3f	; 63
     8c8:	f8 94       	cli
     8ca:	de bf       	out	0x3e, r29	; 62
     8cc:	0f be       	out	0x3f, r0	; 63
     8ce:	cd bf       	out	0x3d, r28	; 61
     8d0:	df 91       	pop	r29
     8d2:	cf 91       	pop	r28
     8d4:	1f 91       	pop	r17
     8d6:	0f 91       	pop	r16
     8d8:	ff 90       	pop	r15
     8da:	ef 90       	pop	r14
     8dc:	08 95       	ret

000008de <ADC_init>:
		return true;
	}
	
	// otherwise, it is not
	return false;
}
     8de:	ec e7       	ldi	r30, 0x7C	; 124
     8e0:	f0 e0       	ldi	r31, 0x00	; 0
     8e2:	80 81       	ld	r24, Z
     8e4:	8f 77       	andi	r24, 0x7F	; 127
     8e6:	80 83       	st	Z, r24
     8e8:	80 81       	ld	r24, Z
     8ea:	80 64       	ori	r24, 0x40	; 64
     8ec:	80 83       	st	Z, r24
     8ee:	aa e7       	ldi	r26, 0x7A	; 122
     8f0:	b0 e0       	ldi	r27, 0x00	; 0
     8f2:	8c 91       	ld	r24, X
     8f4:	84 60       	ori	r24, 0x04	; 4
     8f6:	8c 93       	st	X, r24
     8f8:	8c 91       	ld	r24, X
     8fa:	8d 7f       	andi	r24, 0xFD	; 253
     8fc:	8c 93       	st	X, r24
     8fe:	8c 91       	ld	r24, X
     900:	81 60       	ori	r24, 0x01	; 1
     902:	8c 93       	st	X, r24
     904:	ee e7       	ldi	r30, 0x7E	; 126
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	80 81       	ld	r24, Z
     90a:	81 60       	ori	r24, 0x01	; 1
     90c:	80 83       	st	Z, r24
     90e:	80 81       	ld	r24, Z
     910:	82 60       	ori	r24, 0x02	; 2
     912:	80 83       	st	Z, r24
     914:	80 81       	ld	r24, Z
     916:	80 61       	ori	r24, 0x10	; 16
     918:	80 83       	st	Z, r24
     91a:	80 81       	ld	r24, Z
     91c:	80 62       	ori	r24, 0x20	; 32
     91e:	80 83       	st	Z, r24
     920:	80 81       	ld	r24, Z
     922:	80 64       	ori	r24, 0x40	; 64
     924:	80 83       	st	Z, r24
     926:	80 81       	ld	r24, Z
     928:	80 68       	ori	r24, 0x80	; 128
     92a:	80 83       	st	Z, r24
     92c:	ed e7       	ldi	r30, 0x7D	; 125
     92e:	f0 e0       	ldi	r31, 0x00	; 0
     930:	80 81       	ld	r24, Z
     932:	81 60       	ori	r24, 0x01	; 1
     934:	80 83       	st	Z, r24
     936:	80 81       	ld	r24, Z
     938:	82 60       	ori	r24, 0x02	; 2
     93a:	80 83       	st	Z, r24
     93c:	80 81       	ld	r24, Z
     93e:	84 60       	ori	r24, 0x04	; 4
     940:	80 83       	st	Z, r24
     942:	8c 91       	ld	r24, X
     944:	80 62       	ori	r24, 0x20	; 32
     946:	8c 93       	st	X, r24
     948:	08 95       	ret

0000094a <setMUX>:
     94a:	82 30       	cpi	r24, 0x02	; 2
     94c:	91 05       	cpc	r25, r1
     94e:	b0 f0       	brcs	.+44     	; 0x97c <setMUX+0x32>
     950:	84 30       	cpi	r24, 0x04	; 4
     952:	91 05       	cpc	r25, r1
     954:	d9 f0       	breq	.+54     	; 0x98c <setMUX+0x42>
     956:	85 30       	cpi	r24, 0x05	; 5
     958:	91 05       	cpc	r25, r1
     95a:	91 f0       	breq	.+36     	; 0x980 <setMUX+0x36>
     95c:	86 30       	cpi	r24, 0x06	; 6
     95e:	91 05       	cpc	r25, r1
     960:	a9 f0       	breq	.+42     	; 0x98c <setMUX+0x42>
     962:	87 30       	cpi	r24, 0x07	; 7
     964:	91 05       	cpc	r25, r1
     966:	61 f0       	breq	.+24     	; 0x980 <setMUX+0x36>
     968:	88 30       	cpi	r24, 0x08	; 8
     96a:	91 05       	cpc	r25, r1
     96c:	79 f0       	breq	.+30     	; 0x98c <setMUX+0x42>
     96e:	89 30       	cpi	r24, 0x09	; 9
     970:	91 05       	cpc	r25, r1
     972:	31 f0       	breq	.+12     	; 0x980 <setMUX+0x36>
     974:	8a 30       	cpi	r24, 0x0A	; 10
     976:	91 05       	cpc	r25, r1
     978:	b1 f5       	brne	.+108    	; 0x9e6 <setMUX+0x9c>
     97a:	08 c0       	rjmp	.+16     	; 0x98c <setMUX+0x42>
     97c:	80 ff       	sbrs	r24, 0
     97e:	06 c0       	rjmp	.+12     	; 0x98c <setMUX+0x42>
     980:	ec e7       	ldi	r30, 0x7C	; 124
     982:	f0 e0       	ldi	r31, 0x00	; 0
     984:	20 81       	ld	r18, Z
     986:	21 60       	ori	r18, 0x01	; 1
     988:	20 83       	st	Z, r18
     98a:	05 c0       	rjmp	.+10     	; 0x996 <setMUX+0x4c>
     98c:	ec e7       	ldi	r30, 0x7C	; 124
     98e:	f0 e0       	ldi	r31, 0x00	; 0
     990:	20 81       	ld	r18, Z
     992:	2e 7f       	andi	r18, 0xFE	; 254
     994:	20 83       	st	Z, r18
     996:	81 ff       	sbrs	r24, 1
     998:	06 c0       	rjmp	.+12     	; 0x9a6 <setMUX+0x5c>
     99a:	ec e7       	ldi	r30, 0x7C	; 124
     99c:	f0 e0       	ldi	r31, 0x00	; 0
     99e:	20 81       	ld	r18, Z
     9a0:	22 60       	ori	r18, 0x02	; 2
     9a2:	20 83       	st	Z, r18
     9a4:	05 c0       	rjmp	.+10     	; 0x9b0 <setMUX+0x66>
     9a6:	ec e7       	ldi	r30, 0x7C	; 124
     9a8:	f0 e0       	ldi	r31, 0x00	; 0
     9aa:	20 81       	ld	r18, Z
     9ac:	2d 7f       	andi	r18, 0xFD	; 253
     9ae:	20 83       	st	Z, r18
     9b0:	82 ff       	sbrs	r24, 2
     9b2:	06 c0       	rjmp	.+12     	; 0x9c0 <setMUX+0x76>
     9b4:	ec e7       	ldi	r30, 0x7C	; 124
     9b6:	f0 e0       	ldi	r31, 0x00	; 0
     9b8:	20 81       	ld	r18, Z
     9ba:	24 60       	ori	r18, 0x04	; 4
     9bc:	20 83       	st	Z, r18
     9be:	05 c0       	rjmp	.+10     	; 0x9ca <setMUX+0x80>
     9c0:	ec e7       	ldi	r30, 0x7C	; 124
     9c2:	f0 e0       	ldi	r31, 0x00	; 0
     9c4:	20 81       	ld	r18, Z
     9c6:	2b 7f       	andi	r18, 0xFB	; 251
     9c8:	20 83       	st	Z, r18
     9ca:	83 ff       	sbrs	r24, 3
     9cc:	06 c0       	rjmp	.+12     	; 0x9da <setMUX+0x90>
     9ce:	eb e7       	ldi	r30, 0x7B	; 123
     9d0:	f0 e0       	ldi	r31, 0x00	; 0
     9d2:	80 81       	ld	r24, Z
     9d4:	80 62       	ori	r24, 0x20	; 32
     9d6:	80 83       	st	Z, r24
     9d8:	08 95       	ret
     9da:	eb e7       	ldi	r30, 0x7B	; 123
     9dc:	f0 e0       	ldi	r31, 0x00	; 0
     9de:	80 81       	ld	r24, Z
     9e0:	8f 7d       	andi	r24, 0xDF	; 223
     9e2:	80 83       	st	Z, r24
     9e4:	08 95       	ret
     9e6:	6a 9a       	sbi	0x0d, 2	; 13
     9e8:	72 98       	cbi	0x0e, 2	; 14
     9ea:	08 95       	ret

000009ec <readADC>:
     9ec:	ea e7       	ldi	r30, 0x7A	; 122
     9ee:	f0 e0       	ldi	r31, 0x00	; 0
     9f0:	80 81       	ld	r24, Z
     9f2:	80 68       	ori	r24, 0x80	; 128
     9f4:	80 83       	st	Z, r24
     9f6:	80 81       	ld	r24, Z
     9f8:	80 64       	ori	r24, 0x40	; 64
     9fa:	80 83       	st	Z, r24
     9fc:	80 81       	ld	r24, Z
     9fe:	84 ff       	sbrs	r24, 4
     a00:	fd cf       	rjmp	.-6      	; 0x9fc <readADC+0x10>
     a02:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     a06:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     a0a:	ea e7       	ldi	r30, 0x7A	; 122
     a0c:	f0 e0       	ldi	r31, 0x00	; 0
     a0e:	90 81       	ld	r25, Z
     a10:	9f 7e       	andi	r25, 0xEF	; 239
     a12:	90 83       	st	Z, r25
     a14:	90 81       	ld	r25, Z
     a16:	9f 77       	andi	r25, 0x7F	; 127
     a18:	90 83       	st	Z, r25
     a1a:	c9 01       	movw	r24, r18
     a1c:	08 95       	ret

00000a1e <read_pts>:
     a1e:	cf 92       	push	r12
     a20:	df 92       	push	r13
     a22:	ef 92       	push	r14
     a24:	ff 92       	push	r15
     a26:	0f 93       	push	r16
     a28:	1f 93       	push	r17
     a2a:	cf 93       	push	r28
     a2c:	df 93       	push	r29
     a2e:	cd b7       	in	r28, 0x3d	; 61
     a30:	de b7       	in	r29, 0x3e	; 62
     a32:	62 97       	sbiw	r28, 0x12	; 18
     a34:	0f b6       	in	r0, 0x3f	; 63
     a36:	f8 94       	cli
     a38:	de bf       	out	0x3e, r29	; 62
     a3a:	0f be       	out	0x3f, r0	; 63
     a3c:	cd bf       	out	0x3d, r28	; 61
     a3e:	6c 01       	movw	r12, r24
     a40:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <jtag_enabled>
     a44:	88 23       	and	r24, r24
     a46:	29 f0       	breq	.+10     	; 0xa52 <read_pts+0x34>
     a48:	80 e8       	ldi	r24, 0x80	; 128
     a4a:	85 bf       	out	0x35, r24	; 53
     a4c:	85 bf       	out	0x35, r24	; 53
     a4e:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <jtag_enabled>
     a52:	89 e0       	ldi	r24, 0x09	; 9
     a54:	90 e0       	ldi	r25, 0x00	; 0
     a56:	0e 94 6f 04 	call	0x8de	; 0x8de <ADC_init>
     a5a:	82 e1       	ldi	r24, 0x12	; 18
     a5c:	e8 e0       	ldi	r30, 0x08	; 8
     a5e:	f1 e0       	ldi	r31, 0x01	; 1
     a60:	de 01       	movw	r26, r28
     a62:	11 96       	adiw	r26, 0x01	; 1
     a64:	01 90       	ld	r0, Z+
     a66:	0d 92       	st	X+, r0
     a68:	8a 95       	dec	r24
     a6a:	e1 f7       	brne	.-8      	; 0xa64 <read_pts+0x46>
     a6c:	ce 01       	movw	r24, r28
     a6e:	01 96       	adiw	r24, 0x01	; 1
     a70:	7c 01       	movw	r14, r24
     a72:	86 01       	movw	r16, r12
     a74:	92 e1       	ldi	r25, 0x12	; 18
     a76:	c9 0e       	add	r12, r25
     a78:	d1 1c       	adc	r13, r1
     a7a:	f7 01       	movw	r30, r14
     a7c:	81 91       	ld	r24, Z+
     a7e:	91 91       	ld	r25, Z+
     a80:	7f 01       	movw	r14, r30
     a82:	0e 94 a5 04 	call	0x94a	; 0x94a <setMUX>
     a86:	0e 94 f6 04 	call	0x9ec	; 0x9ec <readADC>
     a8a:	f8 01       	movw	r30, r16
     a8c:	81 93       	st	Z+, r24
     a8e:	91 93       	st	Z+, r25
     a90:	8f 01       	movw	r16, r30
     a92:	83 ef       	ldi	r24, 0xF3	; 243
     a94:	91 e0       	ldi	r25, 0x01	; 1
     a96:	01 97       	sbiw	r24, 0x01	; 1
     a98:	f1 f7       	brne	.-4      	; 0xa96 <read_pts+0x78>
     a9a:	00 c0       	rjmp	.+0      	; 0xa9c <read_pts+0x7e>
     a9c:	00 00       	nop
     a9e:	ec 15       	cp	r30, r12
     aa0:	fd 05       	cpc	r31, r13
     aa2:	59 f7       	brne	.-42     	; 0xa7a <read_pts+0x5c>
     aa4:	62 96       	adiw	r28, 0x12	; 18
     aa6:	0f b6       	in	r0, 0x3f	; 63
     aa8:	f8 94       	cli
     aaa:	de bf       	out	0x3e, r29	; 62
     aac:	0f be       	out	0x3f, r0	; 63
     aae:	cd bf       	out	0x3d, r28	; 61
     ab0:	df 91       	pop	r29
     ab2:	cf 91       	pop	r28
     ab4:	1f 91       	pop	r17
     ab6:	0f 91       	pop	r16
     ab8:	ff 90       	pop	r15
     aba:	ef 90       	pop	r14
     abc:	df 90       	pop	r13
     abe:	cf 90       	pop	r12
     ac0:	08 95       	ret

00000ac2 <get_turn>:
     ac2:	cf 93       	push	r28
     ac4:	df 93       	push	r29
     ac6:	fc 01       	movw	r30, r24
     ac8:	a0 81       	ld	r26, Z
     aca:	b1 81       	ldd	r27, Z+1	; 0x01
     acc:	62 81       	ldd	r22, Z+2	; 0x02
     ace:	73 81       	ldd	r23, Z+3	; 0x03
     ad0:	c4 81       	ldd	r28, Z+4	; 0x04
     ad2:	d5 81       	ldd	r29, Z+5	; 0x05
     ad4:	26 81       	ldd	r18, Z+6	; 0x06
     ad6:	37 81       	ldd	r19, Z+7	; 0x07
     ad8:	80 85       	ldd	r24, Z+8	; 0x08
     ada:	91 85       	ldd	r25, Z+9	; 0x09
     adc:	28 0f       	add	r18, r24
     ade:	39 1f       	adc	r19, r25
     ae0:	42 85       	ldd	r20, Z+10	; 0x0a
     ae2:	53 85       	ldd	r21, Z+11	; 0x0b
     ae4:	24 0f       	add	r18, r20
     ae6:	35 1f       	adc	r19, r21
     ae8:	84 85       	ldd	r24, Z+12	; 0x0c
     aea:	95 85       	ldd	r25, Z+13	; 0x0d
     aec:	28 1b       	sub	r18, r24
     aee:	39 0b       	sbc	r19, r25
     af0:	86 85       	ldd	r24, Z+14	; 0x0e
     af2:	97 85       	ldd	r25, Z+15	; 0x0f
     af4:	28 1b       	sub	r18, r24
     af6:	39 0b       	sbc	r19, r25
     af8:	80 89       	ldd	r24, Z+16	; 0x10
     afa:	91 89       	ldd	r25, Z+17	; 0x11
     afc:	a9 01       	movw	r20, r18
     afe:	48 1b       	sub	r20, r24
     b00:	59 0b       	sbc	r21, r25
     b02:	ca 01       	movw	r24, r20
     b04:	9a 01       	movw	r18, r20
     b06:	99 23       	and	r25, r25
     b08:	24 f4       	brge	.+8      	; 0xb12 <__stack+0x13>
     b0a:	22 27       	eor	r18, r18
     b0c:	33 27       	eor	r19, r19
     b0e:	24 1b       	sub	r18, r20
     b10:	35 0b       	sbc	r19, r21
     b12:	2f 31       	cpi	r18, 0x1F	; 31
     b14:	31 05       	cpc	r19, r1
     b16:	b4 f0       	brlt	.+44     	; 0xb44 <__stack+0x45>
     b18:	99 23       	and	r25, r25
     b1a:	54 f4       	brge	.+20     	; 0xb30 <__stack+0x31>
     b1c:	8f e1       	ldi	r24, 0x1F	; 31
     b1e:	92 e0       	ldi	r25, 0x02	; 2
     b20:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
     b24:	8d e0       	ldi	r24, 0x0D	; 13
     b26:	0e 94 03 02 	call	0x406	; 0x406 <m_usb_tx_char>
     b2a:	8a e6       	ldi	r24, 0x6A	; 106
     b2c:	9f ef       	ldi	r25, 0xFF	; 255
     b2e:	44 c0       	rjmp	.+136    	; 0xbb8 <__stack+0xb9>
     b30:	8a e1       	ldi	r24, 0x1A	; 26
     b32:	92 e0       	ldi	r25, 0x02	; 2
     b34:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
     b38:	8d e0       	ldi	r24, 0x0D	; 13
     b3a:	0e 94 03 02 	call	0x406	; 0x406 <m_usb_tx_char>
     b3e:	86 e9       	ldi	r24, 0x96	; 150
     b40:	90 e0       	ldi	r25, 0x00	; 0
     b42:	3a c0       	rjmp	.+116    	; 0xbb8 <__stack+0xb9>
     b44:	6a 0f       	add	r22, r26
     b46:	7b 1f       	adc	r23, r27
     b48:	6c 0f       	add	r22, r28
     b4a:	7d 1f       	adc	r23, r29
     b4c:	6b 35       	cpi	r22, 0x5B	; 91
     b4e:	71 05       	cpc	r23, r1
     b50:	54 f1       	brlt	.+84     	; 0xba6 <__stack+0xa7>
     b52:	ac 1b       	sub	r26, r28
     b54:	bd 0b       	sbc	r27, r29
     b56:	cd 01       	movw	r24, r26
     b58:	22 f4       	brpl	.+8      	; 0xb62 <__stack+0x63>
     b5a:	88 27       	eor	r24, r24
     b5c:	99 27       	eor	r25, r25
     b5e:	8a 1b       	sub	r24, r26
     b60:	9b 0b       	sbc	r25, r27
     b62:	c3 97       	sbiw	r24, 0x33	; 51
     b64:	b4 f0       	brlt	.+44     	; 0xb92 <__stack+0x93>
     b66:	bb 23       	and	r27, r27
     b68:	54 f4       	brge	.+20     	; 0xb7e <__stack+0x7f>
     b6a:	8e e0       	ldi	r24, 0x0E	; 14
     b6c:	92 e0       	ldi	r25, 0x02	; 2
     b6e:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
     b72:	8d e0       	ldi	r24, 0x0D	; 13
     b74:	0e 94 03 02 	call	0x406	; 0x406 <m_usb_tx_char>
     b78:	88 ed       	ldi	r24, 0xD8	; 216
     b7a:	9f ef       	ldi	r25, 0xFF	; 255
     b7c:	1d c0       	rjmp	.+58     	; 0xbb8 <__stack+0xb9>
     b7e:	83 e0       	ldi	r24, 0x03	; 3
     b80:	92 e0       	ldi	r25, 0x02	; 2
     b82:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
     b86:	8d e0       	ldi	r24, 0x0D	; 13
     b88:	0e 94 03 02 	call	0x406	; 0x406 <m_usb_tx_char>
     b8c:	88 e2       	ldi	r24, 0x28	; 40
     b8e:	90 e0       	ldi	r25, 0x00	; 0
     b90:	13 c0       	rjmp	.+38     	; 0xbb8 <__stack+0xb9>
     b92:	8d ef       	ldi	r24, 0xFD	; 253
     b94:	91 e0       	ldi	r25, 0x01	; 1
     b96:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
     b9a:	8d e0       	ldi	r24, 0x0D	; 13
     b9c:	0e 94 03 02 	call	0x406	; 0x406 <m_usb_tx_char>
     ba0:	80 e0       	ldi	r24, 0x00	; 0
     ba2:	90 e0       	ldi	r25, 0x00	; 0
     ba4:	09 c0       	rjmp	.+18     	; 0xbb8 <__stack+0xb9>
     ba6:	80 ef       	ldi	r24, 0xF0	; 240
     ba8:	91 e0       	ldi	r25, 0x01	; 1
     baa:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
     bae:	8d e0       	ldi	r24, 0x0D	; 13
     bb0:	0e 94 03 02 	call	0x406	; 0x406 <m_usb_tx_char>
     bb4:	86 e9       	ldi	r24, 0x96	; 150
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	df 91       	pop	r29
     bba:	cf 91       	pop	r28
     bbc:	08 95       	ret

00000bbe <turn_to_puck>:
	none
*/


void turn_to_puck(int direction) {
	if (direction < 0) {
     bbe:	99 23       	and	r25, r25
     bc0:	2c f4       	brge	.+10     	; 0xbcc <turn_to_puck+0xe>
		turn_in_place(false, direction);
     bc2:	bc 01       	movw	r22, r24
     bc4:	80 e0       	ldi	r24, 0x00	; 0
     bc6:	0e 94 c6 01 	call	0x38c	; 0x38c <turn_in_place>
     bca:	08 95       	ret
	} else if (direction > 0) {
     bcc:	18 16       	cp	r1, r24
     bce:	19 06       	cpc	r1, r25
     bd0:	24 f4       	brge	.+8      	; 0xbda <turn_to_puck+0x1c>
		turn_in_place(true, direction);
     bd2:	bc 01       	movw	r22, r24
     bd4:	81 e0       	ldi	r24, 0x01	; 1
     bd6:	0e 94 c6 01 	call	0x38c	; 0x38c <turn_in_place>
     bda:	08 95       	ret

00000bdc <printADC>:

OUTPUTS:
	none
*/

void printADC(int pt_data[]) {
     bdc:	cf 93       	push	r28
     bde:	df 93       	push	r29
     be0:	ec 01       	movw	r28, r24

	m_usb_tx_string("   ---   ");
     be2:	86 ee       	ldi	r24, 0xE6	; 230
     be4:	91 e0       	ldi	r25, 0x01	; 1
     be6:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
	m_usb_tx_string("D4: ");
     bea:	81 ee       	ldi	r24, 0xE1	; 225
     bec:	91 e0       	ldi	r25, 0x01	; 1
     bee:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
	m_usb_tx_int(pt_data[0]);
     bf2:	88 81       	ld	r24, Y
     bf4:	99 81       	ldd	r25, Y+1	; 0x01
     bf6:	0e 94 3b 04 	call	0x876	; 0x876 <m_usb_tx_int>
	if(NUM_PTS > 1){
		m_usb_tx_string("   ---   ");
     bfa:	87 ed       	ldi	r24, 0xD7	; 215
     bfc:	91 e0       	ldi	r25, 0x01	; 1
     bfe:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
		m_usb_tx_string("D6: ");
     c02:	82 ed       	ldi	r24, 0xD2	; 210
     c04:	91 e0       	ldi	r25, 0x01	; 1
     c06:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
		m_usb_tx_int(pt_data[1]);
     c0a:	8a 81       	ldd	r24, Y+2	; 0x02
     c0c:	9b 81       	ldd	r25, Y+3	; 0x03
     c0e:	0e 94 3b 04 	call	0x876	; 0x876 <m_usb_tx_int>
	} if(NUM_PTS > 2) {
		m_usb_tx_string("   ---   ");
     c12:	88 ec       	ldi	r24, 0xC8	; 200
     c14:	91 e0       	ldi	r25, 0x01	; 1
     c16:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
		m_usb_tx_string("D7: ");
     c1a:	83 ec       	ldi	r24, 0xC3	; 195
     c1c:	91 e0       	ldi	r25, 0x01	; 1
     c1e:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
		m_usb_tx_int(pt_data[2]);
     c22:	8c 81       	ldd	r24, Y+4	; 0x04
     c24:	9d 81       	ldd	r25, Y+5	; 0x05
     c26:	0e 94 3b 04 	call	0x876	; 0x876 <m_usb_tx_int>
	} if(NUM_PTS > 3){
		m_usb_tx_string("   ---   ");
     c2a:	89 eb       	ldi	r24, 0xB9	; 185
     c2c:	91 e0       	ldi	r25, 0x01	; 1
     c2e:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
		m_usb_tx_string("F0: ");
     c32:	84 eb       	ldi	r24, 0xB4	; 180
     c34:	91 e0       	ldi	r25, 0x01	; 1
     c36:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
		m_usb_tx_int(pt_data[3]);
     c3a:	8e 81       	ldd	r24, Y+6	; 0x06
     c3c:	9f 81       	ldd	r25, Y+7	; 0x07
     c3e:	0e 94 3b 04 	call	0x876	; 0x876 <m_usb_tx_int>
	} if(NUM_PTS > 4) {
		m_usb_tx_string("   ---   ");
     c42:	8a ea       	ldi	r24, 0xAA	; 170
     c44:	91 e0       	ldi	r25, 0x01	; 1
     c46:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
		m_usb_tx_string("F1: ");
     c4a:	85 ea       	ldi	r24, 0xA5	; 165
     c4c:	91 e0       	ldi	r25, 0x01	; 1
     c4e:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
		m_usb_tx_int(pt_data[4]);
     c52:	88 85       	ldd	r24, Y+8	; 0x08
     c54:	99 85       	ldd	r25, Y+9	; 0x09
     c56:	0e 94 3b 04 	call	0x876	; 0x876 <m_usb_tx_int>
	} if(NUM_PTS > 5){
		m_usb_tx_string("   ---   ");
     c5a:	8b e9       	ldi	r24, 0x9B	; 155
     c5c:	91 e0       	ldi	r25, 0x01	; 1
     c5e:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
		m_usb_tx_string("F4: ");
     c62:	86 e9       	ldi	r24, 0x96	; 150
     c64:	91 e0       	ldi	r25, 0x01	; 1
     c66:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
		m_usb_tx_int(pt_data[5]);
     c6a:	8a 85       	ldd	r24, Y+10	; 0x0a
     c6c:	9b 85       	ldd	r25, Y+11	; 0x0b
     c6e:	0e 94 3b 04 	call	0x876	; 0x876 <m_usb_tx_int>
	} if(NUM_PTS > 6) {
		m_usb_tx_string("   ---   ");
     c72:	8c e8       	ldi	r24, 0x8C	; 140
     c74:	91 e0       	ldi	r25, 0x01	; 1
     c76:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
		m_usb_tx_string("F5: ");
     c7a:	87 e8       	ldi	r24, 0x87	; 135
     c7c:	91 e0       	ldi	r25, 0x01	; 1
     c7e:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
		m_usb_tx_int(pt_data[6]);
     c82:	8c 85       	ldd	r24, Y+12	; 0x0c
     c84:	9d 85       	ldd	r25, Y+13	; 0x0d
     c86:	0e 94 3b 04 	call	0x876	; 0x876 <m_usb_tx_int>
	} if(NUM_PTS > 7) {
		m_usb_tx_string("   ---   ");
     c8a:	8d e7       	ldi	r24, 0x7D	; 125
     c8c:	91 e0       	ldi	r25, 0x01	; 1
     c8e:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
		m_usb_tx_string("F6: ");
     c92:	88 e7       	ldi	r24, 0x78	; 120
     c94:	91 e0       	ldi	r25, 0x01	; 1
     c96:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
		m_usb_tx_int(pt_data[7]);
     c9a:	8e 85       	ldd	r24, Y+14	; 0x0e
     c9c:	9f 85       	ldd	r25, Y+15	; 0x0f
     c9e:	0e 94 3b 04 	call	0x876	; 0x876 <m_usb_tx_int>
	} if(NUM_PTS > 8) {
		m_usb_tx_string("   ---   ");
     ca2:	8e e6       	ldi	r24, 0x6E	; 110
     ca4:	91 e0       	ldi	r25, 0x01	; 1
     ca6:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
		m_usb_tx_string("F7: ");
     caa:	89 e6       	ldi	r24, 0x69	; 105
     cac:	91 e0       	ldi	r25, 0x01	; 1
     cae:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
		m_usb_tx_int(pt_data[8]);
     cb2:	88 89       	ldd	r24, Y+16	; 0x10
     cb4:	99 89       	ldd	r25, Y+17	; 0x11
     cb6:	0e 94 3b 04 	call	0x876	; 0x876 <m_usb_tx_int>
	}
	m_usb_tx_string("   ---   ");
     cba:	8f e5       	ldi	r24, 0x5F	; 95
     cbc:	91 e0       	ldi	r25, 0x01	; 1
     cbe:	0e 94 1f 04 	call	0x83e	; 0x83e <print_P>
	//m_usb_tx_char(13);
}
     cc2:	df 91       	pop	r29
     cc4:	cf 91       	pop	r28
     cc6:	08 95       	ret

00000cc8 <compare_function_int>:
	
	// edit new_data to have median measurements
	new_data->x = x_med;
	new_data->y = y_med;
	new_data->o = o_med;
}
     cc8:	fc 01       	movw	r30, r24
     cca:	80 81       	ld	r24, Z
     ccc:	91 81       	ldd	r25, Z+1	; 0x01
     cce:	fb 01       	movw	r30, r22
     cd0:	20 81       	ld	r18, Z
     cd2:	31 81       	ldd	r19, Z+1	; 0x01
     cd4:	82 1b       	sub	r24, r18
     cd6:	93 0b       	sbc	r25, r19
     cd8:	08 95       	ret

00000cda <initialize_past_directions>:
     cda:	e1 e8       	ldi	r30, 0x81	; 129
     cdc:	f1 e0       	ldi	r31, 0x01	; 1
     cde:	11 82       	std	Z+1, r1	; 0x01
     ce0:	10 82       	st	Z, r1
     ce2:	13 82       	std	Z+3, r1	; 0x03
     ce4:	12 82       	std	Z+2, r1	; 0x02
     ce6:	15 82       	std	Z+5, r1	; 0x05
     ce8:	14 82       	std	Z+4, r1	; 0x04
     cea:	17 82       	std	Z+7, r1	; 0x07
     cec:	16 82       	std	Z+6, r1	; 0x06
     cee:	11 86       	std	Z+9, r1	; 0x09
     cf0:	10 86       	std	Z+8, r1	; 0x08
     cf2:	81 e0       	ldi	r24, 0x01	; 1
     cf4:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <past_directions_initialized>
     cf8:	08 95       	ret

00000cfa <update_past_directions>:
     cfa:	eb e8       	ldi	r30, 0x8B	; 139
     cfc:	f1 e0       	ldi	r31, 0x01	; 1
     cfe:	41 e8       	ldi	r20, 0x81	; 129
     d00:	51 e0       	ldi	r21, 0x01	; 1
     d02:	32 91       	ld	r19, -Z
     d04:	22 91       	ld	r18, -Z
     d06:	33 83       	std	Z+3, r19	; 0x03
     d08:	22 83       	std	Z+2, r18	; 0x02
     d0a:	e4 17       	cp	r30, r20
     d0c:	f5 07       	cpc	r31, r21
     d0e:	c9 f7       	brne	.-14     	; 0xd02 <update_past_directions+0x8>
     d10:	90 93 82 01 	sts	0x0182, r25	; 0x800182 <past_directions+0x1>
     d14:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <past_directions>
     d18:	08 95       	ret

00000d1a <median_filter_directions>:

// takes in new direction data, updates past_directions array, and updates "new direction"
// to median filtered new directions
int median_filter_directions(int direction){
     d1a:	0f 93       	push	r16
     d1c:	1f 93       	push	r17
     d1e:	cf 93       	push	r28
     d20:	df 93       	push	r29
     d22:	cd b7       	in	r28, 0x3d	; 61
     d24:	de b7       	in	r29, 0x3e	; 62
     d26:	2a 97       	sbiw	r28, 0x0a	; 10
     d28:	0f b6       	in	r0, 0x3f	; 63
     d2a:	f8 94       	cli
     d2c:	de bf       	out	0x3e, r29	; 62
     d2e:	0f be       	out	0x3f, r0	; 63
     d30:	cd bf       	out	0x3d, r28	; 61
     d32:	8c 01       	movw	r16, r24
	// if past_directions was not initialized, initialize it
	if(!past_directions_initialized){
     d34:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <past_directions_initialized>
     d38:	81 11       	cpse	r24, r1
     d3a:	02 c0       	rjmp	.+4      	; 0xd40 <median_filter_directions+0x26>
		initialize_past_directions();
     d3c:	0e 94 6d 06 	call	0xcda	; 0xcda <initialize_past_directions>
	}
	
	// update past_data array
	update_past_directions(direction);
     d40:	c8 01       	movw	r24, r16
     d42:	0e 94 7d 06 	call	0xcfa	; 0xcfa <update_past_directions>
     d46:	e1 e8       	ldi	r30, 0x81	; 129
     d48:	f1 e0       	ldi	r31, 0x01	; 1
     d4a:	de 01       	movw	r26, r28
     d4c:	11 96       	adiw	r26, 0x01	; 1
     d4e:	2b e8       	ldi	r18, 0x8B	; 139
     d50:	31 e0       	ldi	r19, 0x01	; 1
	
	int temp[NUM_SAVED_DIRECTIONS];
	
	for (int i = 0; i < NUM_SAVED_DIRECTIONS; i++) {
		temp[i] = past_directions[i];
     d52:	81 91       	ld	r24, Z+
     d54:	91 91       	ld	r25, Z+
     d56:	8d 93       	st	X+, r24
     d58:	9d 93       	st	X+, r25
	// update past_data array
	update_past_directions(direction);
	
	int temp[NUM_SAVED_DIRECTIONS];
	
	for (int i = 0; i < NUM_SAVED_DIRECTIONS; i++) {
     d5a:	e2 17       	cp	r30, r18
     d5c:	f3 07       	cpc	r31, r19
     d5e:	c9 f7       	brne	.-14     	; 0xd52 <median_filter_directions+0x38>
		temp[i] = past_directions[i];
	}

	// sort each list
	qsort(temp, NUM_SAVED_DIRECTIONS, sizeof(int), compare_function_int);
     d60:	24 e6       	ldi	r18, 0x64	; 100
     d62:	36 e0       	ldi	r19, 0x06	; 6
     d64:	42 e0       	ldi	r20, 0x02	; 2
     d66:	50 e0       	ldi	r21, 0x00	; 0
     d68:	65 e0       	ldi	r22, 0x05	; 5
     d6a:	70 e0       	ldi	r23, 0x00	; 0
     d6c:	ce 01       	movw	r24, r28
     d6e:	01 96       	adiw	r24, 0x01	; 1
     d70:	0e 94 49 07 	call	0xe92	; 0xe92 <qsort>
	int med_index = NUM_SAVED_DIRECTIONS/2;
	int direction_med = temp[med_index];
	
	// return median direction
	return direction_med;
     d74:	8d 81       	ldd	r24, Y+5	; 0x05
     d76:	9e 81       	ldd	r25, Y+6	; 0x06
     d78:	2a 96       	adiw	r28, 0x0a	; 10
     d7a:	0f b6       	in	r0, 0x3f	; 63
     d7c:	f8 94       	cli
     d7e:	de bf       	out	0x3e, r29	; 62
     d80:	0f be       	out	0x3f, r0	; 63
     d82:	cd bf       	out	0x3d, r28	; 61
     d84:	df 91       	pop	r29
     d86:	cf 91       	pop	r28
     d88:	1f 91       	pop	r17
     d8a:	0f 91       	pop	r16
     d8c:	08 95       	ret

00000d8e <__divmodsi4>:
     d8e:	05 2e       	mov	r0, r21
     d90:	97 fb       	bst	r25, 7
     d92:	1e f4       	brtc	.+6      	; 0xd9a <__divmodsi4+0xc>
     d94:	00 94       	com	r0
     d96:	0e 94 de 06 	call	0xdbc	; 0xdbc <__negsi2>
     d9a:	57 fd       	sbrc	r21, 7
     d9c:	07 d0       	rcall	.+14     	; 0xdac <__divmodsi4_neg2>
     d9e:	0e 94 e6 06 	call	0xdcc	; 0xdcc <__udivmodsi4>
     da2:	07 fc       	sbrc	r0, 7
     da4:	03 d0       	rcall	.+6      	; 0xdac <__divmodsi4_neg2>
     da6:	4e f4       	brtc	.+18     	; 0xdba <__divmodsi4_exit>
     da8:	0c 94 de 06 	jmp	0xdbc	; 0xdbc <__negsi2>

00000dac <__divmodsi4_neg2>:
     dac:	50 95       	com	r21
     dae:	40 95       	com	r20
     db0:	30 95       	com	r19
     db2:	21 95       	neg	r18
     db4:	3f 4f       	sbci	r19, 0xFF	; 255
     db6:	4f 4f       	sbci	r20, 0xFF	; 255
     db8:	5f 4f       	sbci	r21, 0xFF	; 255

00000dba <__divmodsi4_exit>:
     dba:	08 95       	ret

00000dbc <__negsi2>:
     dbc:	90 95       	com	r25
     dbe:	80 95       	com	r24
     dc0:	70 95       	com	r23
     dc2:	61 95       	neg	r22
     dc4:	7f 4f       	sbci	r23, 0xFF	; 255
     dc6:	8f 4f       	sbci	r24, 0xFF	; 255
     dc8:	9f 4f       	sbci	r25, 0xFF	; 255
     dca:	08 95       	ret

00000dcc <__udivmodsi4>:
     dcc:	a1 e2       	ldi	r26, 0x21	; 33
     dce:	1a 2e       	mov	r1, r26
     dd0:	aa 1b       	sub	r26, r26
     dd2:	bb 1b       	sub	r27, r27
     dd4:	fd 01       	movw	r30, r26
     dd6:	0d c0       	rjmp	.+26     	; 0xdf2 <__udivmodsi4_ep>

00000dd8 <__udivmodsi4_loop>:
     dd8:	aa 1f       	adc	r26, r26
     dda:	bb 1f       	adc	r27, r27
     ddc:	ee 1f       	adc	r30, r30
     dde:	ff 1f       	adc	r31, r31
     de0:	a2 17       	cp	r26, r18
     de2:	b3 07       	cpc	r27, r19
     de4:	e4 07       	cpc	r30, r20
     de6:	f5 07       	cpc	r31, r21
     de8:	20 f0       	brcs	.+8      	; 0xdf2 <__udivmodsi4_ep>
     dea:	a2 1b       	sub	r26, r18
     dec:	b3 0b       	sbc	r27, r19
     dee:	e4 0b       	sbc	r30, r20
     df0:	f5 0b       	sbc	r31, r21

00000df2 <__udivmodsi4_ep>:
     df2:	66 1f       	adc	r22, r22
     df4:	77 1f       	adc	r23, r23
     df6:	88 1f       	adc	r24, r24
     df8:	99 1f       	adc	r25, r25
     dfa:	1a 94       	dec	r1
     dfc:	69 f7       	brne	.-38     	; 0xdd8 <__udivmodsi4_loop>
     dfe:	60 95       	com	r22
     e00:	70 95       	com	r23
     e02:	80 95       	com	r24
     e04:	90 95       	com	r25
     e06:	9b 01       	movw	r18, r22
     e08:	ac 01       	movw	r20, r24
     e0a:	bd 01       	movw	r22, r26
     e0c:	cf 01       	movw	r24, r30
     e0e:	08 95       	ret

00000e10 <swapfunc>:
     e10:	dc 01       	movw	r26, r24
     e12:	fb 01       	movw	r30, r22
     e14:	8c 91       	ld	r24, X
     e16:	90 81       	ld	r25, Z
     e18:	9d 93       	st	X+, r25
     e1a:	81 93       	st	Z+, r24
     e1c:	41 50       	subi	r20, 0x01	; 1
     e1e:	51 09       	sbc	r21, r1
     e20:	14 16       	cp	r1, r20
     e22:	15 06       	cpc	r1, r21
     e24:	bc f3       	brlt	.-18     	; 0xe14 <swapfunc+0x4>
     e26:	08 95       	ret

00000e28 <med3>:
     e28:	a0 e0       	ldi	r26, 0x00	; 0
     e2a:	b0 e0       	ldi	r27, 0x00	; 0
     e2c:	ea e1       	ldi	r30, 0x1A	; 26
     e2e:	f7 e0       	ldi	r31, 0x07	; 7
     e30:	0c 94 43 09 	jmp	0x1286	; 0x1286 <__prologue_saves__+0x14>
     e34:	d8 2f       	mov	r29, r24
     e36:	c9 2f       	mov	r28, r25
     e38:	6b 01       	movw	r12, r22
     e3a:	8a 01       	movw	r16, r20
     e3c:	79 01       	movw	r14, r18
     e3e:	f9 01       	movw	r30, r18
     e40:	09 95       	icall
     e42:	b8 01       	movw	r22, r16
     e44:	97 ff       	sbrs	r25, 7
     e46:	0f c0       	rjmp	.+30     	; 0xe66 <med3+0x3e>
     e48:	c6 01       	movw	r24, r12
     e4a:	f7 01       	movw	r30, r14
     e4c:	09 95       	icall
     e4e:	97 ff       	sbrs	r25, 7
     e50:	02 c0       	rjmp	.+4      	; 0xe56 <med3+0x2e>
     e52:	c6 01       	movw	r24, r12
     e54:	19 c0       	rjmp	.+50     	; 0xe88 <med3+0x60>
     e56:	b8 01       	movw	r22, r16
     e58:	8d 2f       	mov	r24, r29
     e5a:	9c 2f       	mov	r25, r28
     e5c:	f7 01       	movw	r30, r14
     e5e:	09 95       	icall
     e60:	97 fd       	sbrc	r25, 7
     e62:	0e c0       	rjmp	.+28     	; 0xe80 <med3+0x58>
     e64:	0f c0       	rjmp	.+30     	; 0xe84 <med3+0x5c>
     e66:	c6 01       	movw	r24, r12
     e68:	f7 01       	movw	r30, r14
     e6a:	09 95       	icall
     e6c:	18 16       	cp	r1, r24
     e6e:	19 06       	cpc	r1, r25
     e70:	84 f3       	brlt	.-32     	; 0xe52 <med3+0x2a>
     e72:	b8 01       	movw	r22, r16
     e74:	8d 2f       	mov	r24, r29
     e76:	9c 2f       	mov	r25, r28
     e78:	f7 01       	movw	r30, r14
     e7a:	09 95       	icall
     e7c:	97 fd       	sbrc	r25, 7
     e7e:	02 c0       	rjmp	.+4      	; 0xe84 <med3+0x5c>
     e80:	c8 01       	movw	r24, r16
     e82:	02 c0       	rjmp	.+4      	; 0xe88 <med3+0x60>
     e84:	8d 2f       	mov	r24, r29
     e86:	9c 2f       	mov	r25, r28
     e88:	cd b7       	in	r28, 0x3d	; 61
     e8a:	de b7       	in	r29, 0x3e	; 62
     e8c:	e8 e0       	ldi	r30, 0x08	; 8
     e8e:	0c 94 5f 09 	jmp	0x12be	; 0x12be <__epilogue_restores__+0x14>

00000e92 <qsort>:
     e92:	aa e0       	ldi	r26, 0x0A	; 10
     e94:	b0 e0       	ldi	r27, 0x00	; 0
     e96:	ef e4       	ldi	r30, 0x4F	; 79
     e98:	f7 e0       	ldi	r31, 0x07	; 7
     e9a:	0c 94 39 09 	jmp	0x1272	; 0x1272 <__prologue_saves__>
     e9e:	8c 01       	movw	r16, r24
     ea0:	7b 01       	movw	r14, r22
     ea2:	5a 87       	std	Y+10, r21	; 0x0a
     ea4:	49 87       	std	Y+9, r20	; 0x09
     ea6:	69 01       	movw	r12, r18
     ea8:	51 95       	neg	r21
     eaa:	41 95       	neg	r20
     eac:	51 09       	sbc	r21, r1
     eae:	5e 83       	std	Y+6, r21	; 0x06
     eb0:	4d 83       	std	Y+5, r20	; 0x05
     eb2:	29 85       	ldd	r18, Y+9	; 0x09
     eb4:	3a 85       	ldd	r19, Y+10	; 0x0a
     eb6:	20 0f       	add	r18, r16
     eb8:	31 1f       	adc	r19, r17
     eba:	3a 83       	std	Y+2, r19	; 0x02
     ebc:	29 83       	std	Y+1, r18	; 0x01
     ebe:	37 e0       	ldi	r19, 0x07	; 7
     ec0:	e3 16       	cp	r14, r19
     ec2:	f1 04       	cpc	r15, r1
     ec4:	78 f5       	brcc	.+94     	; 0xf24 <qsort+0x92>
     ec6:	89 80       	ldd	r8, Y+1	; 0x01
     ec8:	9a 80       	ldd	r9, Y+2	; 0x02
     eca:	49 85       	ldd	r20, Y+9	; 0x09
     ecc:	5a 85       	ldd	r21, Y+10	; 0x0a
     ece:	e4 9e       	mul	r14, r20
     ed0:	c0 01       	movw	r24, r0
     ed2:	e5 9e       	mul	r14, r21
     ed4:	90 0d       	add	r25, r0
     ed6:	f4 9e       	mul	r15, r20
     ed8:	90 0d       	add	r25, r0
     eda:	11 24       	eor	r1, r1
     edc:	78 01       	movw	r14, r16
     ede:	e8 0e       	add	r14, r24
     ee0:	f9 1e       	adc	r15, r25
     ee2:	8e 14       	cp	r8, r14
     ee4:	9f 04       	cpc	r9, r15
     ee6:	08 f0       	brcs	.+2      	; 0xeea <qsort+0x58>
     ee8:	77 c1       	rjmp	.+750    	; 0x11d8 <qsort+0x346>
     eea:	34 01       	movw	r6, r8
     eec:	06 15       	cp	r16, r6
     eee:	17 05       	cpc	r17, r7
     ef0:	a0 f4       	brcc	.+40     	; 0xf1a <qsort+0x88>
     ef2:	53 01       	movw	r10, r6
     ef4:	69 85       	ldd	r22, Y+9	; 0x09
     ef6:	7a 85       	ldd	r23, Y+10	; 0x0a
     ef8:	a6 1a       	sub	r10, r22
     efa:	b7 0a       	sbc	r11, r23
     efc:	b3 01       	movw	r22, r6
     efe:	c5 01       	movw	r24, r10
     f00:	f6 01       	movw	r30, r12
     f02:	09 95       	icall
     f04:	18 16       	cp	r1, r24
     f06:	19 06       	cpc	r1, r25
     f08:	44 f4       	brge	.+16     	; 0xf1a <qsort+0x88>
     f0a:	49 85       	ldd	r20, Y+9	; 0x09
     f0c:	5a 85       	ldd	r21, Y+10	; 0x0a
     f0e:	b5 01       	movw	r22, r10
     f10:	c3 01       	movw	r24, r6
     f12:	0e 94 08 07 	call	0xe10	; 0xe10 <swapfunc>
     f16:	35 01       	movw	r6, r10
     f18:	e9 cf       	rjmp	.-46     	; 0xeec <qsort+0x5a>
     f1a:	29 85       	ldd	r18, Y+9	; 0x09
     f1c:	3a 85       	ldd	r19, Y+10	; 0x0a
     f1e:	82 0e       	add	r8, r18
     f20:	93 1e       	adc	r9, r19
     f22:	df cf       	rjmp	.-66     	; 0xee2 <qsort+0x50>
     f24:	c7 01       	movw	r24, r14
     f26:	96 95       	lsr	r25
     f28:	87 95       	ror	r24
     f2a:	49 85       	ldd	r20, Y+9	; 0x09
     f2c:	5a 85       	ldd	r21, Y+10	; 0x0a
     f2e:	84 9f       	mul	r24, r20
     f30:	50 01       	movw	r10, r0
     f32:	85 9f       	mul	r24, r21
     f34:	b0 0c       	add	r11, r0
     f36:	94 9f       	mul	r25, r20
     f38:	b0 0c       	add	r11, r0
     f3a:	11 24       	eor	r1, r1
     f3c:	a0 0e       	add	r10, r16
     f3e:	b1 1e       	adc	r11, r17
     f40:	b7 01       	movw	r22, r14
     f42:	61 50       	subi	r22, 0x01	; 1
     f44:	71 09       	sbc	r23, r1
     f46:	7c 83       	std	Y+4, r23	; 0x04
     f48:	6b 83       	std	Y+3, r22	; 0x03
     f4a:	77 e0       	ldi	r23, 0x07	; 7
     f4c:	e7 16       	cp	r14, r23
     f4e:	f1 04       	cpc	r15, r1
     f50:	09 f4       	brne	.+2      	; 0xf54 <qsort+0xc2>
     f52:	4c c0       	rjmp	.+152    	; 0xfec <qsort+0x15a>
     f54:	8b 81       	ldd	r24, Y+3	; 0x03
     f56:	9c 81       	ldd	r25, Y+4	; 0x04
     f58:	84 9f       	mul	r24, r20
     f5a:	30 01       	movw	r6, r0
     f5c:	85 9f       	mul	r24, r21
     f5e:	70 0c       	add	r7, r0
     f60:	94 9f       	mul	r25, r20
     f62:	70 0c       	add	r7, r0
     f64:	11 24       	eor	r1, r1
     f66:	60 0e       	add	r6, r16
     f68:	71 1e       	adc	r7, r17
     f6a:	99 e2       	ldi	r25, 0x29	; 41
     f6c:	e9 16       	cp	r14, r25
     f6e:	f1 04       	cpc	r15, r1
     f70:	a8 f1       	brcs	.+106    	; 0xfdc <qsort+0x14a>
     f72:	c7 01       	movw	r24, r14
     f74:	23 e0       	ldi	r18, 0x03	; 3
     f76:	96 95       	lsr	r25
     f78:	87 95       	ror	r24
     f7a:	2a 95       	dec	r18
     f7c:	e1 f7       	brne	.-8      	; 0xf76 <qsort+0xe4>
     f7e:	84 9f       	mul	r24, r20
     f80:	40 01       	movw	r8, r0
     f82:	85 9f       	mul	r24, r21
     f84:	90 0c       	add	r9, r0
     f86:	94 9f       	mul	r25, r20
     f88:	90 0c       	add	r9, r0
     f8a:	11 24       	eor	r1, r1
     f8c:	14 01       	movw	r2, r8
     f8e:	22 0c       	add	r2, r2
     f90:	33 1c       	adc	r3, r3
     f92:	a8 01       	movw	r20, r16
     f94:	42 0d       	add	r20, r2
     f96:	53 1d       	adc	r21, r3
     f98:	b8 01       	movw	r22, r16
     f9a:	68 0d       	add	r22, r8
     f9c:	79 1d       	adc	r23, r9
     f9e:	96 01       	movw	r18, r12
     fa0:	c8 01       	movw	r24, r16
     fa2:	0e 94 14 07 	call	0xe28	; 0xe28 <med3>
     fa6:	2c 01       	movw	r4, r24
     fa8:	a5 01       	movw	r20, r10
     faa:	48 0d       	add	r20, r8
     fac:	59 1d       	adc	r21, r9
     fae:	91 94       	neg	r9
     fb0:	81 94       	neg	r8
     fb2:	91 08       	sbc	r9, r1
     fb4:	96 01       	movw	r18, r12
     fb6:	b5 01       	movw	r22, r10
     fb8:	c5 01       	movw	r24, r10
     fba:	88 0d       	add	r24, r8
     fbc:	99 1d       	adc	r25, r9
     fbe:	0e 94 14 07 	call	0xe28	; 0xe28 <med3>
     fc2:	5c 01       	movw	r10, r24
     fc4:	b3 01       	movw	r22, r6
     fc6:	68 0d       	add	r22, r8
     fc8:	79 1d       	adc	r23, r9
     fca:	96 01       	movw	r18, r12
     fcc:	a3 01       	movw	r20, r6
     fce:	c3 01       	movw	r24, r6
     fd0:	82 19       	sub	r24, r2
     fd2:	93 09       	sbc	r25, r3
     fd4:	0e 94 14 07 	call	0xe28	; 0xe28 <med3>
     fd8:	3c 01       	movw	r6, r24
     fda:	01 c0       	rjmp	.+2      	; 0xfde <qsort+0x14c>
     fdc:	28 01       	movw	r4, r16
     fde:	96 01       	movw	r18, r12
     fe0:	a3 01       	movw	r20, r6
     fe2:	b5 01       	movw	r22, r10
     fe4:	c2 01       	movw	r24, r4
     fe6:	0e 94 14 07 	call	0xe28	; 0xe28 <med3>
     fea:	5c 01       	movw	r10, r24
     fec:	49 85       	ldd	r20, Y+9	; 0x09
     fee:	5a 85       	ldd	r21, Y+10	; 0x0a
     ff0:	b5 01       	movw	r22, r10
     ff2:	c8 01       	movw	r24, r16
     ff4:	0e 94 08 07 	call	0xe10	; 0xe10 <swapfunc>
     ff8:	89 80       	ldd	r8, Y+1	; 0x01
     ffa:	9a 80       	ldd	r9, Y+2	; 0x02
     ffc:	4b 81       	ldd	r20, Y+3	; 0x03
     ffe:	5c 81       	ldd	r21, Y+4	; 0x04
    1000:	69 85       	ldd	r22, Y+9	; 0x09
    1002:	7a 85       	ldd	r23, Y+10	; 0x0a
    1004:	46 9f       	mul	r20, r22
    1006:	90 01       	movw	r18, r0
    1008:	47 9f       	mul	r20, r23
    100a:	30 0d       	add	r19, r0
    100c:	56 9f       	mul	r21, r22
    100e:	30 0d       	add	r19, r0
    1010:	11 24       	eor	r1, r1
    1012:	3a 83       	std	Y+2, r19	; 0x02
    1014:	29 83       	std	Y+1, r18	; 0x01
    1016:	39 01       	movw	r6, r18
    1018:	60 0e       	add	r6, r16
    101a:	71 1e       	adc	r7, r17
    101c:	23 01       	movw	r4, r6
    101e:	54 01       	movw	r10, r8
    1020:	14 01       	movw	r2, r8
    1022:	20 e0       	ldi	r18, 0x00	; 0
    1024:	30 e0       	ldi	r19, 0x00	; 0
    1026:	6a 14       	cp	r6, r10
    1028:	7b 04       	cpc	r7, r11
    102a:	08 f4       	brcc	.+2      	; 0x102e <qsort+0x19c>
    102c:	3f c0       	rjmp	.+126    	; 0x10ac <qsort+0x21a>
    102e:	b8 01       	movw	r22, r16
    1030:	c5 01       	movw	r24, r10
    1032:	2f 83       	std	Y+7, r18	; 0x07
    1034:	38 87       	std	Y+8, r19	; 0x08
    1036:	f6 01       	movw	r30, r12
    1038:	09 95       	icall
    103a:	2f 81       	ldd	r18, Y+7	; 0x07
    103c:	38 85       	ldd	r19, Y+8	; 0x08
    103e:	18 16       	cp	r1, r24
    1040:	19 06       	cpc	r1, r25
    1042:	a4 f1       	brlt	.+104    	; 0x10ac <qsort+0x21a>
    1044:	89 2b       	or	r24, r25
    1046:	61 f4       	brne	.+24     	; 0x1060 <qsort+0x1ce>
    1048:	49 85       	ldd	r20, Y+9	; 0x09
    104a:	5a 85       	ldd	r21, Y+10	; 0x0a
    104c:	b5 01       	movw	r22, r10
    104e:	c1 01       	movw	r24, r2
    1050:	0e 94 08 07 	call	0xe10	; 0xe10 <swapfunc>
    1054:	89 85       	ldd	r24, Y+9	; 0x09
    1056:	9a 85       	ldd	r25, Y+10	; 0x0a
    1058:	28 0e       	add	r2, r24
    105a:	39 1e       	adc	r3, r25
    105c:	21 e0       	ldi	r18, 0x01	; 1
    105e:	30 e0       	ldi	r19, 0x00	; 0
    1060:	e9 85       	ldd	r30, Y+9	; 0x09
    1062:	fa 85       	ldd	r31, Y+10	; 0x0a
    1064:	ae 0e       	add	r10, r30
    1066:	bf 1e       	adc	r11, r31
    1068:	de cf       	rjmp	.-68     	; 0x1026 <qsort+0x194>
    106a:	b8 01       	movw	r22, r16
    106c:	c3 01       	movw	r24, r6
    106e:	2f 83       	std	Y+7, r18	; 0x07
    1070:	38 87       	std	Y+8, r19	; 0x08
    1072:	f6 01       	movw	r30, r12
    1074:	09 95       	icall
    1076:	a3 01       	movw	r20, r6
    1078:	69 85       	ldd	r22, Y+9	; 0x09
    107a:	7a 85       	ldd	r23, Y+10	; 0x0a
    107c:	46 1b       	sub	r20, r22
    107e:	57 0b       	sbc	r21, r23
    1080:	5c 83       	std	Y+4, r21	; 0x04
    1082:	4b 83       	std	Y+3, r20	; 0x03
    1084:	2f 81       	ldd	r18, Y+7	; 0x07
    1086:	38 85       	ldd	r19, Y+8	; 0x08
    1088:	97 fd       	sbrc	r25, 7
    108a:	14 c0       	rjmp	.+40     	; 0x10b4 <qsort+0x222>
    108c:	89 2b       	or	r24, r25
    108e:	61 f4       	brne	.+24     	; 0x10a8 <qsort+0x216>
    1090:	49 85       	ldd	r20, Y+9	; 0x09
    1092:	5a 85       	ldd	r21, Y+10	; 0x0a
    1094:	b2 01       	movw	r22, r4
    1096:	c3 01       	movw	r24, r6
    1098:	0e 94 08 07 	call	0xe10	; 0xe10 <swapfunc>
    109c:	29 85       	ldd	r18, Y+9	; 0x09
    109e:	3a 85       	ldd	r19, Y+10	; 0x0a
    10a0:	42 1a       	sub	r4, r18
    10a2:	53 0a       	sbc	r5, r19
    10a4:	21 e0       	ldi	r18, 0x01	; 1
    10a6:	30 e0       	ldi	r19, 0x00	; 0
    10a8:	6b 80       	ldd	r6, Y+3	; 0x03
    10aa:	7c 80       	ldd	r7, Y+4	; 0x04
    10ac:	6a 14       	cp	r6, r10
    10ae:	7b 04       	cpc	r7, r11
    10b0:	e0 f6       	brcc	.-72     	; 0x106a <qsort+0x1d8>
    10b2:	0f c0       	rjmp	.+30     	; 0x10d2 <qsort+0x240>
    10b4:	49 85       	ldd	r20, Y+9	; 0x09
    10b6:	5a 85       	ldd	r21, Y+10	; 0x0a
    10b8:	b3 01       	movw	r22, r6
    10ba:	c5 01       	movw	r24, r10
    10bc:	0e 94 08 07 	call	0xe10	; 0xe10 <swapfunc>
    10c0:	49 85       	ldd	r20, Y+9	; 0x09
    10c2:	5a 85       	ldd	r21, Y+10	; 0x0a
    10c4:	a4 0e       	add	r10, r20
    10c6:	b5 1e       	adc	r11, r21
    10c8:	6b 80       	ldd	r6, Y+3	; 0x03
    10ca:	7c 80       	ldd	r7, Y+4	; 0x04
    10cc:	21 e0       	ldi	r18, 0x01	; 1
    10ce:	30 e0       	ldi	r19, 0x00	; 0
    10d0:	aa cf       	rjmp	.-172    	; 0x1026 <qsort+0x194>
    10d2:	23 2b       	or	r18, r19
    10d4:	69 f5       	brne	.+90     	; 0x1130 <qsort+0x29e>
    10d6:	e9 85       	ldd	r30, Y+9	; 0x09
    10d8:	fa 85       	ldd	r31, Y+10	; 0x0a
    10da:	ee 9e       	mul	r14, r30
    10dc:	c0 01       	movw	r24, r0
    10de:	ef 9e       	mul	r14, r31
    10e0:	90 0d       	add	r25, r0
    10e2:	fe 9e       	mul	r15, r30
    10e4:	90 0d       	add	r25, r0
    10e6:	11 24       	eor	r1, r1
    10e8:	78 01       	movw	r14, r16
    10ea:	e8 0e       	add	r14, r24
    10ec:	f9 1e       	adc	r15, r25
    10ee:	8e 14       	cp	r8, r14
    10f0:	9f 04       	cpc	r9, r15
    10f2:	08 f0       	brcs	.+2      	; 0x10f6 <qsort+0x264>
    10f4:	71 c0       	rjmp	.+226    	; 0x11d8 <qsort+0x346>
    10f6:	34 01       	movw	r6, r8
    10f8:	06 15       	cp	r16, r6
    10fa:	17 05       	cpc	r17, r7
    10fc:	a0 f4       	brcc	.+40     	; 0x1126 <qsort+0x294>
    10fe:	53 01       	movw	r10, r6
    1100:	29 85       	ldd	r18, Y+9	; 0x09
    1102:	3a 85       	ldd	r19, Y+10	; 0x0a
    1104:	a2 1a       	sub	r10, r18
    1106:	b3 0a       	sbc	r11, r19
    1108:	b3 01       	movw	r22, r6
    110a:	c5 01       	movw	r24, r10
    110c:	f6 01       	movw	r30, r12
    110e:	09 95       	icall
    1110:	18 16       	cp	r1, r24
    1112:	19 06       	cpc	r1, r25
    1114:	44 f4       	brge	.+16     	; 0x1126 <qsort+0x294>
    1116:	49 85       	ldd	r20, Y+9	; 0x09
    1118:	5a 85       	ldd	r21, Y+10	; 0x0a
    111a:	b5 01       	movw	r22, r10
    111c:	c3 01       	movw	r24, r6
    111e:	0e 94 08 07 	call	0xe10	; 0xe10 <swapfunc>
    1122:	35 01       	movw	r6, r10
    1124:	e9 cf       	rjmp	.-46     	; 0x10f8 <qsort+0x266>
    1126:	29 85       	ldd	r18, Y+9	; 0x09
    1128:	3a 85       	ldd	r19, Y+10	; 0x0a
    112a:	82 0e       	add	r8, r18
    112c:	93 1e       	adc	r9, r19
    112e:	df cf       	rjmp	.-66     	; 0x10ee <qsort+0x25c>
    1130:	89 81       	ldd	r24, Y+1	; 0x01
    1132:	9a 81       	ldd	r25, Y+2	; 0x02
    1134:	4d 81       	ldd	r20, Y+5	; 0x05
    1136:	5e 81       	ldd	r21, Y+6	; 0x06
    1138:	84 1b       	sub	r24, r20
    113a:	95 0b       	sbc	r25, r21
    113c:	b8 01       	movw	r22, r16
    113e:	68 0f       	add	r22, r24
    1140:	79 1f       	adc	r23, r25
    1142:	7a 83       	std	Y+2, r23	; 0x02
    1144:	69 83       	std	Y+1, r22	; 0x01
    1146:	75 01       	movw	r14, r10
    1148:	e2 18       	sub	r14, r2
    114a:	f3 08       	sbc	r15, r3
    114c:	a1 01       	movw	r20, r2
    114e:	40 1b       	sub	r20, r16
    1150:	51 0b       	sbc	r21, r17
    1152:	e4 16       	cp	r14, r20
    1154:	f5 06       	cpc	r15, r21
    1156:	0c f4       	brge	.+2      	; 0x115a <qsort+0x2c8>
    1158:	a7 01       	movw	r20, r14
    115a:	14 16       	cp	r1, r20
    115c:	15 06       	cpc	r1, r21
    115e:	34 f4       	brge	.+12     	; 0x116c <qsort+0x2da>
    1160:	b5 01       	movw	r22, r10
    1162:	64 1b       	sub	r22, r20
    1164:	75 0b       	sbc	r23, r21
    1166:	c8 01       	movw	r24, r16
    1168:	0e 94 08 07 	call	0xe10	; 0xe10 <swapfunc>
    116c:	42 01       	movw	r8, r4
    116e:	86 18       	sub	r8, r6
    1170:	97 08       	sbc	r9, r7
    1172:	49 81       	ldd	r20, Y+1	; 0x01
    1174:	5a 81       	ldd	r21, Y+2	; 0x02
    1176:	44 19       	sub	r20, r4
    1178:	55 09       	sbc	r21, r5
    117a:	89 85       	ldd	r24, Y+9	; 0x09
    117c:	9a 85       	ldd	r25, Y+10	; 0x0a
    117e:	48 1b       	sub	r20, r24
    1180:	59 0b       	sbc	r21, r25
    1182:	84 16       	cp	r8, r20
    1184:	95 06       	cpc	r9, r21
    1186:	08 f4       	brcc	.+2      	; 0x118a <qsort+0x2f8>
    1188:	a4 01       	movw	r20, r8
    118a:	14 16       	cp	r1, r20
    118c:	15 06       	cpc	r1, r21
    118e:	3c f4       	brge	.+14     	; 0x119e <qsort+0x30c>
    1190:	69 81       	ldd	r22, Y+1	; 0x01
    1192:	7a 81       	ldd	r23, Y+2	; 0x02
    1194:	64 1b       	sub	r22, r20
    1196:	75 0b       	sbc	r23, r21
    1198:	c5 01       	movw	r24, r10
    119a:	0e 94 08 07 	call	0xe10	; 0xe10 <swapfunc>
    119e:	e9 85       	ldd	r30, Y+9	; 0x09
    11a0:	fa 85       	ldd	r31, Y+10	; 0x0a
    11a2:	ee 15       	cp	r30, r14
    11a4:	ff 05       	cpc	r31, r15
    11a6:	48 f4       	brcc	.+18     	; 0x11ba <qsort+0x328>
    11a8:	c7 01       	movw	r24, r14
    11aa:	bf 01       	movw	r22, r30
    11ac:	0e 94 25 09 	call	0x124a	; 0x124a <__udivmodhi4>
    11b0:	96 01       	movw	r18, r12
    11b2:	af 01       	movw	r20, r30
    11b4:	c8 01       	movw	r24, r16
    11b6:	0e 94 49 07 	call	0xe92	; 0xe92 <qsort>
    11ba:	29 85       	ldd	r18, Y+9	; 0x09
    11bc:	3a 85       	ldd	r19, Y+10	; 0x0a
    11be:	28 15       	cp	r18, r8
    11c0:	39 05       	cpc	r19, r9
    11c2:	50 f4       	brcc	.+20     	; 0x11d8 <qsort+0x346>
    11c4:	09 81       	ldd	r16, Y+1	; 0x01
    11c6:	1a 81       	ldd	r17, Y+2	; 0x02
    11c8:	08 19       	sub	r16, r8
    11ca:	19 09       	sbc	r17, r9
    11cc:	c4 01       	movw	r24, r8
    11ce:	b9 01       	movw	r22, r18
    11d0:	0e 94 25 09 	call	0x124a	; 0x124a <__udivmodhi4>
    11d4:	7b 01       	movw	r14, r22
    11d6:	6d ce       	rjmp	.-806    	; 0xeb2 <qsort+0x20>
    11d8:	2a 96       	adiw	r28, 0x0a	; 10
    11da:	e2 e1       	ldi	r30, 0x12	; 18
    11dc:	0c 94 55 09 	jmp	0x12aa	; 0x12aa <__epilogue_restores__>

000011e0 <__itoa_ncheck>:
    11e0:	bb 27       	eor	r27, r27
    11e2:	4a 30       	cpi	r20, 0x0A	; 10
    11e4:	31 f4       	brne	.+12     	; 0x11f2 <__itoa_ncheck+0x12>
    11e6:	99 23       	and	r25, r25
    11e8:	22 f4       	brpl	.+8      	; 0x11f2 <__itoa_ncheck+0x12>
    11ea:	bd e2       	ldi	r27, 0x2D	; 45
    11ec:	90 95       	com	r25
    11ee:	81 95       	neg	r24
    11f0:	9f 4f       	sbci	r25, 0xFF	; 255
    11f2:	0c 94 fc 08 	jmp	0x11f8	; 0x11f8 <__utoa_common>

000011f6 <__utoa_ncheck>:
    11f6:	bb 27       	eor	r27, r27

000011f8 <__utoa_common>:
    11f8:	fb 01       	movw	r30, r22
    11fa:	55 27       	eor	r21, r21
    11fc:	aa 27       	eor	r26, r26
    11fe:	88 0f       	add	r24, r24
    1200:	99 1f       	adc	r25, r25
    1202:	aa 1f       	adc	r26, r26
    1204:	a4 17       	cp	r26, r20
    1206:	10 f0       	brcs	.+4      	; 0x120c <__utoa_common+0x14>
    1208:	a4 1b       	sub	r26, r20
    120a:	83 95       	inc	r24
    120c:	50 51       	subi	r21, 0x10	; 16
    120e:	b9 f7       	brne	.-18     	; 0x11fe <__utoa_common+0x6>
    1210:	a0 5d       	subi	r26, 0xD0	; 208
    1212:	aa 33       	cpi	r26, 0x3A	; 58
    1214:	08 f0       	brcs	.+2      	; 0x1218 <__utoa_common+0x20>
    1216:	a9 5d       	subi	r26, 0xD9	; 217
    1218:	a1 93       	st	Z+, r26
    121a:	00 97       	sbiw	r24, 0x00	; 0
    121c:	79 f7       	brne	.-34     	; 0x11fc <__utoa_common+0x4>
    121e:	b1 11       	cpse	r27, r1
    1220:	b1 93       	st	Z+, r27
    1222:	11 92       	st	Z+, r1
    1224:	cb 01       	movw	r24, r22
    1226:	0c 94 15 09 	jmp	0x122a	; 0x122a <strrev>

0000122a <strrev>:
    122a:	dc 01       	movw	r26, r24
    122c:	fc 01       	movw	r30, r24
    122e:	67 2f       	mov	r22, r23
    1230:	71 91       	ld	r23, Z+
    1232:	77 23       	and	r23, r23
    1234:	e1 f7       	brne	.-8      	; 0x122e <strrev+0x4>
    1236:	32 97       	sbiw	r30, 0x02	; 2
    1238:	04 c0       	rjmp	.+8      	; 0x1242 <strrev+0x18>
    123a:	7c 91       	ld	r23, X
    123c:	6d 93       	st	X+, r22
    123e:	70 83       	st	Z, r23
    1240:	62 91       	ld	r22, -Z
    1242:	ae 17       	cp	r26, r30
    1244:	bf 07       	cpc	r27, r31
    1246:	c8 f3       	brcs	.-14     	; 0x123a <strrev+0x10>
    1248:	08 95       	ret

0000124a <__udivmodhi4>:
    124a:	aa 1b       	sub	r26, r26
    124c:	bb 1b       	sub	r27, r27
    124e:	51 e1       	ldi	r21, 0x11	; 17
    1250:	07 c0       	rjmp	.+14     	; 0x1260 <__udivmodhi4_ep>

00001252 <__udivmodhi4_loop>:
    1252:	aa 1f       	adc	r26, r26
    1254:	bb 1f       	adc	r27, r27
    1256:	a6 17       	cp	r26, r22
    1258:	b7 07       	cpc	r27, r23
    125a:	10 f0       	brcs	.+4      	; 0x1260 <__udivmodhi4_ep>
    125c:	a6 1b       	sub	r26, r22
    125e:	b7 0b       	sbc	r27, r23

00001260 <__udivmodhi4_ep>:
    1260:	88 1f       	adc	r24, r24
    1262:	99 1f       	adc	r25, r25
    1264:	5a 95       	dec	r21
    1266:	a9 f7       	brne	.-22     	; 0x1252 <__udivmodhi4_loop>
    1268:	80 95       	com	r24
    126a:	90 95       	com	r25
    126c:	bc 01       	movw	r22, r24
    126e:	cd 01       	movw	r24, r26
    1270:	08 95       	ret

00001272 <__prologue_saves__>:
    1272:	2f 92       	push	r2
    1274:	3f 92       	push	r3
    1276:	4f 92       	push	r4
    1278:	5f 92       	push	r5
    127a:	6f 92       	push	r6
    127c:	7f 92       	push	r7
    127e:	8f 92       	push	r8
    1280:	9f 92       	push	r9
    1282:	af 92       	push	r10
    1284:	bf 92       	push	r11
    1286:	cf 92       	push	r12
    1288:	df 92       	push	r13
    128a:	ef 92       	push	r14
    128c:	ff 92       	push	r15
    128e:	0f 93       	push	r16
    1290:	1f 93       	push	r17
    1292:	cf 93       	push	r28
    1294:	df 93       	push	r29
    1296:	cd b7       	in	r28, 0x3d	; 61
    1298:	de b7       	in	r29, 0x3e	; 62
    129a:	ca 1b       	sub	r28, r26
    129c:	db 0b       	sbc	r29, r27
    129e:	0f b6       	in	r0, 0x3f	; 63
    12a0:	f8 94       	cli
    12a2:	de bf       	out	0x3e, r29	; 62
    12a4:	0f be       	out	0x3f, r0	; 63
    12a6:	cd bf       	out	0x3d, r28	; 61
    12a8:	09 94       	ijmp

000012aa <__epilogue_restores__>:
    12aa:	2a 88       	ldd	r2, Y+18	; 0x12
    12ac:	39 88       	ldd	r3, Y+17	; 0x11
    12ae:	48 88       	ldd	r4, Y+16	; 0x10
    12b0:	5f 84       	ldd	r5, Y+15	; 0x0f
    12b2:	6e 84       	ldd	r6, Y+14	; 0x0e
    12b4:	7d 84       	ldd	r7, Y+13	; 0x0d
    12b6:	8c 84       	ldd	r8, Y+12	; 0x0c
    12b8:	9b 84       	ldd	r9, Y+11	; 0x0b
    12ba:	aa 84       	ldd	r10, Y+10	; 0x0a
    12bc:	b9 84       	ldd	r11, Y+9	; 0x09
    12be:	c8 84       	ldd	r12, Y+8	; 0x08
    12c0:	df 80       	ldd	r13, Y+7	; 0x07
    12c2:	ee 80       	ldd	r14, Y+6	; 0x06
    12c4:	fd 80       	ldd	r15, Y+5	; 0x05
    12c6:	0c 81       	ldd	r16, Y+4	; 0x04
    12c8:	1b 81       	ldd	r17, Y+3	; 0x03
    12ca:	aa 81       	ldd	r26, Y+2	; 0x02
    12cc:	b9 81       	ldd	r27, Y+1	; 0x01
    12ce:	ce 0f       	add	r28, r30
    12d0:	d1 1d       	adc	r29, r1
    12d2:	0f b6       	in	r0, 0x3f	; 63
    12d4:	f8 94       	cli
    12d6:	de bf       	out	0x3e, r29	; 62
    12d8:	0f be       	out	0x3f, r0	; 63
    12da:	cd bf       	out	0x3d, r28	; 61
    12dc:	ed 01       	movw	r28, r26
    12de:	08 95       	ret

000012e0 <_exit>:
    12e0:	f8 94       	cli

000012e2 <__stop_program>:
    12e2:	ff cf       	rjmp	.-2      	; 0x12e2 <__stop_program>
